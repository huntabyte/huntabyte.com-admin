import { z } from "zod";
import * as PrismaClient from "@prisma/client";

/////////////////////////////////////////
// ENUMS
/////////////////////////////////////////

// PRISMA GENERATED ENUMS
//------------------------------------------------------

export const CourseScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.CourseScalarFieldEnum);

export const Directus_activityScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_activityScalarFieldEnum);

export const Directus_collectionsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_collectionsScalarFieldEnum);

export const Directus_dashboardsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_dashboardsScalarFieldEnum);

export const Directus_fieldsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_fieldsScalarFieldEnum);

export const Directus_filesScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_filesScalarFieldEnum);

export const Directus_flowsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_flowsScalarFieldEnum);

export const Directus_foldersScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_foldersScalarFieldEnum);

export const Directus_migrationsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_migrationsScalarFieldEnum);

export const Directus_notificationsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_notificationsScalarFieldEnum);

export const Directus_operationsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_operationsScalarFieldEnum);

export const Directus_panelsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_panelsScalarFieldEnum);

export const Directus_permissionsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_permissionsScalarFieldEnum);

export const Directus_presetsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_presetsScalarFieldEnum);

export const Directus_relationsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_relationsScalarFieldEnum);

export const Directus_revisionsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_revisionsScalarFieldEnum);

export const Directus_rolesScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_rolesScalarFieldEnum);

export const Directus_sessionsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_sessionsScalarFieldEnum);

export const Directus_settingsScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_settingsScalarFieldEnum);

export const Directus_sharesScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_sharesScalarFieldEnum);

export const Directus_usersScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_usersScalarFieldEnum);

export const Directus_webhooksScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.Directus_webhooksScalarFieldEnum);

export const JsonNullValueFilterSchema = z.enum(['DbNull', 'JsonNull', 'AnyNull',]);

export const LessonScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.LessonScalarFieldEnum);

export const LessonTypeScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.LessonTypeScalarFieldEnum);

export const ModuleScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.ModuleScalarFieldEnum);

export const NullableJsonNullValueInputSchema = z.enum(['DbNull', 'JsonNull',]).transform((v) => transformJsonNull(v));

export const QueryModeSchema = z.nativeEnum(PrismaClient.Prisma.QueryMode);

export const SortOrderSchema = z.nativeEnum(PrismaClient.Prisma.SortOrder);

export const TransactionIsolationLevelSchema = z.nativeEnum(PrismaClient.Prisma.TransactionIsolationLevel);

export const UserScalarFieldEnumSchema = z.nativeEnum(PrismaClient.Prisma.UserScalarFieldEnum);

// CUSTOM ENUMS
//------------------------------------------------------

export const RoleSchema = z.nativeEnum(PrismaClient.Role);

/////////////////////////////////////////
// HELPER TYPES
/////////////////////////////////////////

type NullableJsonInput = PrismaClient.Prisma.JsonValue | null | 'JsonNull' | 'DbNull' | PrismaClient.Prisma.NullTypes.DbNull | PrismaClient.Prisma.NullTypes.JsonNull;

export const transformJsonNull = (v?: NullableJsonInput) => {
  if (!v || v === 'DbNull') return PrismaClient.Prisma.DbNull;
  if (v === 'JsonNull') return PrismaClient.Prisma.JsonNull;
  return v;
};

export const JsonValue: z.ZodType<PrismaClient.Prisma.JsonValue> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => z.array(JsonValue)),
  z.lazy(() => z.record(JsonValue)),
]);

export const NullableJsonValue = z
  .union([JsonValue, z.literal('DbNull'), z.literal('JsonNull')])
  .nullable()
  .transform((v) => transformJsonNull(v));

export const InputJsonValue: z.ZodType<PrismaClient.Prisma.InputJsonValue> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => z.array(InputJsonValue.nullable())),
  z.lazy(() => z.record(InputJsonValue.nullable())),
]);

/////////////////////////////////////////
// MODELS
/////////////////////////////////////////

// USER
//------------------------------------------------------

export const UserSchema = z.object({
  role: RoleSchema,
  id: z.string(),
  email: z.string(),
  name: z.string().nullish(),
  customerId: z.string().nullish(),
  createdAt: z.date(),
  updatedAt: z.date(),
});

// COURSE
//------------------------------------------------------

export const CourseSchema = z.object({
  id: z.number().int(),
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().nullish(),
  status: z.string(),
  lastRevised: z.date(),
  createdAt: z.date(),
  updatedAt: z.date(),
});

// MODULE
//------------------------------------------------------

export const ModuleSchema = z.object({
  id: z.number().int(),
  title: z.string(),
  overview: z.string().nullish(),
  slug: z.string(),
  status: z.string(),
  courseId: z.number().int(),
  createdAt: z.date(),
  updatedAt: z.date(),
  sortOrder: z.number().int(),
});

// LESSON
//------------------------------------------------------

export const LessonSchema = z.object({
  id: z.number().int(),
  title: z.string(),
  overview: z.string(),
  videoUrl: z.string().nullish(),
  slug: z.string(),
  status: z.string(),
  content: z.string(),
  moduleId: z.number().int(),
  contentType: z.string(),
  createdAt: z.date(),
  updatedAt: z.date(),
  isFree: z.boolean(),
  sortOrder: z.number().int(),
  lessonTypeId: z.number().int(),
});

// LESSON TYPE
//------------------------------------------------------

export const LessonTypeSchema = z.object({
  id: z.number().int(),
  name: z.string(),
});

// DIRECTUS ACTIVITY
//------------------------------------------------------

export const directus_activitySchema = z.object({
  id: z.number().int(),
  action: z.string(),
  user: z.string().nullish(),
  timestamp: z.date(),
  ip: z.string().nullish(),
  user_agent: z.string().nullish(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().nullish(),
  origin: z.string().nullish(),
});

// DIRECTUS COLLECTIONS
//------------------------------------------------------

export const directus_collectionsSchema = z.object({
  collection: z.string(),
  icon: z.string().nullish(),
  note: z.string().nullish(),
  display_template: z.string().nullish(),
  hidden: z.boolean(),
  singleton: z.boolean(),
  translations: NullableJsonValue.optional(),
  archive_field: z.string().nullish(),
  archive_app_filter: z.boolean(),
  archive_value: z.string().nullish(),
  unarchive_value: z.string().nullish(),
  sort_field: z.string().nullish(),
  accountability: z.string().nullish(),
  color: z.string().nullish(),
  item_duplication_fields: NullableJsonValue.optional(),
  sort: z.number().int().nullish(),
  group: z.string().nullish(),
  collapse: z.string(),
});

// DIRECTUS DASHBOARDS
//------------------------------------------------------

export const directus_dashboardsSchema = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string(),
  note: z.string().nullish(),
  date_created: z.date().nullish(),
  user_created: z.string().nullish(),
  color: z.string().nullish(),
});

// DIRECTUS FIELDS
//------------------------------------------------------

export const directus_fieldsSchema = z.object({
  id: z.number().int(),
  collection: z.string(),
  field: z.string(),
  special: z.string().nullish(),
  interface: z.string().nullish(),
  options: NullableJsonValue.optional(),
  display: z.string().nullish(),
  display_options: NullableJsonValue.optional(),
  readonly: z.boolean(),
  hidden: z.boolean(),
  sort: z.number().int().nullish(),
  width: z.string().nullish(),
  translations: NullableJsonValue.optional(),
  note: z.string().nullish(),
  conditions: NullableJsonValue.optional(),
  required: z.boolean().nullish(),
  group: z.string().nullish(),
  validation: NullableJsonValue.optional(),
  validation_message: z.string().nullish(),
});

// DIRECTUS FILES
//------------------------------------------------------

export const directus_filesSchema = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().nullish(),
  filename_download: z.string(),
  title: z.string().nullish(),
  type: z.string().nullish(),
  folder: z.string().nullish(),
  uploaded_by: z.string().nullish(),
  uploaded_on: z.date(),
  modified_by: z.string().nullish(),
  modified_on: z.date(),
  charset: z.string().nullish(),
  filesize: z.bigint().nullish(),
  width: z.number().int().nullish(),
  height: z.number().int().nullish(),
  duration: z.number().int().nullish(),
  embed: z.string().nullish(),
  description: z.string().nullish(),
  location: z.string().nullish(),
  tags: z.string().nullish(),
  metadata: NullableJsonValue.optional(),
});

// DIRECTUS FLOWS
//------------------------------------------------------

export const directus_flowsSchema = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().nullish(),
  color: z.string().nullish(),
  description: z.string().nullish(),
  status: z.string(),
  trigger: z.string().nullish(),
  accountability: z.string().nullish(),
  options: NullableJsonValue.optional(),
  operation: z.string().nullish(),
  date_created: z.date().nullish(),
  user_created: z.string().nullish(),
});

// DIRECTUS FOLDERS
//------------------------------------------------------

export const directus_foldersSchema = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().nullish(),
});

// DIRECTUS MIGRATIONS
//------------------------------------------------------

export const directus_migrationsSchema = z.object({
  version: z.string(),
  name: z.string(),
  timestamp: z.date().nullish(),
});

// DIRECTUS NOTIFICATIONS
//------------------------------------------------------

export const directus_notificationsSchema = z.object({
  id: z.number().int(),
  timestamp: z.date().nullish(),
  status: z.string().nullish(),
  recipient: z.string(),
  sender: z.string().nullish(),
  subject: z.string(),
  message: z.string().nullish(),
  collection: z.string().nullish(),
  item: z.string().nullish(),
});

// DIRECTUS OPERATIONS
//------------------------------------------------------

export const directus_operationsSchema = z.object({
  id: z.string(),
  name: z.string().nullish(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: NullableJsonValue.optional(),
  resolve: z.string().nullish(),
  reject: z.string().nullish(),
  flow: z.string(),
  date_created: z.date().nullish(),
  user_created: z.string().nullish(),
});

// DIRECTUS PANELS
//------------------------------------------------------

export const directus_panelsSchema = z.object({
  id: z.string(),
  dashboard: z.string(),
  name: z.string().nullish(),
  icon: z.string().nullish(),
  color: z.string().nullish(),
  show_header: z.boolean(),
  note: z.string().nullish(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: NullableJsonValue.optional(),
  date_created: z.date().nullish(),
  user_created: z.string().nullish(),
});

// DIRECTUS PERMISSIONS
//------------------------------------------------------

export const directus_permissionsSchema = z.object({
  id: z.number().int(),
  role: z.string().nullish(),
  collection: z.string(),
  action: z.string(),
  permissions: NullableJsonValue.optional(),
  validation: NullableJsonValue.optional(),
  presets: NullableJsonValue.optional(),
  fields: z.string().nullish(),
});

// DIRECTUS PRESETS
//------------------------------------------------------

export const directus_presetsSchema = z.object({
  id: z.number().int(),
  bookmark: z.string().nullish(),
  user: z.string().nullish(),
  role: z.string().nullish(),
  collection: z.string().nullish(),
  search: z.string().nullish(),
  layout: z.string().nullish(),
  layout_query: NullableJsonValue.optional(),
  layout_options: NullableJsonValue.optional(),
  refresh_interval: z.number().int().nullish(),
  filter: NullableJsonValue.optional(),
  icon: z.string(),
  color: z.string().nullish(),
});

// DIRECTUS RELATIONS
//------------------------------------------------------

export const directus_relationsSchema = z.object({
  id: z.number().int(),
  many_collection: z.string(),
  many_field: z.string(),
  one_collection: z.string().nullish(),
  one_field: z.string().nullish(),
  one_collection_field: z.string().nullish(),
  one_allowed_collections: z.string().nullish(),
  junction_field: z.string().nullish(),
  sort_field: z.string().nullish(),
  one_deselect_action: z.string(),
});

// DIRECTUS REVISIONS
//------------------------------------------------------

export const directus_revisionsSchema = z.object({
  id: z.number().int(),
  activity: z.number().int(),
  collection: z.string(),
  item: z.string(),
  data: NullableJsonValue.optional(),
  delta: NullableJsonValue.optional(),
  parent: z.number().int().nullish(),
});

// DIRECTUS ROLES
//------------------------------------------------------

export const directus_rolesSchema = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string(),
  description: z.string().nullish(),
  ip_access: z.string().nullish(),
  enforce_tfa: z.boolean(),
  admin_access: z.boolean(),
  app_access: z.boolean(),
});

// DIRECTUS SESSIONS
//------------------------------------------------------

export const directus_sessionsSchema = z.object({
  token: z.string(),
  user: z.string().nullish(),
  expires: z.date(),
  ip: z.string().nullish(),
  user_agent: z.string().nullish(),
  share: z.string().nullish(),
  origin: z.string().nullish(),
});

// DIRECTUS SETTINGS
//------------------------------------------------------

export const directus_settingsSchema = z.object({
  id: z.number().int(),
  project_name: z.string(),
  project_url: z.string().nullish(),
  project_color: z.string().nullish(),
  project_logo: z.string().nullish(),
  public_foreground: z.string().nullish(),
  public_background: z.string().nullish(),
  public_note: z.string().nullish(),
  auth_login_attempts: z.number().int().nullish(),
  auth_password_policy: z.string().nullish(),
  storage_asset_transform: z.string().nullish(),
  storage_asset_presets: NullableJsonValue.optional(),
  custom_css: z.string().nullish(),
  storage_default_folder: z.string().nullish(),
  basemaps: NullableJsonValue.optional(),
  mapbox_key: z.string().nullish(),
  module_bar: NullableJsonValue.optional(),
  project_descriptor: z.string().nullish(),
  translation_strings: NullableJsonValue.optional(),
  default_language: z.string(),
  custom_aspect_ratios: NullableJsonValue.optional(),
});

// DIRECTUS SHARES
//------------------------------------------------------

export const directus_sharesSchema = z.object({
  id: z.string(),
  name: z.string().nullish(),
  collection: z.string().nullish(),
  item: z.string().nullish(),
  role: z.string().nullish(),
  password: z.string().nullish(),
  user_created: z.string().nullish(),
  date_created: z.date().nullish(),
  date_start: z.date().nullish(),
  date_end: z.date().nullish(),
  times_used: z.number().int().nullish(),
  max_uses: z.number().int().nullish(),
});

// DIRECTUS USERS
//------------------------------------------------------

export const directus_usersSchema = z.object({
  id: z.string(),
  first_name: z.string().nullish(),
  last_name: z.string().nullish(),
  email: z.string().nullish(),
  password: z.string().nullish(),
  location: z.string().nullish(),
  title: z.string().nullish(),
  description: z.string().nullish(),
  tags: NullableJsonValue.optional(),
  avatar: z.string().nullish(),
  language: z.string().nullish(),
  theme: z.string().nullish(),
  tfa_secret: z.string().nullish(),
  status: z.string(),
  role: z.string().nullish(),
  token: z.string().nullish(),
  last_access: z.date().nullish(),
  last_page: z.string().nullish(),
  provider: z.string(),
  external_identifier: z.string().nullish(),
  auth_data: NullableJsonValue.optional(),
  email_notifications: z.boolean().nullish(),
});

// DIRECTUS WEBHOOKS
//------------------------------------------------------

export const directus_webhooksSchema = z.object({
  id: z.number().int(),
  name: z.string(),
  method: z.string(),
  url: z.string(),
  status: z.string(),
  data: z.boolean(),
  actions: z.string(),
  collections: z.string(),
  headers: NullableJsonValue.optional(),
});

/////////////////////////////////////////
// SELECT & INCLUDE
/////////////////////////////////////////

// USER
//------------------------------------------------------

export const UserSelectSchema: z.ZodType<PrismaClient.Prisma.UserSelect> = z.object({
  id: z.boolean().optional(),
  email: z.boolean().optional(),
  name: z.boolean().optional(),
  customerId: z.boolean().optional(),
  role: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
}).strict();

// COURSE
//------------------------------------------------------

export const CourseArgsSchema: z.ZodType<PrismaClient.Prisma.CourseArgs> = z.object({
  select: z.lazy(() => CourseSelectSchema).optional(),
  include: z.lazy(() => CourseIncludeSchema).optional(),
}).strict();

export const CourseIncludeSchema: z.ZodType<PrismaClient.Prisma.CourseInclude> = z.object({
  modules: z.union([z.boolean(), z.lazy(() => ModuleFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => CourseCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const CourseCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.CourseCountOutputTypeArgs> = z.object({
  select: z.lazy(() => CourseCountOutputTypeSelectSchema).nullish(),
}).strict();

export const CourseCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.CourseCountOutputTypeSelect> = z.object({
  modules: z.boolean().optional(),
}).strict();

export const CourseSelectSchema: z.ZodType<PrismaClient.Prisma.CourseSelect> = z.object({
  id: z.boolean().optional(),
  title: z.boolean().optional(),
  overview: z.boolean().optional(),
  slug: z.boolean().optional(),
  stripeProductId: z.boolean().optional(),
  status: z.boolean().optional(),
  lastRevised: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
  modules: z.union([z.boolean(), z.lazy(() => ModuleFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => CourseCountOutputTypeArgsSchema)]).optional(),
}).strict();

// MODULE
//------------------------------------------------------

export const ModuleArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleArgs> = z.object({
  select: z.lazy(() => ModuleSelectSchema).optional(),
  include: z.lazy(() => ModuleIncludeSchema).optional(),
}).strict();

export const ModuleIncludeSchema: z.ZodType<PrismaClient.Prisma.ModuleInclude> = z.object({
  lessons: z.union([z.boolean(), z.lazy(() => LessonFindManyArgsSchema)]).optional(),
  course: z.union([z.boolean(), z.lazy(() => CourseArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => ModuleCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const ModuleCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleCountOutputTypeArgs> = z.object({
  select: z.lazy(() => ModuleCountOutputTypeSelectSchema).nullish(),
}).strict();

export const ModuleCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.ModuleCountOutputTypeSelect> = z.object({
  lessons: z.boolean().optional(),
}).strict();

export const ModuleSelectSchema: z.ZodType<PrismaClient.Prisma.ModuleSelect> = z.object({
  id: z.boolean().optional(),
  title: z.boolean().optional(),
  overview: z.boolean().optional(),
  slug: z.boolean().optional(),
  status: z.boolean().optional(),
  courseId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
  lessons: z.union([z.boolean(), z.lazy(() => LessonFindManyArgsSchema)]).optional(),
  course: z.union([z.boolean(), z.lazy(() => CourseArgsSchema)]).optional(),
  sortOrder: z.boolean().optional(),
  _count: z.union([z.boolean(), z.lazy(() => ModuleCountOutputTypeArgsSchema)]).optional(),
}).strict();

// LESSON
//------------------------------------------------------

export const LessonArgsSchema: z.ZodType<PrismaClient.Prisma.LessonArgs> = z.object({
  select: z.lazy(() => LessonSelectSchema).optional(),
  include: z.lazy(() => LessonIncludeSchema).optional(),
}).strict();

export const LessonIncludeSchema: z.ZodType<PrismaClient.Prisma.LessonInclude> = z.object({
  module: z.union([z.boolean(), z.lazy(() => ModuleArgsSchema)]).optional(),
  lessonType: z.union([z.boolean(), z.lazy(() => LessonTypeArgsSchema)]).optional(),
}).strict();

export const LessonSelectSchema: z.ZodType<PrismaClient.Prisma.LessonSelect> = z.object({
  id: z.boolean().optional(),
  title: z.boolean().optional(),
  overview: z.boolean().optional(),
  videoUrl: z.boolean().optional(),
  slug: z.boolean().optional(),
  status: z.boolean().optional(),
  content: z.boolean().optional(),
  moduleId: z.boolean().optional(),
  contentType: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
  module: z.union([z.boolean(), z.lazy(() => ModuleArgsSchema)]).optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.boolean().optional(),
  lessonType: z.union([z.boolean(), z.lazy(() => LessonTypeArgsSchema)]).optional(),
  lessonTypeId: z.boolean().optional(),
}).strict();

// LESSON TYPE
//------------------------------------------------------

export const LessonTypeArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeArgs> = z.object({
  select: z.lazy(() => LessonTypeSelectSchema).optional(),
  include: z.lazy(() => LessonTypeIncludeSchema).optional(),
}).strict();

export const LessonTypeIncludeSchema: z.ZodType<PrismaClient.Prisma.LessonTypeInclude> = z.object({
  lessons: z.union([z.boolean(), z.lazy(() => LessonFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => LessonTypeCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const LessonTypeCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCountOutputTypeArgs> = z.object({
  select: z.lazy(() => LessonTypeCountOutputTypeSelectSchema).nullish(),
}).strict();

export const LessonTypeCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCountOutputTypeSelect> = z.object({
  lessons: z.boolean().optional(),
}).strict();

export const LessonTypeSelectSchema: z.ZodType<PrismaClient.Prisma.LessonTypeSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  lessons: z.union([z.boolean(), z.lazy(() => LessonFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => LessonTypeCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS ACTIVITY
//------------------------------------------------------

export const directus_activityArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityArgs> = z.object({
  select: z.lazy(() => directus_activitySelectSchema).optional(),
  include: z.lazy(() => directus_activityIncludeSchema).optional(),
}).strict();

export const directus_activityIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_activityInclude> = z.object({
  directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_activityCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_activityCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_activityCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_activityCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_activityCountOutputTypeSelect> = z.object({
  directus_revisions: z.boolean().optional(),
}).strict();

export const directus_activitySelectSchema: z.ZodType<PrismaClient.Prisma.directus_activitySelect> = z.object({
  id: z.boolean().optional(),
  action: z.boolean().optional(),
  user: z.boolean().optional(),
  timestamp: z.boolean().optional(),
  ip: z.boolean().optional(),
  user_agent: z.boolean().optional(),
  collection: z.boolean().optional(),
  item: z.boolean().optional(),
  comment: z.boolean().optional(),
  origin: z.boolean().optional(),
  directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_activityCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS COLLECTIONS
//------------------------------------------------------

export const directus_collectionsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsArgs> = z.object({
  select: z.lazy(() => directus_collectionsSelectSchema).optional(),
  include: z.lazy(() => directus_collectionsIncludeSchema).optional(),
}).strict();

export const directus_collectionsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsInclude> = z.object({
  directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsArgsSchema)]).optional(),
  other_directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_collectionsCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_collectionsCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_collectionsCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_collectionsCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCountOutputTypeSelect> = z.object({
  other_directus_collections: z.boolean().optional(),
  directus_shares: z.boolean().optional(),
}).strict();

export const directus_collectionsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsSelect> = z.object({
  collection: z.boolean().optional(),
  icon: z.boolean().optional(),
  note: z.boolean().optional(),
  display_template: z.boolean().optional(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.boolean().optional(),
  archive_field: z.boolean().optional(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.boolean().optional(),
  unarchive_value: z.boolean().optional(),
  sort_field: z.boolean().optional(),
  accountability: z.boolean().optional(),
  color: z.boolean().optional(),
  item_duplication_fields: z.boolean().optional(),
  sort: z.boolean().optional(),
  group: z.boolean().optional(),
  collapse: z.boolean().optional(),
  directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsArgsSchema)]).optional(),
  other_directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_collectionsCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS DASHBOARDS
//------------------------------------------------------

export const directus_dashboardsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsArgs> = z.object({
  select: z.lazy(() => directus_dashboardsSelectSchema).optional(),
  include: z.lazy(() => directus_dashboardsIncludeSchema).optional(),
}).strict();

export const directus_dashboardsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsInclude> = z.object({
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_panels: z.union([z.boolean(), z.lazy(() => directus_panelsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_dashboardsCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_dashboardsCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_dashboardsCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_dashboardsCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCountOutputTypeSelect> = z.object({
  directus_panels: z.boolean().optional(),
}).strict();

export const directus_dashboardsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  icon: z.boolean().optional(),
  note: z.boolean().optional(),
  date_created: z.boolean().optional(),
  user_created: z.boolean().optional(),
  color: z.boolean().optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_panels: z.union([z.boolean(), z.lazy(() => directus_panelsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_dashboardsCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS FIELDS
//------------------------------------------------------

export const directus_fieldsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsSelect> = z.object({
  id: z.boolean().optional(),
  collection: z.boolean().optional(),
  field: z.boolean().optional(),
  special: z.boolean().optional(),
  interface: z.boolean().optional(),
  options: z.boolean().optional(),
  display: z.boolean().optional(),
  display_options: z.boolean().optional(),
  readonly: z.boolean().optional(),
  hidden: z.boolean().optional(),
  sort: z.boolean().optional(),
  width: z.boolean().optional(),
  translations: z.boolean().optional(),
  note: z.boolean().optional(),
  conditions: z.boolean().optional(),
  required: z.boolean().optional(),
  group: z.boolean().optional(),
  validation: z.boolean().optional(),
  validation_message: z.boolean().optional(),
}).strict();

// DIRECTUS FILES
//------------------------------------------------------

export const directus_filesArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesArgs> = z.object({
  select: z.lazy(() => directus_filesSelectSchema).optional(),
  include: z.lazy(() => directus_filesIncludeSchema).optional(),
}).strict();

export const directus_filesIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_filesInclude> = z.object({
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_filesCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_filesCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_filesCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_filesCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_filesCountOutputTypeSelect> = z.object({
  directus_settings_directus_settings_project_logoTodirectus_files: z.boolean().optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.boolean().optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.boolean().optional(),
}).strict();

export const directus_filesSelectSchema: z.ZodType<PrismaClient.Prisma.directus_filesSelect> = z.object({
  id: z.boolean().optional(),
  storage: z.boolean().optional(),
  filename_disk: z.boolean().optional(),
  filename_download: z.boolean().optional(),
  title: z.boolean().optional(),
  type: z.boolean().optional(),
  folder: z.boolean().optional(),
  uploaded_by: z.boolean().optional(),
  uploaded_on: z.boolean().optional(),
  modified_by: z.boolean().optional(),
  modified_on: z.boolean().optional(),
  charset: z.boolean().optional(),
  filesize: z.boolean().optional(),
  width: z.boolean().optional(),
  height: z.boolean().optional(),
  duration: z.boolean().optional(),
  embed: z.boolean().optional(),
  description: z.boolean().optional(),
  location: z.boolean().optional(),
  tags: z.boolean().optional(),
  metadata: z.boolean().optional(),
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_filesCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS FLOWS
//------------------------------------------------------

export const directus_flowsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsArgs> = z.object({
  select: z.lazy(() => directus_flowsSelectSchema).optional(),
  include: z.lazy(() => directus_flowsIncludeSchema).optional(),
}).strict();

export const directus_flowsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_flowsInclude> = z.object({
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_flowsCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_flowsCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_flowsCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_flowsCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCountOutputTypeSelect> = z.object({
  directus_operations: z.boolean().optional(),
}).strict();

export const directus_flowsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_flowsSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  icon: z.boolean().optional(),
  color: z.boolean().optional(),
  description: z.boolean().optional(),
  status: z.boolean().optional(),
  trigger: z.boolean().optional(),
  accountability: z.boolean().optional(),
  options: z.boolean().optional(),
  operation: z.boolean().optional(),
  date_created: z.boolean().optional(),
  user_created: z.boolean().optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_flowsCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS FOLDERS
//------------------------------------------------------

export const directus_foldersArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersArgs> = z.object({
  select: z.lazy(() => directus_foldersSelectSchema).optional(),
  include: z.lazy(() => directus_foldersIncludeSchema).optional(),
}).strict();

export const directus_foldersIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_foldersInclude> = z.object({
  directus_files: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
  other_directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersFindManyArgsSchema)]).optional(),
  directus_settings: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_foldersCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_foldersCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_foldersCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_foldersCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCountOutputTypeSelect> = z.object({
  directus_files: z.boolean().optional(),
  other_directus_folders: z.boolean().optional(),
  directus_settings: z.boolean().optional(),
}).strict();

export const directus_foldersSelectSchema: z.ZodType<PrismaClient.Prisma.directus_foldersSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  parent: z.boolean().optional(),
  directus_files: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
  other_directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersFindManyArgsSchema)]).optional(),
  directus_settings: z.union([z.boolean(), z.lazy(() => directus_settingsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_foldersCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS MIGRATIONS
//------------------------------------------------------

export const directus_migrationsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsSelect> = z.object({
  version: z.boolean().optional(),
  name: z.boolean().optional(),
  timestamp: z.boolean().optional(),
}).strict();

// DIRECTUS NOTIFICATIONS
//------------------------------------------------------

export const directus_notificationsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsArgs> = z.object({
  select: z.lazy(() => directus_notificationsSelectSchema).optional(),
  include: z.lazy(() => directus_notificationsIncludeSchema).optional(),
}).strict();

export const directus_notificationsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsInclude> = z.object({
  directus_users_directus_notifications_recipientTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_users_directus_notifications_senderTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

export const directus_notificationsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsSelect> = z.object({
  id: z.boolean().optional(),
  timestamp: z.boolean().optional(),
  status: z.boolean().optional(),
  recipient: z.boolean().optional(),
  sender: z.boolean().optional(),
  subject: z.boolean().optional(),
  message: z.boolean().optional(),
  collection: z.boolean().optional(),
  item: z.boolean().optional(),
  directus_users_directus_notifications_recipientTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  directus_users_directus_notifications_senderTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

// DIRECTUS OPERATIONS
//------------------------------------------------------

export const directus_operationsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsArgs> = z.object({
  select: z.lazy(() => directus_operationsSelectSchema).optional(),
  include: z.lazy(() => directus_operationsIncludeSchema).optional(),
}).strict();

export const directus_operationsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_operationsInclude> = z.object({
  directus_flows: z.union([z.boolean(), z.lazy(() => directus_flowsArgsSchema)]).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

export const directus_operationsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_operationsSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  key: z.boolean().optional(),
  type: z.boolean().optional(),
  position_x: z.boolean().optional(),
  position_y: z.boolean().optional(),
  options: z.boolean().optional(),
  resolve: z.boolean().optional(),
  reject: z.boolean().optional(),
  flow: z.boolean().optional(),
  date_created: z.boolean().optional(),
  user_created: z.boolean().optional(),
  directus_flows: z.union([z.boolean(), z.lazy(() => directus_flowsArgsSchema)]).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

// DIRECTUS PANELS
//------------------------------------------------------

export const directus_panelsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsArgs> = z.object({
  select: z.lazy(() => directus_panelsSelectSchema).optional(),
  include: z.lazy(() => directus_panelsIncludeSchema).optional(),
}).strict();

export const directus_panelsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_panelsInclude> = z.object({
  directus_dashboards: z.union([z.boolean(), z.lazy(() => directus_dashboardsArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

export const directus_panelsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_panelsSelect> = z.object({
  id: z.boolean().optional(),
  dashboard: z.boolean().optional(),
  name: z.boolean().optional(),
  icon: z.boolean().optional(),
  color: z.boolean().optional(),
  show_header: z.boolean().optional(),
  note: z.boolean().optional(),
  type: z.boolean().optional(),
  position_x: z.boolean().optional(),
  position_y: z.boolean().optional(),
  width: z.boolean().optional(),
  height: z.boolean().optional(),
  options: z.boolean().optional(),
  date_created: z.boolean().optional(),
  user_created: z.boolean().optional(),
  directus_dashboards: z.union([z.boolean(), z.lazy(() => directus_dashboardsArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

// DIRECTUS PERMISSIONS
//------------------------------------------------------

export const directus_permissionsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsArgs> = z.object({
  select: z.lazy(() => directus_permissionsSelectSchema).optional(),
  include: z.lazy(() => directus_permissionsIncludeSchema).optional(),
}).strict();

export const directus_permissionsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsInclude> = z.object({
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
}).strict();

export const directus_permissionsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsSelect> = z.object({
  id: z.boolean().optional(),
  role: z.boolean().optional(),
  collection: z.boolean().optional(),
  action: z.boolean().optional(),
  permissions: z.boolean().optional(),
  validation: z.boolean().optional(),
  presets: z.boolean().optional(),
  fields: z.boolean().optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
}).strict();

// DIRECTUS PRESETS
//------------------------------------------------------

export const directus_presetsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsArgs> = z.object({
  select: z.lazy(() => directus_presetsSelectSchema).optional(),
  include: z.lazy(() => directus_presetsIncludeSchema).optional(),
}).strict();

export const directus_presetsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_presetsInclude> = z.object({
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

export const directus_presetsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_presetsSelect> = z.object({
  id: z.boolean().optional(),
  bookmark: z.boolean().optional(),
  user: z.boolean().optional(),
  role: z.boolean().optional(),
  collection: z.boolean().optional(),
  search: z.boolean().optional(),
  layout: z.boolean().optional(),
  layout_query: z.boolean().optional(),
  layout_options: z.boolean().optional(),
  refresh_interval: z.boolean().optional(),
  filter: z.boolean().optional(),
  icon: z.boolean().optional(),
  color: z.boolean().optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

// DIRECTUS RELATIONS
//------------------------------------------------------

export const directus_relationsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_relationsSelect> = z.object({
  id: z.boolean().optional(),
  many_collection: z.boolean().optional(),
  many_field: z.boolean().optional(),
  one_collection: z.boolean().optional(),
  one_field: z.boolean().optional(),
  one_collection_field: z.boolean().optional(),
  one_allowed_collections: z.boolean().optional(),
  junction_field: z.boolean().optional(),
  sort_field: z.boolean().optional(),
  one_deselect_action: z.boolean().optional(),
}).strict();

// DIRECTUS REVISIONS
//------------------------------------------------------

export const directus_revisionsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsArgs> = z.object({
  select: z.lazy(() => directus_revisionsSelectSchema).optional(),
  include: z.lazy(() => directus_revisionsIncludeSchema).optional(),
}).strict();

export const directus_revisionsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsInclude> = z.object({
  directus_activity: z.union([z.boolean(), z.lazy(() => directus_activityArgsSchema)]).optional(),
  directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsArgsSchema)]).optional(),
  other_directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_revisionsCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_revisionsCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_revisionsCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_revisionsCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCountOutputTypeSelect> = z.object({
  other_directus_revisions: z.boolean().optional(),
}).strict();

export const directus_revisionsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsSelect> = z.object({
  id: z.boolean().optional(),
  activity: z.boolean().optional(),
  collection: z.boolean().optional(),
  item: z.boolean().optional(),
  data: z.boolean().optional(),
  delta: z.boolean().optional(),
  parent: z.boolean().optional(),
  directus_activity: z.union([z.boolean(), z.lazy(() => directus_activityArgsSchema)]).optional(),
  directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsArgsSchema)]).optional(),
  other_directus_revisions: z.union([z.boolean(), z.lazy(() => directus_revisionsFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_revisionsCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS ROLES
//------------------------------------------------------

export const directus_rolesArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesArgs> = z.object({
  select: z.lazy(() => directus_rolesSelectSchema).optional(),
  include: z.lazy(() => directus_rolesIncludeSchema).optional(),
}).strict();

export const directus_rolesIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_rolesInclude> = z.object({
  directus_permissions: z.union([z.boolean(), z.lazy(() => directus_permissionsFindManyArgsSchema)]).optional(),
  directus_presets: z.union([z.boolean(), z.lazy(() => directus_presetsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_rolesCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_rolesCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_rolesCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_rolesCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCountOutputTypeSelect> = z.object({
  directus_permissions: z.boolean().optional(),
  directus_presets: z.boolean().optional(),
  directus_shares: z.boolean().optional(),
  directus_users: z.boolean().optional(),
}).strict();

export const directus_rolesSelectSchema: z.ZodType<PrismaClient.Prisma.directus_rolesSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  icon: z.boolean().optional(),
  description: z.boolean().optional(),
  ip_access: z.boolean().optional(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.union([z.boolean(), z.lazy(() => directus_permissionsFindManyArgsSchema)]).optional(),
  directus_presets: z.union([z.boolean(), z.lazy(() => directus_presetsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_rolesCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS SESSIONS
//------------------------------------------------------

export const directus_sessionsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsArgs> = z.object({
  select: z.lazy(() => directus_sessionsSelectSchema).optional(),
  include: z.lazy(() => directus_sessionsIncludeSchema).optional(),
}).strict();

export const directus_sessionsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsInclude> = z.object({
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

export const directus_sessionsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsSelect> = z.object({
  token: z.boolean().optional(),
  user: z.boolean().optional(),
  expires: z.boolean().optional(),
  ip: z.boolean().optional(),
  user_agent: z.boolean().optional(),
  share: z.boolean().optional(),
  origin: z.boolean().optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
}).strict();

// DIRECTUS SETTINGS
//------------------------------------------------------

export const directus_settingsArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsArgs> = z.object({
  select: z.lazy(() => directus_settingsSelectSchema).optional(),
  include: z.lazy(() => directus_settingsIncludeSchema).optional(),
}).strict();

export const directus_settingsIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_settingsInclude> = z.object({
  directus_files_directus_settings_project_logoTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
}).strict();

export const directus_settingsSelectSchema: z.ZodType<PrismaClient.Prisma.directus_settingsSelect> = z.object({
  id: z.boolean().optional(),
  project_name: z.boolean().optional(),
  project_url: z.boolean().optional(),
  project_color: z.boolean().optional(),
  project_logo: z.boolean().optional(),
  public_foreground: z.boolean().optional(),
  public_background: z.boolean().optional(),
  public_note: z.boolean().optional(),
  auth_login_attempts: z.boolean().optional(),
  auth_password_policy: z.boolean().optional(),
  storage_asset_transform: z.boolean().optional(),
  storage_asset_presets: z.boolean().optional(),
  custom_css: z.boolean().optional(),
  storage_default_folder: z.boolean().optional(),
  basemaps: z.boolean().optional(),
  mapbox_key: z.boolean().optional(),
  module_bar: z.boolean().optional(),
  project_descriptor: z.boolean().optional(),
  translation_strings: z.boolean().optional(),
  default_language: z.boolean().optional(),
  custom_aspect_ratios: z.boolean().optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.union([z.boolean(), z.lazy(() => directus_filesArgsSchema)]).optional(),
  directus_folders: z.union([z.boolean(), z.lazy(() => directus_foldersArgsSchema)]).optional(),
}).strict();

// DIRECTUS SHARES
//------------------------------------------------------

export const directus_sharesArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesArgs> = z.object({
  select: z.lazy(() => directus_sharesSelectSchema).optional(),
  include: z.lazy(() => directus_sharesIncludeSchema).optional(),
}).strict();

export const directus_sharesIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_sharesInclude> = z.object({
  directus_sessions: z.union([z.boolean(), z.lazy(() => directus_sessionsFindManyArgsSchema)]).optional(),
  directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsArgsSchema)]).optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_sharesCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_sharesCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_sharesCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_sharesCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCountOutputTypeSelect> = z.object({
  directus_sessions: z.boolean().optional(),
}).strict();

export const directus_sharesSelectSchema: z.ZodType<PrismaClient.Prisma.directus_sharesSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  collection: z.boolean().optional(),
  item: z.boolean().optional(),
  role: z.boolean().optional(),
  password: z.boolean().optional(),
  user_created: z.boolean().optional(),
  date_created: z.boolean().optional(),
  date_start: z.boolean().optional(),
  date_end: z.boolean().optional(),
  times_used: z.boolean().optional(),
  max_uses: z.boolean().optional(),
  directus_sessions: z.union([z.boolean(), z.lazy(() => directus_sessionsFindManyArgsSchema)]).optional(),
  directus_collections: z.union([z.boolean(), z.lazy(() => directus_collectionsArgsSchema)]).optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  directus_users: z.union([z.boolean(), z.lazy(() => directus_usersArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_sharesCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS USERS
//------------------------------------------------------

export const directus_usersArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersArgs> = z.object({
  select: z.lazy(() => directus_usersSelectSchema).optional(),
  include: z.lazy(() => directus_usersIncludeSchema).optional(),
}).strict();

export const directus_usersIncludeSchema: z.ZodType<PrismaClient.Prisma.directus_usersInclude> = z.object({
  directus_dashboards: z.union([z.boolean(), z.lazy(() => directus_dashboardsFindManyArgsSchema)]).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_flows: z.union([z.boolean(), z.lazy(() => directus_flowsFindManyArgsSchema)]).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_notificationsFindManyArgsSchema)]).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_notificationsFindManyArgsSchema)]).optional(),
  directus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsFindManyArgsSchema)]).optional(),
  directus_panels: z.union([z.boolean(), z.lazy(() => directus_panelsFindManyArgsSchema)]).optional(),
  directus_presets: z.union([z.boolean(), z.lazy(() => directus_presetsFindManyArgsSchema)]).optional(),
  directus_sessions: z.union([z.boolean(), z.lazy(() => directus_sessionsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_usersCountOutputTypeArgsSchema)]).optional(),
}).strict();

export const directus_usersCountOutputTypeArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersCountOutputTypeArgs> = z.object({
  select: z.lazy(() => directus_usersCountOutputTypeSelectSchema).nullish(),
}).strict();

export const directus_usersCountOutputTypeSelectSchema: z.ZodType<PrismaClient.Prisma.directus_usersCountOutputTypeSelect> = z.object({
  directus_dashboards: z.boolean().optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.boolean().optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.boolean().optional(),
  directus_flows: z.boolean().optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.boolean().optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.boolean().optional(),
  directus_operations: z.boolean().optional(),
  directus_panels: z.boolean().optional(),
  directus_presets: z.boolean().optional(),
  directus_sessions: z.boolean().optional(),
  directus_shares: z.boolean().optional(),
}).strict();

export const directus_usersSelectSchema: z.ZodType<PrismaClient.Prisma.directus_usersSelect> = z.object({
  id: z.boolean().optional(),
  first_name: z.boolean().optional(),
  last_name: z.boolean().optional(),
  email: z.boolean().optional(),
  password: z.boolean().optional(),
  location: z.boolean().optional(),
  title: z.boolean().optional(),
  description: z.boolean().optional(),
  tags: z.boolean().optional(),
  avatar: z.boolean().optional(),
  language: z.boolean().optional(),
  theme: z.boolean().optional(),
  tfa_secret: z.boolean().optional(),
  status: z.boolean().optional(),
  role: z.boolean().optional(),
  token: z.boolean().optional(),
  last_access: z.boolean().optional(),
  last_page: z.boolean().optional(),
  provider: z.boolean().optional(),
  external_identifier: z.boolean().optional(),
  auth_data: z.boolean().optional(),
  email_notifications: z.boolean().optional(),
  directus_dashboards: z.union([z.boolean(), z.lazy(() => directus_dashboardsFindManyArgsSchema)]).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_filesFindManyArgsSchema)]).optional(),
  directus_flows: z.union([z.boolean(), z.lazy(() => directus_flowsFindManyArgsSchema)]).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_notificationsFindManyArgsSchema)]).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.union([z.boolean(), z.lazy(() => directus_notificationsFindManyArgsSchema)]).optional(),
  directus_operations: z.union([z.boolean(), z.lazy(() => directus_operationsFindManyArgsSchema)]).optional(),
  directus_panels: z.union([z.boolean(), z.lazy(() => directus_panelsFindManyArgsSchema)]).optional(),
  directus_presets: z.union([z.boolean(), z.lazy(() => directus_presetsFindManyArgsSchema)]).optional(),
  directus_sessions: z.union([z.boolean(), z.lazy(() => directus_sessionsFindManyArgsSchema)]).optional(),
  directus_shares: z.union([z.boolean(), z.lazy(() => directus_sharesFindManyArgsSchema)]).optional(),
  directus_roles: z.union([z.boolean(), z.lazy(() => directus_rolesArgsSchema)]).optional(),
  _count: z.union([z.boolean(), z.lazy(() => Directus_usersCountOutputTypeArgsSchema)]).optional(),
}).strict();

// DIRECTUS WEBHOOKS
//------------------------------------------------------

export const directus_webhooksSelectSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  method: z.boolean().optional(),
  url: z.boolean().optional(),
  status: z.boolean().optional(),
  data: z.boolean().optional(),
  actions: z.boolean().optional(),
  collections: z.boolean().optional(),
  headers: z.boolean().optional(),
}).strict();

/////////////////////////////////////////
// INPUT TYPES
/////////////////////////////////////////

export const UserWhereInputSchema: z.ZodType<PrismaClient.Prisma.UserWhereInput> = z.object({
  AND: z.union([z.lazy(() => UserWhereInputSchema), z.lazy(() => UserWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => UserWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => UserWhereInputSchema), z.lazy(() => UserWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  email: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  customerId: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => EnumRoleFilterSchema), z.lazy(() => RoleSchema)]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
}).strict();

export const UserOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.UserOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UserWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.UserWhereUniqueInput> = z.object({
  id: z.string().optional(),
  email: z.string().optional(),
  customerId: z.string().optional(),
}).strict();

export const UserOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.UserOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => UserCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => UserMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => UserMinOrderByAggregateInputSchema).optional(),
}).strict();

export const UserScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.UserScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => UserScalarWhereWithAggregatesInputSchema), z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => UserScalarWhereWithAggregatesInputSchema), z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  email: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  customerId: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => EnumRoleWithAggregatesFilterSchema), z.lazy(() => RoleSchema)]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
}).strict();

export const CourseWhereInputSchema: z.ZodType<PrismaClient.Prisma.CourseWhereInput> = z.object({
  AND: z.union([z.lazy(() => CourseWhereInputSchema), z.lazy(() => CourseWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => CourseWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => CourseWhereInputSchema), z.lazy(() => CourseWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  slug: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  stripeProductId: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  lastRevised: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  modules: z.lazy(() => ModuleListRelationFilterSchema).optional(),
}).strict();

export const CourseOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.CourseOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  stripeProductId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  lastRevised: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  modules: z.lazy(() => ModuleOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const CourseWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.CourseWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
  slug: z.string().optional(),
  stripeProductId: z.string().optional(),
}).strict();

export const CourseOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.CourseOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  stripeProductId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  lastRevised: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => CourseCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => CourseAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => CourseMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => CourseMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => CourseSumOrderByAggregateInputSchema).optional(),
}).strict();

export const CourseScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.CourseScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => CourseScalarWhereWithAggregatesInputSchema), z.lazy(() => CourseScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => CourseScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => CourseScalarWhereWithAggregatesInputSchema), z.lazy(() => CourseScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  slug: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  stripeProductId: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  lastRevised: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
}).strict();

export const ModuleWhereInputSchema: z.ZodType<PrismaClient.Prisma.ModuleWhereInput> = z.object({
  AND: z.union([z.lazy(() => ModuleWhereInputSchema), z.lazy(() => ModuleWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => ModuleWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => ModuleWhereInputSchema), z.lazy(() => ModuleWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  courseId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  lessons: z.lazy(() => LessonListRelationFilterSchema).optional(),
  course: z.union([z.lazy(() => CourseRelationFilterSchema), z.lazy(() => CourseWhereInputSchema)]).optional(),
  sortOrder: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
}).strict();

export const ModuleOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.ModuleOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  lessons: z.lazy(() => LessonOrderByRelationAggregateInputSchema).optional(),
  course: z.lazy(() => CourseOrderByWithRelationInputSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.ModuleWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const ModuleOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.ModuleOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => ModuleCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => ModuleAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => ModuleMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => ModuleMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => ModuleSumOrderByAggregateInputSchema).optional(),
}).strict();

export const ModuleScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.ModuleScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => ModuleScalarWhereWithAggregatesInputSchema), z.lazy(() => ModuleScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => ModuleScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => ModuleScalarWhereWithAggregatesInputSchema), z.lazy(() => ModuleScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  courseId: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  sortOrder: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
}).strict();

export const LessonWhereInputSchema: z.ZodType<PrismaClient.Prisma.LessonWhereInput> = z.object({
  AND: z.union([z.lazy(() => LessonWhereInputSchema), z.lazy(() => LessonWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => LessonWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => LessonWhereInputSchema), z.lazy(() => LessonWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  videoUrl: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  content: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  moduleId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  contentType: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  module: z.union([z.lazy(() => ModuleRelationFilterSchema), z.lazy(() => ModuleWhereInputSchema)]).optional(),
  isFree: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  sortOrder: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  lessonType: z.union([z.lazy(() => LessonTypeRelationFilterSchema), z.lazy(() => LessonTypeWhereInputSchema)]).optional(),
  lessonTypeId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
}).strict();

export const LessonOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.LessonOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  videoUrl: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  content: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  module: z.lazy(() => ModuleOrderByWithRelationInputSchema).optional(),
  isFree: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonType: z.lazy(() => LessonTypeOrderByWithRelationInputSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.LessonWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const LessonOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.LessonOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  videoUrl: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  content: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  isFree: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => LessonCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => LessonAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => LessonMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => LessonMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => LessonSumOrderByAggregateInputSchema).optional(),
}).strict();

export const LessonScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.LessonScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => LessonScalarWhereWithAggregatesInputSchema), z.lazy(() => LessonScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => LessonScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => LessonScalarWhereWithAggregatesInputSchema), z.lazy(() => LessonScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  videoUrl: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  content: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  moduleId: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  contentType: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  isFree: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  sortOrder: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  lessonTypeId: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
}).strict();

export const LessonTypeWhereInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeWhereInput> = z.object({
  AND: z.union([z.lazy(() => LessonTypeWhereInputSchema), z.lazy(() => LessonTypeWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => LessonTypeWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => LessonTypeWhereInputSchema), z.lazy(() => LessonTypeWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  lessons: z.lazy(() => LessonListRelationFilterSchema).optional(),
}).strict();

export const LessonTypeOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  lessons: z.lazy(() => LessonOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const LessonTypeWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const LessonTypeOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => LessonTypeCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => LessonTypeAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => LessonTypeMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => LessonTypeMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => LessonTypeSumOrderByAggregateInputSchema).optional(),
}).strict();

export const LessonTypeScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => LessonTypeScalarWhereWithAggregatesInputSchema), z.lazy(() => LessonTypeScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => LessonTypeScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => LessonTypeScalarWhereWithAggregatesInputSchema), z.lazy(() => LessonTypeScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
}).strict();

export const directus_activityWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_activityWhereInputSchema), z.lazy(() => directus_activityWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_activityWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_activityWhereInputSchema), z.lazy(() => directus_activityWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  action: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  user: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  timestamp: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  ip: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user_agent: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  item: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  comment: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  origin: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_revisions: z.lazy(() => Directus_revisionsListRelationFilterSchema).optional(),
}).strict();

export const directus_activityOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  comment: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  directus_revisions: z.lazy(() => directus_revisionsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_activityWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_activityOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  comment: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_activityCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_activityAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_activityMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_activityMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_activitySumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_activityScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_activityScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_activityScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_activityScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_activityScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_activityScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  action: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  user: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  timestamp: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  ip: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  user_agent: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  item: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  comment: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  origin: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_collectionsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_collectionsWhereInputSchema), z.lazy(() => directus_collectionsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_collectionsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_collectionsWhereInputSchema), z.lazy(() => directus_collectionsWhereInputSchema).array()]).optional(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  display_template: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  hidden: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  singleton: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  translations: z.lazy(() => JsonNullableFilterSchema).optional(),
  archive_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  archive_app_filter: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  archive_value: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  unarchive_value: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  sort_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item_duplication_fields: z.lazy(() => JsonNullableFilterSchema).optional(),
  sort: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  group: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collapse: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  directus_collections: z.union([z.lazy(() => Directus_collectionsRelationFilterSchema), z.lazy(() => directus_collectionsWhereInputSchema)]).optional().nullable(),
  other_directus_collections: z.lazy(() => Directus_collectionsListRelationFilterSchema).optional(),
  directus_shares: z.lazy(() => Directus_sharesListRelationFilterSchema).optional(),
}).strict();

export const directus_collectionsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsOrderByWithRelationInput> = z.object({
  collection: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  display_template: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  singleton: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  archive_field: z.lazy(() => SortOrderSchema).optional(),
  archive_app_filter: z.lazy(() => SortOrderSchema).optional(),
  archive_value: z.lazy(() => SortOrderSchema).optional(),
  unarchive_value: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  item_duplication_fields: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  collapse: z.lazy(() => SortOrderSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsOrderByWithRelationInputSchema).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsOrderByRelationAggregateInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_collectionsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsWhereUniqueInput> = z.object({
  collection: z.string().optional(),
}).strict();

export const directus_collectionsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsOrderByWithAggregationInput> = z.object({
  collection: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  display_template: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  singleton: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  archive_field: z.lazy(() => SortOrderSchema).optional(),
  archive_app_filter: z.lazy(() => SortOrderSchema).optional(),
  archive_value: z.lazy(() => SortOrderSchema).optional(),
  unarchive_value: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  item_duplication_fields: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  collapse: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_collectionsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_collectionsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_collectionsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_collectionsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_collectionsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_collectionsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_collectionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_collectionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_collectionsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_collectionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_collectionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  note: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  display_template: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  hidden: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  singleton: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  translations: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  archive_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  archive_app_filter: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  archive_value: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  unarchive_value: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  sort_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  item_duplication_fields: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  sort: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  group: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collapse: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
}).strict();

export const directus_dashboardsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_dashboardsWhereInputSchema), z.lazy(() => directus_dashboardsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_dashboardsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_dashboardsWhereInputSchema), z.lazy(() => directus_dashboardsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
  directus_panels: z.lazy(() => Directus_panelsListRelationFilterSchema).optional(),
}).strict();

export const directus_dashboardsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_dashboardsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_dashboardsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_dashboardsCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_dashboardsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_dashboardsMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_dashboardsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_dashboardsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_dashboardsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_dashboardsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_dashboardsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_dashboardsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  note: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_fieldsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_fieldsWhereInputSchema), z.lazy(() => directus_fieldsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_fieldsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_fieldsWhereInputSchema), z.lazy(() => directus_fieldsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  field: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  special: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  interface: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  display: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  display_options: z.lazy(() => JsonNullableFilterSchema).optional(),
  readonly: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  hidden: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  sort: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  width: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  translations: z.lazy(() => JsonNullableFilterSchema).optional(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  conditions: z.lazy(() => JsonNullableFilterSchema).optional(),
  required: z.union([z.lazy(() => BoolNullableFilterSchema), z.boolean()]).optional().nullable(),
  group: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  validation: z.lazy(() => JsonNullableFilterSchema).optional(),
  validation_message: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_fieldsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  field: z.lazy(() => SortOrderSchema).optional(),
  special: z.lazy(() => SortOrderSchema).optional(),
  interface: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  display: z.lazy(() => SortOrderSchema).optional(),
  display_options: z.lazy(() => SortOrderSchema).optional(),
  readonly: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  conditions: z.lazy(() => SortOrderSchema).optional(),
  required: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  validation_message: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_fieldsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_fieldsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  field: z.lazy(() => SortOrderSchema).optional(),
  special: z.lazy(() => SortOrderSchema).optional(),
  interface: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  display: z.lazy(() => SortOrderSchema).optional(),
  display_options: z.lazy(() => SortOrderSchema).optional(),
  readonly: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  conditions: z.lazy(() => SortOrderSchema).optional(),
  required: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  validation_message: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_fieldsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_fieldsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_fieldsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_fieldsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_fieldsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_fieldsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_fieldsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_fieldsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_fieldsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_fieldsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_fieldsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  field: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  special: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  interface: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  display: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  display_options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  readonly: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  hidden: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  sort: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  width: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  translations: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  note: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  conditions: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  required: z.union([z.lazy(() => BoolNullableWithAggregatesFilterSchema), z.boolean()]).optional().nullable(),
  group: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  validation: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  validation_message: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_filesWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_filesWhereInputSchema), z.lazy(() => directus_filesWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_filesWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_filesWhereInputSchema), z.lazy(() => directus_filesWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  storage: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  filename_disk: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  filename_download: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  title: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  folder: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  uploaded_by: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  uploaded_on: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  modified_by: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  modified_on: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  charset: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  filesize: z.union([z.lazy(() => BigIntNullableFilterSchema), z.bigint()]).optional().nullable(),
  width: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  height: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  duration: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  embed: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tags: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  metadata: z.lazy(() => JsonNullableFilterSchema).optional(),
  directus_folders: z.union([z.lazy(() => Directus_foldersRelationFilterSchema), z.lazy(() => directus_foldersWhereInputSchema)]).optional().nullable(),
  directus_users_directus_files_modified_byTodirectus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => Directus_settingsListRelationFilterSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => Directus_settingsListRelationFilterSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => Directus_settingsListRelationFilterSchema).optional(),
}).strict();

export const directus_filesOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  storage: z.lazy(() => SortOrderSchema).optional(),
  filename_disk: z.lazy(() => SortOrderSchema).optional(),
  filename_download: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  folder: z.lazy(() => SortOrderSchema).optional(),
  uploaded_by: z.lazy(() => SortOrderSchema).optional(),
  uploaded_on: z.lazy(() => SortOrderSchema).optional(),
  modified_by: z.lazy(() => SortOrderSchema).optional(),
  modified_on: z.lazy(() => SortOrderSchema).optional(),
  charset: z.lazy(() => SortOrderSchema).optional(),
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
  embed: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  metadata: z.lazy(() => SortOrderSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersOrderByWithRelationInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsOrderByRelationAggregateInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsOrderByRelationAggregateInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_filesWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_filesOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  storage: z.lazy(() => SortOrderSchema).optional(),
  filename_disk: z.lazy(() => SortOrderSchema).optional(),
  filename_download: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  folder: z.lazy(() => SortOrderSchema).optional(),
  uploaded_by: z.lazy(() => SortOrderSchema).optional(),
  uploaded_on: z.lazy(() => SortOrderSchema).optional(),
  modified_by: z.lazy(() => SortOrderSchema).optional(),
  modified_on: z.lazy(() => SortOrderSchema).optional(),
  charset: z.lazy(() => SortOrderSchema).optional(),
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
  embed: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  metadata: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_filesCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_filesAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_filesMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_filesMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_filesSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_filesScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_filesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_filesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_filesScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_filesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_filesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  storage: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  filename_disk: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  filename_download: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  title: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  folder: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  uploaded_by: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  uploaded_on: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  modified_by: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  modified_on: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  charset: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  filesize: z.union([z.lazy(() => BigIntNullableWithAggregatesFilterSchema), z.bigint()]).optional().nullable(),
  width: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  height: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  duration: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  embed: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  tags: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  metadata: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
}).strict();

export const directus_flowsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_flowsWhereInputSchema), z.lazy(() => directus_flowsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_flowsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_flowsWhereInputSchema), z.lazy(() => directus_flowsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  trigger: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  operation: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
  directus_operations: z.lazy(() => Directus_operationsListRelationFilterSchema).optional(),
}).strict();

export const directus_flowsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  trigger: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  operation: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_flowsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsWhereUniqueInput> = z.object({
  id: z.string().optional(),
  operation: z.string().optional(),
}).strict();

export const directus_flowsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  trigger: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  operation: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_flowsCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_flowsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_flowsMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_flowsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_flowsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_flowsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_flowsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_flowsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_flowsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  trigger: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  operation: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_foldersWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_foldersWhereInputSchema), z.lazy(() => directus_foldersWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_foldersWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_foldersWhereInputSchema), z.lazy(() => directus_foldersWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  parent: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  directus_files: z.lazy(() => Directus_filesListRelationFilterSchema).optional(),
  directus_folders: z.union([z.lazy(() => Directus_foldersRelationFilterSchema), z.lazy(() => directus_foldersWhereInputSchema)]).optional().nullable(),
  other_directus_folders: z.lazy(() => Directus_foldersListRelationFilterSchema).optional(),
  directus_settings: z.lazy(() => Directus_settingsListRelationFilterSchema).optional(),
}).strict();

export const directus_foldersOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
  directus_files: z.lazy(() => directus_filesOrderByRelationAggregateInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersOrderByWithRelationInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersOrderByRelationAggregateInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_foldersWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_foldersOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_foldersCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_foldersMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_foldersMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_foldersScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_foldersScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_foldersScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_foldersScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_foldersScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_foldersScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  parent: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_migrationsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_migrationsWhereInputSchema), z.lazy(() => directus_migrationsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_migrationsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_migrationsWhereInputSchema), z.lazy(() => directus_migrationsWhereInputSchema).array()]).optional(),
  version: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  timestamp: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
}).strict();

export const directus_migrationsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsOrderByWithRelationInput> = z.object({
  version: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_migrationsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsWhereUniqueInput> = z.object({
  version: z.string().optional(),
}).strict();

export const directus_migrationsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsOrderByWithAggregationInput> = z.object({
  version: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_migrationsCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_migrationsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_migrationsMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_migrationsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_migrationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_migrationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_migrationsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_migrationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_migrationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  version: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  timestamp: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
}).strict();

export const directus_notificationsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_notificationsWhereInputSchema), z.lazy(() => directus_notificationsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_notificationsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_notificationsWhereInputSchema), z.lazy(() => directus_notificationsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  timestamp: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  status: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  recipient: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  sender: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  subject: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  message: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_users_directus_notifications_recipientTodirectus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional(),
  directus_users_directus_notifications_senderTodirectus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  subject: z.lazy(() => SortOrderSchema).optional(),
  message: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  directus_users_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
  directus_users_directus_notifications_senderTodirectus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_notificationsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_notificationsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  subject: z.lazy(() => SortOrderSchema).optional(),
  message: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_notificationsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_notificationsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_notificationsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_notificationsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_notificationsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_notificationsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_notificationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_notificationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_notificationsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_notificationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_notificationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  timestamp: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  status: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  recipient: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  sender: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  subject: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  message: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_operationsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_operationsWhereInputSchema), z.lazy(() => directus_operationsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_operationsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_operationsWhereInputSchema), z.lazy(() => directus_operationsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  key: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  type: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  resolve: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  reject: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  flow: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  directus_flows: z.union([z.lazy(() => Directus_flowsRelationFilterSchema), z.lazy(() => directus_flowsWhereInputSchema)]).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.lazy(() => Directus_operationsRelationFilterSchema), z.lazy(() => directus_operationsWhereInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.union([z.lazy(() => Directus_operationsRelationFilterSchema), z.lazy(() => directus_operationsWhereInputSchema)]).optional().nullable(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.lazy(() => Directus_operationsRelationFilterSchema), z.lazy(() => directus_operationsWhereInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.union([z.lazy(() => Directus_operationsRelationFilterSchema), z.lazy(() => directus_operationsWhereInputSchema)]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_operationsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  key: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  resolve: z.lazy(() => SortOrderSchema).optional(),
  reject: z.lazy(() => SortOrderSchema).optional(),
  flow: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsOrderByWithRelationInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsOrderByWithRelationInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsOrderByWithRelationInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsOrderByWithRelationInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsOrderByWithRelationInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_operationsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsWhereUniqueInput> = z.object({
  id: z.string().optional(),
  resolve: z.string().optional(),
  reject: z.string().optional(),
}).strict();

export const directus_operationsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  key: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  resolve: z.lazy(() => SortOrderSchema).optional(),
  reject: z.lazy(() => SortOrderSchema).optional(),
  flow: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_operationsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_operationsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_operationsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_operationsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_operationsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_operationsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_operationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_operationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_operationsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_operationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_operationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  key: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  type: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  resolve: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  reject: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  flow: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_panelsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_panelsWhereInputSchema), z.lazy(() => directus_panelsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_panelsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_panelsWhereInputSchema), z.lazy(() => directus_panelsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  dashboard: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  show_header: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  width: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  height: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  directus_dashboards: z.union([z.lazy(() => Directus_dashboardsRelationFilterSchema), z.lazy(() => directus_dashboardsWhereInputSchema)]).optional(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  dashboard: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  show_header: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  directus_dashboards: z.lazy(() => directus_dashboardsOrderByWithRelationInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_panelsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_panelsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  dashboard: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  show_header: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_panelsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_panelsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_panelsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_panelsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_panelsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_panelsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_panelsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_panelsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_panelsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_panelsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_panelsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  dashboard: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  icon: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  show_header: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  note: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  width: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  height: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_permissionsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_permissionsWhereInputSchema), z.lazy(() => directus_permissionsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_permissionsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_permissionsWhereInputSchema), z.lazy(() => directus_permissionsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  action: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  permissions: z.lazy(() => JsonNullableFilterSchema).optional(),
  validation: z.lazy(() => JsonNullableFilterSchema).optional(),
  presets: z.lazy(() => JsonNullableFilterSchema).optional(),
  fields: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_roles: z.union([z.lazy(() => Directus_rolesRelationFilterSchema), z.lazy(() => directus_rolesWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  permissions: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  presets: z.lazy(() => SortOrderSchema).optional(),
  fields: z.lazy(() => SortOrderSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_permissionsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_permissionsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  permissions: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  presets: z.lazy(() => SortOrderSchema).optional(),
  fields: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_permissionsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_permissionsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_permissionsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_permissionsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_permissionsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_permissionsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_permissionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_permissionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_permissionsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_permissionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_permissionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  role: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  action: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  permissions: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  validation: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  presets: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  fields: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_presetsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_presetsWhereInputSchema), z.lazy(() => directus_presetsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_presetsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_presetsWhereInputSchema), z.lazy(() => directus_presetsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  bookmark: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  search: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  layout: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  layout_query: z.lazy(() => JsonNullableFilterSchema).optional(),
  layout_options: z.lazy(() => JsonNullableFilterSchema).optional(),
  refresh_interval: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  filter: z.lazy(() => JsonNullableFilterSchema).optional(),
  icon: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_roles: z.union([z.lazy(() => Directus_rolesRelationFilterSchema), z.lazy(() => directus_rolesWhereInputSchema)]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  bookmark: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  search: z.lazy(() => SortOrderSchema).optional(),
  layout: z.lazy(() => SortOrderSchema).optional(),
  layout_query: z.lazy(() => SortOrderSchema).optional(),
  layout_options: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
  filter: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesOrderByWithRelationInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_presetsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_presetsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  bookmark: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  search: z.lazy(() => SortOrderSchema).optional(),
  layout: z.lazy(() => SortOrderSchema).optional(),
  layout_query: z.lazy(() => SortOrderSchema).optional(),
  layout_options: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
  filter: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_presetsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_presetsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_presetsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_presetsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_presetsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_presetsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_presetsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_presetsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_presetsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_presetsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_presetsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  bookmark: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  user: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  search: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  layout: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  layout_query: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  layout_options: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  refresh_interval: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  filter: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  icon: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_relationsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_relationsWhereInputSchema), z.lazy(() => directus_relationsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_relationsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_relationsWhereInputSchema), z.lazy(() => directus_relationsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  many_collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  many_field: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  one_collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  one_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  one_collection_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  one_allowed_collections: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  junction_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  sort_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  one_deselect_action: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
}).strict();

export const directus_relationsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  many_collection: z.lazy(() => SortOrderSchema).optional(),
  many_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection: z.lazy(() => SortOrderSchema).optional(),
  one_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection_field: z.lazy(() => SortOrderSchema).optional(),
  one_allowed_collections: z.lazy(() => SortOrderSchema).optional(),
  junction_field: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  one_deselect_action: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_relationsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  many_collection: z.lazy(() => SortOrderSchema).optional(),
  many_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection: z.lazy(() => SortOrderSchema).optional(),
  one_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection_field: z.lazy(() => SortOrderSchema).optional(),
  one_allowed_collections: z.lazy(() => SortOrderSchema).optional(),
  junction_field: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  one_deselect_action: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_relationsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_relationsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_relationsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_relationsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_relationsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_relationsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_relationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_relationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_relationsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_relationsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_relationsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  many_collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  many_field: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  one_collection: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  one_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  one_collection_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  one_allowed_collections: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  junction_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  sort_field: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  one_deselect_action: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
}).strict();

export const directus_revisionsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_revisionsWhereInputSchema), z.lazy(() => directus_revisionsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_revisionsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_revisionsWhereInputSchema), z.lazy(() => directus_revisionsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  activity: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  item: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  data: z.lazy(() => JsonNullableFilterSchema).optional(),
  delta: z.lazy(() => JsonNullableFilterSchema).optional(),
  parent: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  directus_activity: z.union([z.lazy(() => Directus_activityRelationFilterSchema), z.lazy(() => directus_activityWhereInputSchema)]).optional(),
  directus_revisions: z.union([z.lazy(() => Directus_revisionsRelationFilterSchema), z.lazy(() => directus_revisionsWhereInputSchema)]).optional().nullable(),
  other_directus_revisions: z.lazy(() => Directus_revisionsListRelationFilterSchema).optional(),
}).strict();

export const directus_revisionsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  delta: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
  directus_activity: z.lazy(() => directus_activityOrderByWithRelationInputSchema).optional(),
  directus_revisions: z.lazy(() => directus_revisionsOrderByWithRelationInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_revisionsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_revisionsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  delta: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_revisionsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_revisionsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_revisionsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_revisionsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_revisionsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_revisionsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_revisionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_revisionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_revisionsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_revisionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_revisionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  activity: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  collection: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  item: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  data: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  delta: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  parent: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
}).strict();

export const directus_rolesWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_rolesWhereInputSchema), z.lazy(() => directus_rolesWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_rolesWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_rolesWhereInputSchema), z.lazy(() => directus_rolesWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  ip_access: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  enforce_tfa: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  admin_access: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  app_access: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  directus_permissions: z.lazy(() => Directus_permissionsListRelationFilterSchema).optional(),
  directus_presets: z.lazy(() => Directus_presetsListRelationFilterSchema).optional(),
  directus_shares: z.lazy(() => Directus_sharesListRelationFilterSchema).optional(),
  directus_users: z.lazy(() => Directus_usersListRelationFilterSchema).optional(),
}).strict();

export const directus_rolesOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  ip_access: z.lazy(() => SortOrderSchema).optional(),
  enforce_tfa: z.lazy(() => SortOrderSchema).optional(),
  admin_access: z.lazy(() => SortOrderSchema).optional(),
  app_access: z.lazy(() => SortOrderSchema).optional(),
  directus_permissions: z.lazy(() => directus_permissionsOrderByRelationAggregateInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsOrderByRelationAggregateInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesOrderByRelationAggregateInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByRelationAggregateInputSchema).optional(),
}).strict();

export const directus_rolesWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_rolesOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  ip_access: z.lazy(() => SortOrderSchema).optional(),
  enforce_tfa: z.lazy(() => SortOrderSchema).optional(),
  admin_access: z.lazy(() => SortOrderSchema).optional(),
  app_access: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_rolesCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_rolesMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_rolesMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_rolesScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_rolesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_rolesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_rolesScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_rolesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_rolesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  description: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  ip_access: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  enforce_tfa: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  admin_access: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  app_access: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
}).strict();

export const directus_sessionsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_sessionsWhereInputSchema), z.lazy(() => directus_sessionsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sessionsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sessionsWhereInputSchema), z.lazy(() => directus_sessionsWhereInputSchema).array()]).optional(),
  token: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  user: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  expires: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  ip: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user_agent: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  share: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  origin: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  directus_shares: z.union([z.lazy(() => Directus_sharesRelationFilterSchema), z.lazy(() => directus_sharesWhereInputSchema)]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsOrderByWithRelationInput> = z.object({
  token: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  expires: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  share: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesOrderByWithRelationInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_sessionsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsWhereUniqueInput> = z.object({
  token: z.string().optional(),
}).strict();

export const directus_sessionsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsOrderByWithAggregationInput> = z.object({
  token: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  expires: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  share: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_sessionsCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_sessionsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_sessionsMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_sessionsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_sessionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_sessionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sessionsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sessionsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_sessionsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  token: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  user: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  expires: z.union([z.lazy(() => DateTimeWithAggregatesFilterSchema), z.date()]).optional(),
  ip: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  user_agent: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  share: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  origin: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_settingsWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_settingsWhereInputSchema), z.lazy(() => directus_settingsWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_settingsWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_settingsWhereInputSchema), z.lazy(() => directus_settingsWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  project_name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  project_url: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  project_color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  project_logo: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_foreground: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_background: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  auth_login_attempts: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  auth_password_policy: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_asset_transform: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_asset_presets: z.lazy(() => JsonNullableFilterSchema).optional(),
  custom_css: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_default_folder: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  basemaps: z.lazy(() => JsonNullableFilterSchema).optional(),
  mapbox_key: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  module_bar: z.lazy(() => JsonNullableFilterSchema).optional(),
  project_descriptor: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  translation_strings: z.lazy(() => JsonNullableFilterSchema).optional(),
  default_language: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  custom_aspect_ratios: z.lazy(() => JsonNullableFilterSchema).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.union([z.lazy(() => Directus_filesRelationFilterSchema), z.lazy(() => directus_filesWhereInputSchema)]).optional().nullable(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.union([z.lazy(() => Directus_filesRelationFilterSchema), z.lazy(() => directus_filesWhereInputSchema)]).optional().nullable(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.union([z.lazy(() => Directus_filesRelationFilterSchema), z.lazy(() => directus_filesWhereInputSchema)]).optional().nullable(),
  directus_folders: z.union([z.lazy(() => Directus_foldersRelationFilterSchema), z.lazy(() => directus_foldersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_settingsOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  project_name: z.lazy(() => SortOrderSchema).optional(),
  project_url: z.lazy(() => SortOrderSchema).optional(),
  project_color: z.lazy(() => SortOrderSchema).optional(),
  project_logo: z.lazy(() => SortOrderSchema).optional(),
  public_foreground: z.lazy(() => SortOrderSchema).optional(),
  public_background: z.lazy(() => SortOrderSchema).optional(),
  public_note: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
  auth_password_policy: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_transform: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_presets: z.lazy(() => SortOrderSchema).optional(),
  custom_css: z.lazy(() => SortOrderSchema).optional(),
  storage_default_folder: z.lazy(() => SortOrderSchema).optional(),
  basemaps: z.lazy(() => SortOrderSchema).optional(),
  mapbox_key: z.lazy(() => SortOrderSchema).optional(),
  module_bar: z.lazy(() => SortOrderSchema).optional(),
  project_descriptor: z.lazy(() => SortOrderSchema).optional(),
  translation_strings: z.lazy(() => SortOrderSchema).optional(),
  default_language: z.lazy(() => SortOrderSchema).optional(),
  custom_aspect_ratios: z.lazy(() => SortOrderSchema).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesOrderByWithRelationInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesOrderByWithRelationInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesOrderByWithRelationInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_settingsWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_settingsOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  project_name: z.lazy(() => SortOrderSchema).optional(),
  project_url: z.lazy(() => SortOrderSchema).optional(),
  project_color: z.lazy(() => SortOrderSchema).optional(),
  project_logo: z.lazy(() => SortOrderSchema).optional(),
  public_foreground: z.lazy(() => SortOrderSchema).optional(),
  public_background: z.lazy(() => SortOrderSchema).optional(),
  public_note: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
  auth_password_policy: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_transform: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_presets: z.lazy(() => SortOrderSchema).optional(),
  custom_css: z.lazy(() => SortOrderSchema).optional(),
  storage_default_folder: z.lazy(() => SortOrderSchema).optional(),
  basemaps: z.lazy(() => SortOrderSchema).optional(),
  mapbox_key: z.lazy(() => SortOrderSchema).optional(),
  module_bar: z.lazy(() => SortOrderSchema).optional(),
  project_descriptor: z.lazy(() => SortOrderSchema).optional(),
  translation_strings: z.lazy(() => SortOrderSchema).optional(),
  default_language: z.lazy(() => SortOrderSchema).optional(),
  custom_aspect_ratios: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_settingsCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_settingsAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_settingsMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_settingsMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_settingsSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_settingsScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_settingsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_settingsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_settingsScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_settingsScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_settingsScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  project_name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  project_url: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  project_color: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  project_logo: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  public_foreground: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  public_background: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  public_note: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  auth_login_attempts: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  auth_password_policy: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  storage_asset_transform: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  storage_asset_presets: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  custom_css: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  storage_default_folder: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  basemaps: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  mapbox_key: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  module_bar: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  project_descriptor: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  translation_strings: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  default_language: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  custom_aspect_ratios: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
}).strict();

export const directus_sharesWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_sharesWhereInputSchema), z.lazy(() => directus_sharesWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sharesWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sharesWhereInputSchema), z.lazy(() => directus_sharesWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  date_start: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  date_end: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  times_used: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  max_uses: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  directus_sessions: z.lazy(() => Directus_sessionsListRelationFilterSchema).optional(),
  directus_collections: z.union([z.lazy(() => Directus_collectionsRelationFilterSchema), z.lazy(() => directus_collectionsWhereInputSchema)]).optional().nullable(),
  directus_roles: z.union([z.lazy(() => Directus_rolesRelationFilterSchema), z.lazy(() => directus_rolesWhereInputSchema)]).optional().nullable(),
  directus_users: z.union([z.lazy(() => Directus_usersRelationFilterSchema), z.lazy(() => directus_usersWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_sharesOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  date_start: z.lazy(() => SortOrderSchema).optional(),
  date_end: z.lazy(() => SortOrderSchema).optional(),
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsOrderByRelationAggregateInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsOrderByWithRelationInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesOrderByWithRelationInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_sharesWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesWhereUniqueInput> = z.object({
  id: z.string().optional(),
}).strict();

export const directus_sharesOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  date_start: z.lazy(() => SortOrderSchema).optional(),
  date_end: z.lazy(() => SortOrderSchema).optional(),
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_sharesCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_sharesAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_sharesMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_sharesMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_sharesSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_sharesScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_sharesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_sharesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sharesScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sharesScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_sharesScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  date_start: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  date_end: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  times_used: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
  max_uses: z.union([z.lazy(() => IntNullableWithAggregatesFilterSchema), z.number()]).optional().nullable(),
}).strict();

export const directus_usersWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_usersWhereInputSchema), z.lazy(() => directus_usersWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_usersWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_usersWhereInputSchema), z.lazy(() => directus_usersWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  first_name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  last_name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  email: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  title: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tags: z.lazy(() => JsonNullableFilterSchema).optional(),
  avatar: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  language: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  theme: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tfa_secret: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  token: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  last_access: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  last_page: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  provider: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  external_identifier: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  auth_data: z.lazy(() => JsonNullableFilterSchema).optional(),
  email_notifications: z.union([z.lazy(() => BoolNullableFilterSchema), z.boolean()]).optional().nullable(),
  directus_dashboards: z.lazy(() => Directus_dashboardsListRelationFilterSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => Directus_filesListRelationFilterSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => Directus_filesListRelationFilterSchema).optional(),
  directus_flows: z.lazy(() => Directus_flowsListRelationFilterSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => Directus_notificationsListRelationFilterSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => Directus_notificationsListRelationFilterSchema).optional(),
  directus_operations: z.lazy(() => Directus_operationsListRelationFilterSchema).optional(),
  directus_panels: z.lazy(() => Directus_panelsListRelationFilterSchema).optional(),
  directus_presets: z.lazy(() => Directus_presetsListRelationFilterSchema).optional(),
  directus_sessions: z.lazy(() => Directus_sessionsListRelationFilterSchema).optional(),
  directus_shares: z.lazy(() => Directus_sharesListRelationFilterSchema).optional(),
  directus_roles: z.union([z.lazy(() => Directus_rolesRelationFilterSchema), z.lazy(() => directus_rolesWhereInputSchema)]).optional().nullable(),
}).strict();

export const directus_usersOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  first_name: z.lazy(() => SortOrderSchema).optional(),
  last_name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  avatar: z.lazy(() => SortOrderSchema).optional(),
  language: z.lazy(() => SortOrderSchema).optional(),
  theme: z.lazy(() => SortOrderSchema).optional(),
  tfa_secret: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  token: z.lazy(() => SortOrderSchema).optional(),
  last_access: z.lazy(() => SortOrderSchema).optional(),
  last_page: z.lazy(() => SortOrderSchema).optional(),
  provider: z.lazy(() => SortOrderSchema).optional(),
  external_identifier: z.lazy(() => SortOrderSchema).optional(),
  auth_data: z.lazy(() => SortOrderSchema).optional(),
  email_notifications: z.lazy(() => SortOrderSchema).optional(),
  directus_dashboards: z.lazy(() => directus_dashboardsOrderByRelationAggregateInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesOrderByRelationAggregateInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesOrderByRelationAggregateInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsOrderByRelationAggregateInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsOrderByRelationAggregateInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsOrderByRelationAggregateInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsOrderByRelationAggregateInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsOrderByRelationAggregateInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsOrderByRelationAggregateInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsOrderByRelationAggregateInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesOrderByRelationAggregateInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesOrderByWithRelationInputSchema).optional(),
}).strict();

export const directus_usersWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersWhereUniqueInput> = z.object({
  id: z.string().optional(),
  email: z.string().optional(),
  token: z.string().optional(),
  external_identifier: z.string().optional(),
}).strict();

export const directus_usersOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  first_name: z.lazy(() => SortOrderSchema).optional(),
  last_name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  avatar: z.lazy(() => SortOrderSchema).optional(),
  language: z.lazy(() => SortOrderSchema).optional(),
  theme: z.lazy(() => SortOrderSchema).optional(),
  tfa_secret: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  token: z.lazy(() => SortOrderSchema).optional(),
  last_access: z.lazy(() => SortOrderSchema).optional(),
  last_page: z.lazy(() => SortOrderSchema).optional(),
  provider: z.lazy(() => SortOrderSchema).optional(),
  external_identifier: z.lazy(() => SortOrderSchema).optional(),
  auth_data: z.lazy(() => SortOrderSchema).optional(),
  email_notifications: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_usersCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_usersMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_usersMinOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_usersScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_usersScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_usersScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_usersScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_usersScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_usersScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidWithAggregatesFilterSchema), z.string()]).optional(),
  first_name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  last_name: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  email: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  title: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  tags: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  avatar: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  language: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  theme: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  tfa_secret: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  role: z.union([z.lazy(() => UuidNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  token: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  last_access: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterSchema), z.date()]).optional().nullable(),
  last_page: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  provider: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  external_identifier: z.union([z.lazy(() => StringNullableWithAggregatesFilterSchema), z.string()]).optional().nullable(),
  auth_data: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  email_notifications: z.union([z.lazy(() => BoolNullableWithAggregatesFilterSchema), z.boolean()]).optional().nullable(),
}).strict();

export const directus_webhooksWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_webhooksWhereInputSchema), z.lazy(() => directus_webhooksWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_webhooksWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_webhooksWhereInputSchema), z.lazy(() => directus_webhooksWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  method: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  url: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  data: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  actions: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  collections: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  headers: z.lazy(() => JsonNullableFilterSchema).optional(),
}).strict();

export const directus_webhooksOrderByWithRelationInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  actions: z.lazy(() => SortOrderSchema).optional(),
  collections: z.lazy(() => SortOrderSchema).optional(),
  headers: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksWhereUniqueInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksWhereUniqueInput> = z.object({
  id: z.number().int().optional(),
}).strict();

export const directus_webhooksOrderByWithAggregationInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  actions: z.lazy(() => SortOrderSchema).optional(),
  collections: z.lazy(() => SortOrderSchema).optional(),
  headers: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => directus_webhooksCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => directus_webhooksAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => directus_webhooksMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => directus_webhooksMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => directus_webhooksSumOrderByAggregateInputSchema).optional(),
}).strict();

export const directus_webhooksScalarWhereWithAggregatesInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([z.lazy(() => directus_webhooksScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_webhooksScalarWhereWithAggregatesInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_webhooksScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_webhooksScalarWhereWithAggregatesInputSchema), z.lazy(() => directus_webhooksScalarWhereWithAggregatesInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntWithAggregatesFilterSchema), z.number()]).optional(),
  name: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  method: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  url: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  data: z.union([z.lazy(() => BoolWithAggregatesFilterSchema), z.boolean()]).optional(),
  actions: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  collections: z.union([z.lazy(() => StringWithAggregatesFilterSchema), z.string()]).optional(),
  headers: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
}).strict();

export const UserCreateInputSchema: z.ZodType<PrismaClient.Prisma.UserCreateInput> = z.object({
  id: z.string(),
  email: z.string(),
  name: z.string().optional().nullable(),
  customerId: z.string().optional().nullable(),
  role: z.lazy(() => RoleSchema).optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const UserUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.UserUncheckedCreateInput> = z.object({
  id: z.string(),
  email: z.string(),
  name: z.string().optional().nullable(),
  customerId: z.string().optional().nullable(),
  role: z.lazy(() => RoleSchema).optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const UserUpdateInputSchema: z.ZodType<PrismaClient.Prisma.UserUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  email: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  customerId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.lazy(() => RoleSchema), z.lazy(() => EnumRoleFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const UserUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.UserUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  email: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  customerId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.lazy(() => RoleSchema), z.lazy(() => EnumRoleFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const UserCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.UserCreateManyInput> = z.object({
  id: z.string(),
  email: z.string(),
  name: z.string().optional().nullable(),
  customerId: z.string().optional().nullable(),
  role: z.lazy(() => RoleSchema).optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const UserUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.UserUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  email: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  customerId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.lazy(() => RoleSchema), z.lazy(() => EnumRoleFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const UserUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.UserUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  email: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  customerId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.lazy(() => RoleSchema), z.lazy(() => EnumRoleFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const CourseCreateInputSchema: z.ZodType<PrismaClient.Prisma.CourseCreateInput> = z.object({
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().optional().nullable(),
  status: z.string().optional(),
  lastRevised: z.date().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  modules: z.lazy(() => ModuleCreateNestedManyWithoutCourseInputSchema).optional(),
}).strict();

export const CourseUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.CourseUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().optional().nullable(),
  status: z.string().optional(),
  lastRevised: z.date().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  modules: z.lazy(() => ModuleUncheckedCreateNestedManyWithoutCourseInputSchema).optional(),
}).strict();

export const CourseUpdateInputSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modules: z.lazy(() => ModuleUpdateManyWithoutCourseNestedInputSchema).optional(),
}).strict();

export const CourseUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.CourseUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modules: z.lazy(() => ModuleUncheckedUpdateManyWithoutCourseNestedInputSchema).optional(),
}).strict();

export const CourseCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.CourseCreateManyInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().optional().nullable(),
  status: z.string().optional(),
  lastRevised: z.date().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const CourseUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateManyMutationInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const CourseUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.CourseUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleCreateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateInput> = z.object({
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  lessons: z.lazy(() => LessonCreateNestedManyWithoutModuleInputSchema).optional(),
  course: z.lazy(() => CourseCreateNestedOneWithoutModulesInputSchema),
  sortOrder: z.number().int(),
}).strict();

export const ModuleUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  courseId: z.number().int(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  lessons: z.lazy(() => LessonUncheckedCreateNestedManyWithoutModuleInputSchema).optional(),
  sortOrder: z.number().int(),
}).strict();

export const ModuleUpdateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUpdateManyWithoutModuleNestedInputSchema).optional(),
  course: z.lazy(() => CourseUpdateOneRequiredWithoutModulesNestedInputSchema).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  courseId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUncheckedUpdateManyWithoutModuleNestedInputSchema).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateManyInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  courseId: z.number().int(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  sortOrder: z.number().int(),
}).strict();

export const ModuleUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateManyMutationInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  courseId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonCreateInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateInput> = z.object({
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  module: z.lazy(() => ModuleCreateNestedOneWithoutLessonsInputSchema),
  isFree: z.boolean().optional(),
  sortOrder: z.number().int(),
  lessonType: z.lazy(() => LessonTypeCreateNestedOneWithoutLessonsInputSchema),
}).strict();

export const LessonUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  moduleId: z.number().int(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number().int(),
  lessonTypeId: z.number().int(),
}).strict();

export const LessonUpdateInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  module: z.lazy(() => ModuleUpdateOneRequiredWithoutLessonsNestedInputSchema).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonType: z.lazy(() => LessonTypeUpdateOneRequiredWithoutLessonsNestedInputSchema).optional(),
}).strict();

export const LessonUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  moduleId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonTypeId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  moduleId: z.number().int(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number().int(),
  lessonTypeId: z.number().int(),
}).strict();

export const LessonUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyMutationInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  moduleId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonTypeId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonTypeCreateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateInput> = z.object({
  name: z.string(),
  lessons: z.lazy(() => LessonCreateNestedManyWithoutLessonTypeInputSchema).optional(),
}).strict();

export const LessonTypeUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  name: z.string(),
  lessons: z.lazy(() => LessonUncheckedCreateNestedManyWithoutLessonTypeInputSchema).optional(),
}).strict();

export const LessonTypeUpdateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateInput> = z.object({
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUpdateManyWithoutLessonTypeNestedInputSchema).optional(),
}).strict();

export const LessonTypeUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUncheckedUpdateManyWithoutLessonTypeNestedInputSchema).optional(),
}).strict();

export const LessonTypeCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateManyInput> = z.object({
  id: z.number().int().optional(),
  name: z.string(),
}).strict();

export const LessonTypeUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateManyMutationInput> = z.object({
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonTypeUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_activityCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateInput> = z.object({
  action: z.string(),
  user: z.string().optional().nullable(),
  timestamp: z.date().optional(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  directus_revisions: z.lazy(() => directus_revisionsCreateNestedManyWithoutDirectus_activityInputSchema).optional(),
}).strict();

export const directus_activityUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  action: z.string(),
  user: z.string().optional().nullable(),
  timestamp: z.date().optional(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  directus_revisions: z.lazy(() => directus_revisionsUncheckedCreateNestedManyWithoutDirectus_activityInputSchema).optional(),
}).strict();

export const directus_activityUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateInput> = z.object({
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_revisions: z.lazy(() => directus_revisionsUpdateManyWithoutDirectus_activityNestedInputSchema).optional(),
}).strict();

export const directus_activityUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_revisions: z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutDirectus_activityNestedInputSchema).optional(),
}).strict();

export const directus_activityCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateManyInput> = z.object({
  id: z.number().int().optional(),
  action: z.string(),
  user: z.string().optional().nullable(),
  timestamp: z.date().optional(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_activityUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateManyMutationInput> = z.object({
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_activityUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_collectionsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().int().optional().nullable(),
  collapse: z.string().optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutOther_directus_collectionsInputSchema).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedCreateInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().int().optional().nullable(),
  group: z.string().optional().nullable(),
  collapse: z.string().optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutOther_directus_collectionsNestedInputSchema).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateManyInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().int().optional().nullable(),
  group: z.string().optional().nullable(),
  collapse: z.string().optional(),
}).strict();

export const directus_collectionsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateManyMutationInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateManyInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_dashboardsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  color: z.string().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_dashboardsInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_dashboardsInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_dashboardsInputSchema).optional(),
}).strict();

export const directus_dashboardsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_dashboardsNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_dashboardsNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_dashboardsNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateManyInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_dashboardsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_dashboardsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_fieldsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsCreateInput> = z.object({
  collection: z.string(),
  field: z.string(),
  special: z.string().optional().nullable(),
  interface: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.string().optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.boolean().optional(),
  hidden: z.boolean().optional(),
  sort: z.number().int().optional().nullable(),
  width: z.string().optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.string().optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.boolean().optional().nullable(),
  group: z.string().optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.string().optional().nullable(),
}).strict();

export const directus_fieldsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  collection: z.string(),
  field: z.string(),
  special: z.string().optional().nullable(),
  interface: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.string().optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.boolean().optional(),
  hidden: z.boolean().optional(),
  sort: z.number().int().optional().nullable(),
  width: z.string().optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.string().optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.boolean().optional().nullable(),
  group: z.string().optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.string().optional().nullable(),
}).strict();

export const directus_fieldsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUpdateInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  special: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  interface: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_fieldsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  special: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  interface: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_fieldsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  collection: z.string(),
  field: z.string(),
  special: z.string().optional().nullable(),
  interface: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.string().optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.boolean().optional(),
  hidden: z.boolean().optional(),
  sort: z.number().int().optional().nullable(),
  width: z.string().optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.string().optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.boolean().optional().nullable(),
  group: z.string().optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.string().optional().nullable(),
}).strict();

export const directus_fieldsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUpdateManyMutationInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  special: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  interface: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_fieldsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  special: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  interface: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  display: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  readonly: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  conditions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  required: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation_message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_filesCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_filesUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_flowsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_flowsInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_flowsInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_flowsInputSchema).optional(),
}).strict();

export const directus_flowsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_flowsNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_flowsNestedInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_flowsNestedInputSchema).optional(),
}).strict();

export const directus_flowsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateManyInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_flowsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_flowsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_foldersCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_files: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutOther_directus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_files: z.lazy(() => directus_filesUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutOther_directus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  parent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateManyInput> = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().optional().nullable(),
}).strict();

export const directus_foldersUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_foldersUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  parent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_migrationsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsCreateInput> = z.object({
  version: z.string(),
  name: z.string(),
  timestamp: z.date().optional().nullable(),
}).strict();

export const directus_migrationsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUncheckedCreateInput> = z.object({
  version: z.string(),
  name: z.string(),
  timestamp: z.date().optional().nullable(),
}).strict();

export const directus_migrationsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUpdateInput> = z.object({
  version: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_migrationsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUncheckedUpdateInput> = z.object({
  version: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_migrationsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsCreateManyInput> = z.object({
  version: z.string(),
  name: z.string(),
  timestamp: z.date().optional().nullable(),
}).strict();

export const directus_migrationsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUpdateManyMutationInput> = z.object({
  version: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_migrationsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUncheckedUpdateManyInput> = z.object({
  version: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateInput> = z.object({
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  directus_users_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema),
  directus_users_directus_notifications_senderTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema).optional(),
}).strict();

export const directus_notificationsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  recipient: z.string(),
  sender: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_notificationsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateInput> = z.object({
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_usersUpdateOneRequiredWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_notifications_senderTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_notificationsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  recipient: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  sender: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  recipient: z.string(),
  sender: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_notificationsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyMutationInput> = z.object({
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  recipient: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  sender: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_operationsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_operationsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_operationsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedOneWithoutDirectus_panelsInputSchema),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_panelsInputSchema).optional(),
}).strict();

export const directus_panelsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedCreateInput> = z.object({
  id: z.string(),
  dashboard: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_panelsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateOneRequiredWithoutDirectus_panelsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_panelsNestedInputSchema).optional(),
}).strict();

export const directus_panelsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  dashboard: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyInput> = z.object({
  id: z.string(),
  dashboard: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_panelsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  dashboard: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateInput> = z.object({
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_permissionsInputSchema).optional(),
}).strict();

export const directus_permissionsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  role: z.string().optional().nullable(),
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
}).strict();

export const directus_permissionsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_permissionsNestedInputSchema).optional(),
}).strict();

export const directus_permissionsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  role: z.string().optional().nullable(),
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
}).strict();

export const directus_permissionsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateManyMutationInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateInput> = z.object({
  bookmark: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().int().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_presetsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_presetsInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  bookmark: z.string().optional().nullable(),
  user: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().int().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_presetsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateInput> = z.object({
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_presetsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_presetsNestedInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  bookmark: z.string().optional().nullable(),
  user: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().int().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_presetsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyMutationInput> = z.object({
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_relationsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsCreateInput> = z.object({
  many_collection: z.string(),
  many_field: z.string(),
  one_collection: z.string().optional().nullable(),
  one_field: z.string().optional().nullable(),
  one_collection_field: z.string().optional().nullable(),
  one_allowed_collections: z.string().optional().nullable(),
  junction_field: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  one_deselect_action: z.string().optional(),
}).strict();

export const directus_relationsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  many_collection: z.string(),
  many_field: z.string(),
  one_collection: z.string().optional().nullable(),
  one_field: z.string().optional().nullable(),
  one_collection_field: z.string().optional().nullable(),
  one_allowed_collections: z.string().optional().nullable(),
  junction_field: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  one_deselect_action: z.string().optional(),
}).strict();

export const directus_relationsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUpdateInput> = z.object({
  many_collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  many_field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  one_collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_collection_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_allowed_collections: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  junction_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_deselect_action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_relationsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  many_collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  many_field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  one_collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_collection_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_allowed_collections: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  junction_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_deselect_action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_relationsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  many_collection: z.string(),
  many_field: z.string(),
  one_collection: z.string().optional().nullable(),
  one_field: z.string().optional().nullable(),
  one_collection_field: z.string().optional().nullable(),
  one_allowed_collections: z.string().optional().nullable(),
  junction_field: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  one_deselect_action: z.string().optional(),
}).strict();

export const directus_relationsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUpdateManyMutationInput> = z.object({
  many_collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  many_field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  one_collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_collection_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_allowed_collections: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  junction_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_deselect_action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_relationsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  many_collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  many_field: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  one_collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_collection_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_allowed_collections: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  junction_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  one_deselect_action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_revisionsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateInput> = z.object({
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityCreateNestedOneWithoutDirectus_revisionsInputSchema),
  directus_revisions: z.lazy(() => directus_revisionsCreateNestedOneWithoutOther_directus_revisionsInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  activity: z.number().int(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.number().int().optional().nullable(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityUpdateOneRequiredWithoutDirectus_revisionsNestedInputSchema).optional(),
  directus_revisions: z.lazy(() => directus_revisionsUpdateOneWithoutOther_directus_revisionsNestedInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  activity: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  activity: z.number().int(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.number().int().optional().nullable(),
}).strict();

export const directus_revisionsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyMutationInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  activity: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_rolesCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateManyInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
}).strict();

export const directus_rolesUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_rolesUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_sessionsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateInput> = z.object({
  token: z.string(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedOneWithoutDirectus_sessionsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sessionsInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedCreateInput> = z.object({
  token: z.string(),
  user: z.string().optional().nullable(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  share: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sessionsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_shares: z.lazy(() => directus_sharesUpdateOneWithoutDirectus_sessionsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sessionsNestedInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  share: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyInput> = z.object({
  token: z.string(),
  user: z.string().optional().nullable(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  share: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sessionsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyMutationInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateManyInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  share: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_settingsCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateInput> = z.object({
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().int().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_settingsInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().int().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_settingsNestedInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyInput> = z.object({
  id: z.number().int().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().int().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyMutationInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_sharesCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
}).strict();

export const directus_sharesUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sharesUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_usersCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateManyInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
}).strict();

export const directus_usersUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateManyMutationInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_usersUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateManyInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_webhooksCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksCreateInput> = z.object({
  name: z.string(),
  method: z.string().optional(),
  url: z.string(),
  status: z.string().optional(),
  data: z.boolean().optional(),
  actions: z.string(),
  collections: z.string(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksUncheckedCreateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUncheckedCreateInput> = z.object({
  id: z.number().int().optional(),
  name: z.string(),
  method: z.string().optional(),
  url: z.string(),
  status: z.string().optional(),
  data: z.boolean().optional(),
  actions: z.string(),
  collections: z.string(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUpdateInput> = z.object({
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  method: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  url: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  actions: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  collections: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksUncheckedUpdateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUncheckedUpdateInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  method: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  url: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  actions: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  collections: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksCreateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksCreateManyInput> = z.object({
  id: z.number().int().optional(),
  name: z.string(),
  method: z.string().optional(),
  url: z.string(),
  status: z.string().optional(),
  data: z.boolean().optional(),
  actions: z.string(),
  collections: z.string(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksUpdateManyMutationInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUpdateManyMutationInput> = z.object({
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  method: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  url: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  actions: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  collections: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_webhooksUncheckedUpdateManyInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUncheckedUpdateManyInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  method: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  url: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  actions: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  collections: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  headers: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const StringFilterSchema: z.ZodType<PrismaClient.Prisma.StringFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringFilterSchema)]).optional(),
}).strict();

export const StringNullableFilterSchema: z.ZodType<PrismaClient.Prisma.StringNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringNullableFilterSchema)]).optional().nullable(),
}).strict();

export const EnumRoleFilterSchema: z.ZodType<PrismaClient.Prisma.EnumRoleFilter> = z.object({
  equals: z.lazy(() => RoleSchema).optional(),
  in: z.lazy(() => RoleSchema).array().optional(),
  notIn: z.lazy(() => RoleSchema).array().optional(),
  not: z.union([z.lazy(() => RoleSchema), z.lazy(() => NestedEnumRoleFilterSchema)]).optional(),
}).strict();

export const DateTimeFilterSchema: z.ZodType<PrismaClient.Prisma.DateTimeFilter> = z.object({
  equals: z.date().optional(),
  in: z.date().array().optional(),
  notIn: z.date().array().optional(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeFilterSchema)]).optional(),
}).strict();

export const UserCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.UserCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UserMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.UserMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UserMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.UserMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const StringWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.StringWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional(),
}).strict();

export const StringNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.StringNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional(),
}).strict();

export const EnumRoleWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.EnumRoleWithAggregatesFilter> = z.object({
  equals: z.lazy(() => RoleSchema).optional(),
  in: z.lazy(() => RoleSchema).array().optional(),
  notIn: z.lazy(() => RoleSchema).array().optional(),
  not: z.union([z.lazy(() => RoleSchema), z.lazy(() => NestedEnumRoleWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumRoleFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumRoleFilterSchema).optional(),
}).strict();

export const DateTimeWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.DateTimeWithAggregatesFilter> = z.object({
  equals: z.date().optional(),
  in: z.date().array().optional(),
  notIn: z.date().array().optional(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeFilterSchema).optional(),
}).strict();

export const IntFilterSchema: z.ZodType<PrismaClient.Prisma.IntFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntFilterSchema)]).optional(),
}).strict();

export const ModuleListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.ModuleListRelationFilter> = z.object({
  every: z.lazy(() => ModuleWhereInputSchema).optional(),
  some: z.lazy(() => ModuleWhereInputSchema).optional(),
  none: z.lazy(() => ModuleWhereInputSchema).optional(),
}).strict();

export const ModuleOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const CourseCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.CourseCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  stripeProductId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  lastRevised: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const CourseAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.CourseAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const CourseMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.CourseMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  stripeProductId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  lastRevised: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const CourseMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.CourseMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  stripeProductId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  lastRevised: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const CourseSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.CourseSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const IntWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.IntWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedIntFilterSchema).optional(),
  _max: z.lazy(() => NestedIntFilterSchema).optional(),
}).strict();

export const LessonListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.LessonListRelationFilter> = z.object({
  every: z.lazy(() => LessonWhereInputSchema).optional(),
  some: z.lazy(() => LessonWhereInputSchema).optional(),
  none: z.lazy(() => LessonWhereInputSchema).optional(),
}).strict();

export const CourseRelationFilterSchema: z.ZodType<PrismaClient.Prisma.CourseRelationFilter> = z.object({
  is: z.lazy(() => CourseWhereInputSchema).optional(),
  isNot: z.lazy(() => CourseWhereInputSchema).optional(),
}).strict();

export const LessonOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.ModuleSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  courseId: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const ModuleRelationFilterSchema: z.ZodType<PrismaClient.Prisma.ModuleRelationFilter> = z.object({
  is: z.lazy(() => ModuleWhereInputSchema).optional(),
  isNot: z.lazy(() => ModuleWhereInputSchema).optional(),
}).strict();

export const BoolFilterSchema: z.ZodType<PrismaClient.Prisma.BoolFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolFilterSchema)]).optional(),
}).strict();

export const LessonTypeRelationFilterSchema: z.ZodType<PrismaClient.Prisma.LessonTypeRelationFilter> = z.object({
  is: z.lazy(() => LessonTypeWhereInputSchema).optional(),
  isNot: z.lazy(() => LessonTypeWhereInputSchema).optional(),
}).strict();

export const LessonCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  videoUrl: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  content: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  isFree: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  videoUrl: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  content: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  isFree: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  overview: z.lazy(() => SortOrderSchema).optional(),
  videoUrl: z.lazy(() => SortOrderSchema).optional(),
  slug: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  content: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  isFree: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  moduleId: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  lessonTypeId: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const BoolWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.BoolWithAggregatesFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolFilterSchema).optional(),
}).strict();

export const LessonTypeCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonTypeAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonTypeMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonTypeMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const LessonTypeSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UuidNullableFilterSchema: z.ZodType<PrismaClient.Prisma.UuidNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidNullableFilterSchema)]).optional().nullable(),
}).strict();

export const Directus_revisionsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_revisionsListRelationFilter> = z.object({
  every: z.lazy(() => directus_revisionsWhereInputSchema).optional(),
  some: z.lazy(() => directus_revisionsWhereInputSchema).optional(),
  none: z.lazy(() => directus_revisionsWhereInputSchema).optional(),
}).strict();

export const directus_revisionsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_activityCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  comment: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_activityAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_activityMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  comment: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_activityMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  comment: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_activitySumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_activitySumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UuidNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.UuidNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional(),
}).strict();

export const JsonNullableFilterSchema: z.ZodType<PrismaClient.Prisma.JsonNullableFilter> = z.object({
  equals: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
  path: z.string().array().optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_contains: InputJsonValue.optional().nullable(),
  array_starts_with: InputJsonValue.optional().nullable(),
  array_ends_with: InputJsonValue.optional().nullable(),
  lt: InputJsonValue.optional(),
  lte: InputJsonValue.optional(),
  gt: InputJsonValue.optional(),
  gte: InputJsonValue.optional(),
  not: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
}).strict();

export const IntNullableFilterSchema: z.ZodType<PrismaClient.Prisma.IntNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntNullableFilterSchema)]).optional().nullable(),
}).strict();

export const Directus_collectionsRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_collectionsRelationFilter> = z.object({
  is: z.lazy(() => directus_collectionsWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_collectionsWhereInputSchema).optional().nullable(),
}).strict();

export const Directus_collectionsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_collectionsListRelationFilter> = z.object({
  every: z.lazy(() => directus_collectionsWhereInputSchema).optional(),
  some: z.lazy(() => directus_collectionsWhereInputSchema).optional(),
  none: z.lazy(() => directus_collectionsWhereInputSchema).optional(),
}).strict();

export const Directus_sharesListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_sharesListRelationFilter> = z.object({
  every: z.lazy(() => directus_sharesWhereInputSchema).optional(),
  some: z.lazy(() => directus_sharesWhereInputSchema).optional(),
  none: z.lazy(() => directus_sharesWhereInputSchema).optional(),
}).strict();

export const directus_collectionsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_collectionsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCountOrderByAggregateInput> = z.object({
  collection: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  display_template: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  singleton: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  archive_field: z.lazy(() => SortOrderSchema).optional(),
  archive_app_filter: z.lazy(() => SortOrderSchema).optional(),
  archive_value: z.lazy(() => SortOrderSchema).optional(),
  unarchive_value: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  item_duplication_fields: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  collapse: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_collectionsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsAvgOrderByAggregateInput> = z.object({
  sort: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_collectionsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsMaxOrderByAggregateInput> = z.object({
  collection: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  display_template: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  singleton: z.lazy(() => SortOrderSchema).optional(),
  archive_field: z.lazy(() => SortOrderSchema).optional(),
  archive_app_filter: z.lazy(() => SortOrderSchema).optional(),
  archive_value: z.lazy(() => SortOrderSchema).optional(),
  unarchive_value: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  collapse: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_collectionsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsMinOrderByAggregateInput> = z.object({
  collection: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  display_template: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  singleton: z.lazy(() => SortOrderSchema).optional(),
  archive_field: z.lazy(() => SortOrderSchema).optional(),
  archive_app_filter: z.lazy(() => SortOrderSchema).optional(),
  archive_value: z.lazy(() => SortOrderSchema).optional(),
  unarchive_value: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  collapse: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_collectionsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsSumOrderByAggregateInput> = z.object({
  sort: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const JsonNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.JsonNullableWithAggregatesFilter> = z.object({
  equals: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
  path: z.string().array().optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_contains: InputJsonValue.optional().nullable(),
  array_starts_with: InputJsonValue.optional().nullable(),
  array_ends_with: InputJsonValue.optional().nullable(),
  lt: InputJsonValue.optional(),
  lte: InputJsonValue.optional(),
  gt: InputJsonValue.optional(),
  gte: InputJsonValue.optional(),
  not: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedJsonNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedJsonNullableFilterSchema).optional(),
}).strict();

export const IntNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.IntNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedIntNullableFilterSchema).optional(),
}).strict();

export const UuidFilterSchema: z.ZodType<PrismaClient.Prisma.UuidFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidFilterSchema)]).optional(),
}).strict();

export const DateTimeNullableFilterSchema: z.ZodType<PrismaClient.Prisma.DateTimeNullableFilter> = z.object({
  equals: z.date().optional().nullable(),
  in: z.date().array().optional().nullable(),
  notIn: z.date().array().optional().nullable(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeNullableFilterSchema)]).optional().nullable(),
}).strict();

export const Directus_usersRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_usersRelationFilter> = z.object({
  is: z.lazy(() => directus_usersWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_usersWhereInputSchema).optional().nullable(),
}).strict();

export const Directus_panelsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_panelsListRelationFilter> = z.object({
  every: z.lazy(() => directus_panelsWhereInputSchema).optional(),
  some: z.lazy(() => directus_panelsWhereInputSchema).optional(),
  none: z.lazy(() => directus_panelsWhereInputSchema).optional(),
}).strict();

export const directus_panelsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_dashboardsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_dashboardsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_dashboardsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const UuidWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.UuidWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional(),
}).strict();

export const DateTimeNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.DateTimeNullableWithAggregatesFilter> = z.object({
  equals: z.date().optional().nullable(),
  in: z.date().array().optional().nullable(),
  notIn: z.date().array().optional().nullable(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeNullableFilterSchema).optional(),
}).strict();

export const BoolNullableFilterSchema: z.ZodType<PrismaClient.Prisma.BoolNullableFilter> = z.object({
  equals: z.boolean().optional().nullable(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolNullableFilterSchema)]).optional().nullable(),
}).strict();

export const directus_fieldsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  field: z.lazy(() => SortOrderSchema).optional(),
  special: z.lazy(() => SortOrderSchema).optional(),
  interface: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  display: z.lazy(() => SortOrderSchema).optional(),
  display_options: z.lazy(() => SortOrderSchema).optional(),
  readonly: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  translations: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  conditions: z.lazy(() => SortOrderSchema).optional(),
  required: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  validation_message: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_fieldsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_fieldsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  field: z.lazy(() => SortOrderSchema).optional(),
  special: z.lazy(() => SortOrderSchema).optional(),
  interface: z.lazy(() => SortOrderSchema).optional(),
  display: z.lazy(() => SortOrderSchema).optional(),
  readonly: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  required: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  validation_message: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_fieldsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  field: z.lazy(() => SortOrderSchema).optional(),
  special: z.lazy(() => SortOrderSchema).optional(),
  interface: z.lazy(() => SortOrderSchema).optional(),
  display: z.lazy(() => SortOrderSchema).optional(),
  readonly: z.lazy(() => SortOrderSchema).optional(),
  hidden: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  required: z.lazy(() => SortOrderSchema).optional(),
  group: z.lazy(() => SortOrderSchema).optional(),
  validation_message: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_fieldsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  sort: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const BoolNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.BoolNullableWithAggregatesFilter> = z.object({
  equals: z.boolean().optional().nullable(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolNullableFilterSchema).optional(),
}).strict();

export const BigIntNullableFilterSchema: z.ZodType<PrismaClient.Prisma.BigIntNullableFilter> = z.object({
  equals: z.bigint().optional().nullable(),
  in: z.bigint().array().optional().nullable(),
  notIn: z.bigint().array().optional().nullable(),
  lt: z.bigint().optional(),
  lte: z.bigint().optional(),
  gt: z.bigint().optional(),
  gte: z.bigint().optional(),
  not: z.union([z.bigint(), z.lazy(() => NestedBigIntNullableFilterSchema)]).optional().nullable(),
}).strict();

export const Directus_foldersRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_foldersRelationFilter> = z.object({
  is: z.lazy(() => directus_foldersWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_foldersWhereInputSchema).optional().nullable(),
}).strict();

export const Directus_settingsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_settingsListRelationFilter> = z.object({
  every: z.lazy(() => directus_settingsWhereInputSchema).optional(),
  some: z.lazy(() => directus_settingsWhereInputSchema).optional(),
  none: z.lazy(() => directus_settingsWhereInputSchema).optional(),
}).strict();

export const directus_settingsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_filesCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  storage: z.lazy(() => SortOrderSchema).optional(),
  filename_disk: z.lazy(() => SortOrderSchema).optional(),
  filename_download: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  folder: z.lazy(() => SortOrderSchema).optional(),
  uploaded_by: z.lazy(() => SortOrderSchema).optional(),
  uploaded_on: z.lazy(() => SortOrderSchema).optional(),
  modified_by: z.lazy(() => SortOrderSchema).optional(),
  modified_on: z.lazy(() => SortOrderSchema).optional(),
  charset: z.lazy(() => SortOrderSchema).optional(),
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
  embed: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  metadata: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_filesAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesAvgOrderByAggregateInput> = z.object({
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_filesMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  storage: z.lazy(() => SortOrderSchema).optional(),
  filename_disk: z.lazy(() => SortOrderSchema).optional(),
  filename_download: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  folder: z.lazy(() => SortOrderSchema).optional(),
  uploaded_by: z.lazy(() => SortOrderSchema).optional(),
  uploaded_on: z.lazy(() => SortOrderSchema).optional(),
  modified_by: z.lazy(() => SortOrderSchema).optional(),
  modified_on: z.lazy(() => SortOrderSchema).optional(),
  charset: z.lazy(() => SortOrderSchema).optional(),
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
  embed: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_filesMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  storage: z.lazy(() => SortOrderSchema).optional(),
  filename_disk: z.lazy(() => SortOrderSchema).optional(),
  filename_download: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  folder: z.lazy(() => SortOrderSchema).optional(),
  uploaded_by: z.lazy(() => SortOrderSchema).optional(),
  uploaded_on: z.lazy(() => SortOrderSchema).optional(),
  modified_by: z.lazy(() => SortOrderSchema).optional(),
  modified_on: z.lazy(() => SortOrderSchema).optional(),
  charset: z.lazy(() => SortOrderSchema).optional(),
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
  embed: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_filesSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesSumOrderByAggregateInput> = z.object({
  filesize: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  duration: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const BigIntNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.BigIntNullableWithAggregatesFilter> = z.object({
  equals: z.bigint().optional().nullable(),
  in: z.bigint().array().optional().nullable(),
  notIn: z.bigint().array().optional().nullable(),
  lt: z.bigint().optional(),
  lte: z.bigint().optional(),
  gt: z.bigint().optional(),
  gte: z.bigint().optional(),
  not: z.union([z.bigint(), z.lazy(() => NestedBigIntNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
}).strict();

export const Directus_operationsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_operationsListRelationFilter> = z.object({
  every: z.lazy(() => directus_operationsWhereInputSchema).optional(),
  some: z.lazy(() => directus_operationsWhereInputSchema).optional(),
  none: z.lazy(() => directus_operationsWhereInputSchema).optional(),
}).strict();

export const directus_operationsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_flowsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  trigger: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  operation: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_flowsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  trigger: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  operation: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_flowsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  trigger: z.lazy(() => SortOrderSchema).optional(),
  accountability: z.lazy(() => SortOrderSchema).optional(),
  operation: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_filesListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_filesListRelationFilter> = z.object({
  every: z.lazy(() => directus_filesWhereInputSchema).optional(),
  some: z.lazy(() => directus_filesWhereInputSchema).optional(),
  none: z.lazy(() => directus_filesWhereInputSchema).optional(),
}).strict();

export const Directus_foldersListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_foldersListRelationFilter> = z.object({
  every: z.lazy(() => directus_foldersWhereInputSchema).optional(),
  some: z.lazy(() => directus_foldersWhereInputSchema).optional(),
  none: z.lazy(() => directus_foldersWhereInputSchema).optional(),
}).strict();

export const directus_filesOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_foldersOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_foldersCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_foldersMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_foldersMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_migrationsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsCountOrderByAggregateInput> = z.object({
  version: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_migrationsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsMaxOrderByAggregateInput> = z.object({
  version: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_migrationsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsMinOrderByAggregateInput> = z.object({
  version: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  subject: z.lazy(() => SortOrderSchema).optional(),
  message: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  subject: z.lazy(() => SortOrderSchema).optional(),
  message: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  subject: z.lazy(() => SortOrderSchema).optional(),
  message: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_flowsRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_flowsRelationFilter> = z.object({
  is: z.lazy(() => directus_flowsWhereInputSchema).optional(),
  isNot: z.lazy(() => directus_flowsWhereInputSchema).optional(),
}).strict();

export const Directus_operationsRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_operationsRelationFilter> = z.object({
  is: z.lazy(() => directus_operationsWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_operationsWhereInputSchema).optional().nullable(),
}).strict();

export const directus_operationsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  key: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  resolve: z.lazy(() => SortOrderSchema).optional(),
  reject: z.lazy(() => SortOrderSchema).optional(),
  flow: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_operationsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsAvgOrderByAggregateInput> = z.object({
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_operationsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  key: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  resolve: z.lazy(() => SortOrderSchema).optional(),
  reject: z.lazy(() => SortOrderSchema).optional(),
  flow: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_operationsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  key: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  resolve: z.lazy(() => SortOrderSchema).optional(),
  reject: z.lazy(() => SortOrderSchema).optional(),
  flow: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_operationsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsSumOrderByAggregateInput> = z.object({
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_dashboardsRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_dashboardsRelationFilter> = z.object({
  is: z.lazy(() => directus_dashboardsWhereInputSchema).optional(),
  isNot: z.lazy(() => directus_dashboardsWhereInputSchema).optional(),
}).strict();

export const directus_panelsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  dashboard: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  show_header: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  options: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_panelsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsAvgOrderByAggregateInput> = z.object({
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_panelsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  dashboard: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  show_header: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_panelsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  dashboard: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
  show_header: z.lazy(() => SortOrderSchema).optional(),
  note: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_panelsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsSumOrderByAggregateInput> = z.object({
  position_x: z.lazy(() => SortOrderSchema).optional(),
  position_y: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_rolesRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_rolesRelationFilter> = z.object({
  is: z.lazy(() => directus_rolesWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_rolesWhereInputSchema).optional().nullable(),
}).strict();

export const directus_permissionsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  permissions: z.lazy(() => SortOrderSchema).optional(),
  validation: z.lazy(() => SortOrderSchema).optional(),
  presets: z.lazy(() => SortOrderSchema).optional(),
  fields: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_permissionsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_permissionsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  fields: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_permissionsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  action: z.lazy(() => SortOrderSchema).optional(),
  fields: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_permissionsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  bookmark: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  search: z.lazy(() => SortOrderSchema).optional(),
  layout: z.lazy(() => SortOrderSchema).optional(),
  layout_query: z.lazy(() => SortOrderSchema).optional(),
  layout_options: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
  filter: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  bookmark: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  search: z.lazy(() => SortOrderSchema).optional(),
  layout: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  bookmark: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  search: z.lazy(() => SortOrderSchema).optional(),
  layout: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  color: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  refresh_interval: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  many_collection: z.lazy(() => SortOrderSchema).optional(),
  many_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection: z.lazy(() => SortOrderSchema).optional(),
  one_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection_field: z.lazy(() => SortOrderSchema).optional(),
  one_allowed_collections: z.lazy(() => SortOrderSchema).optional(),
  junction_field: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  one_deselect_action: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  many_collection: z.lazy(() => SortOrderSchema).optional(),
  many_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection: z.lazy(() => SortOrderSchema).optional(),
  one_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection_field: z.lazy(() => SortOrderSchema).optional(),
  one_allowed_collections: z.lazy(() => SortOrderSchema).optional(),
  junction_field: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  one_deselect_action: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  many_collection: z.lazy(() => SortOrderSchema).optional(),
  many_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection: z.lazy(() => SortOrderSchema).optional(),
  one_field: z.lazy(() => SortOrderSchema).optional(),
  one_collection_field: z.lazy(() => SortOrderSchema).optional(),
  one_allowed_collections: z.lazy(() => SortOrderSchema).optional(),
  junction_field: z.lazy(() => SortOrderSchema).optional(),
  sort_field: z.lazy(() => SortOrderSchema).optional(),
  one_deselect_action: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_relationsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_relationsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_activityRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_activityRelationFilter> = z.object({
  is: z.lazy(() => directus_activityWhereInputSchema).optional(),
  isNot: z.lazy(() => directus_activityWhereInputSchema).optional(),
}).strict();

export const Directus_revisionsRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_revisionsRelationFilter> = z.object({
  is: z.lazy(() => directus_revisionsWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_revisionsWhereInputSchema).optional().nullable(),
}).strict();

export const directus_revisionsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  delta: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_revisionsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_revisionsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_revisionsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_revisionsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  activity: z.lazy(() => SortOrderSchema).optional(),
  parent: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_permissionsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_permissionsListRelationFilter> = z.object({
  every: z.lazy(() => directus_permissionsWhereInputSchema).optional(),
  some: z.lazy(() => directus_permissionsWhereInputSchema).optional(),
  none: z.lazy(() => directus_permissionsWhereInputSchema).optional(),
}).strict();

export const Directus_presetsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_presetsListRelationFilter> = z.object({
  every: z.lazy(() => directus_presetsWhereInputSchema).optional(),
  some: z.lazy(() => directus_presetsWhereInputSchema).optional(),
  none: z.lazy(() => directus_presetsWhereInputSchema).optional(),
}).strict();

export const Directus_usersListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_usersListRelationFilter> = z.object({
  every: z.lazy(() => directus_usersWhereInputSchema).optional(),
  some: z.lazy(() => directus_usersWhereInputSchema).optional(),
  none: z.lazy(() => directus_usersWhereInputSchema).optional(),
}).strict();

export const directus_permissionsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_presetsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_usersOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_rolesCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  ip_access: z.lazy(() => SortOrderSchema).optional(),
  enforce_tfa: z.lazy(() => SortOrderSchema).optional(),
  admin_access: z.lazy(() => SortOrderSchema).optional(),
  app_access: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_rolesMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  ip_access: z.lazy(() => SortOrderSchema).optional(),
  enforce_tfa: z.lazy(() => SortOrderSchema).optional(),
  admin_access: z.lazy(() => SortOrderSchema).optional(),
  app_access: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_rolesMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  icon: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  ip_access: z.lazy(() => SortOrderSchema).optional(),
  enforce_tfa: z.lazy(() => SortOrderSchema).optional(),
  admin_access: z.lazy(() => SortOrderSchema).optional(),
  app_access: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_sharesRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_sharesRelationFilter> = z.object({
  is: z.lazy(() => directus_sharesWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_sharesWhereInputSchema).optional().nullable(),
}).strict();

export const directus_sessionsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCountOrderByAggregateInput> = z.object({
  token: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  expires: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  share: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sessionsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsMaxOrderByAggregateInput> = z.object({
  token: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  expires: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  share: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sessionsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsMinOrderByAggregateInput> = z.object({
  token: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => SortOrderSchema).optional(),
  expires: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  user_agent: z.lazy(() => SortOrderSchema).optional(),
  share: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_filesRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_filesRelationFilter> = z.object({
  is: z.lazy(() => directus_filesWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => directus_filesWhereInputSchema).optional().nullable(),
}).strict();

export const directus_settingsCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  project_name: z.lazy(() => SortOrderSchema).optional(),
  project_url: z.lazy(() => SortOrderSchema).optional(),
  project_color: z.lazy(() => SortOrderSchema).optional(),
  project_logo: z.lazy(() => SortOrderSchema).optional(),
  public_foreground: z.lazy(() => SortOrderSchema).optional(),
  public_background: z.lazy(() => SortOrderSchema).optional(),
  public_note: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
  auth_password_policy: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_transform: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_presets: z.lazy(() => SortOrderSchema).optional(),
  custom_css: z.lazy(() => SortOrderSchema).optional(),
  storage_default_folder: z.lazy(() => SortOrderSchema).optional(),
  basemaps: z.lazy(() => SortOrderSchema).optional(),
  mapbox_key: z.lazy(() => SortOrderSchema).optional(),
  module_bar: z.lazy(() => SortOrderSchema).optional(),
  project_descriptor: z.lazy(() => SortOrderSchema).optional(),
  translation_strings: z.lazy(() => SortOrderSchema).optional(),
  default_language: z.lazy(() => SortOrderSchema).optional(),
  custom_aspect_ratios: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_settingsAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_settingsMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  project_name: z.lazy(() => SortOrderSchema).optional(),
  project_url: z.lazy(() => SortOrderSchema).optional(),
  project_color: z.lazy(() => SortOrderSchema).optional(),
  project_logo: z.lazy(() => SortOrderSchema).optional(),
  public_foreground: z.lazy(() => SortOrderSchema).optional(),
  public_background: z.lazy(() => SortOrderSchema).optional(),
  public_note: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
  auth_password_policy: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_transform: z.lazy(() => SortOrderSchema).optional(),
  custom_css: z.lazy(() => SortOrderSchema).optional(),
  storage_default_folder: z.lazy(() => SortOrderSchema).optional(),
  mapbox_key: z.lazy(() => SortOrderSchema).optional(),
  project_descriptor: z.lazy(() => SortOrderSchema).optional(),
  default_language: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_settingsMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  project_name: z.lazy(() => SortOrderSchema).optional(),
  project_url: z.lazy(() => SortOrderSchema).optional(),
  project_color: z.lazy(() => SortOrderSchema).optional(),
  project_logo: z.lazy(() => SortOrderSchema).optional(),
  public_foreground: z.lazy(() => SortOrderSchema).optional(),
  public_background: z.lazy(() => SortOrderSchema).optional(),
  public_note: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
  auth_password_policy: z.lazy(() => SortOrderSchema).optional(),
  storage_asset_transform: z.lazy(() => SortOrderSchema).optional(),
  custom_css: z.lazy(() => SortOrderSchema).optional(),
  storage_default_folder: z.lazy(() => SortOrderSchema).optional(),
  mapbox_key: z.lazy(() => SortOrderSchema).optional(),
  project_descriptor: z.lazy(() => SortOrderSchema).optional(),
  default_language: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_settingsSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  auth_login_attempts: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_sessionsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_sessionsListRelationFilter> = z.object({
  every: z.lazy(() => directus_sessionsWhereInputSchema).optional(),
  some: z.lazy(() => directus_sessionsWhereInputSchema).optional(),
  none: z.lazy(() => directus_sessionsWhereInputSchema).optional(),
}).strict();

export const directus_sessionsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  date_start: z.lazy(() => SortOrderSchema).optional(),
  date_end: z.lazy(() => SortOrderSchema).optional(),
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesAvgOrderByAggregateInput> = z.object({
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  date_start: z.lazy(() => SortOrderSchema).optional(),
  date_end: z.lazy(() => SortOrderSchema).optional(),
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  collection: z.lazy(() => SortOrderSchema).optional(),
  item: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  user_created: z.lazy(() => SortOrderSchema).optional(),
  date_created: z.lazy(() => SortOrderSchema).optional(),
  date_start: z.lazy(() => SortOrderSchema).optional(),
  date_end: z.lazy(() => SortOrderSchema).optional(),
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_sharesSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesSumOrderByAggregateInput> = z.object({
  times_used: z.lazy(() => SortOrderSchema).optional(),
  max_uses: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const Directus_dashboardsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_dashboardsListRelationFilter> = z.object({
  every: z.lazy(() => directus_dashboardsWhereInputSchema).optional(),
  some: z.lazy(() => directus_dashboardsWhereInputSchema).optional(),
  none: z.lazy(() => directus_dashboardsWhereInputSchema).optional(),
}).strict();

export const Directus_flowsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_flowsListRelationFilter> = z.object({
  every: z.lazy(() => directus_flowsWhereInputSchema).optional(),
  some: z.lazy(() => directus_flowsWhereInputSchema).optional(),
  none: z.lazy(() => directus_flowsWhereInputSchema).optional(),
}).strict();

export const Directus_notificationsListRelationFilterSchema: z.ZodType<PrismaClient.Prisma.Directus_notificationsListRelationFilter> = z.object({
  every: z.lazy(() => directus_notificationsWhereInputSchema).optional(),
  some: z.lazy(() => directus_notificationsWhereInputSchema).optional(),
  none: z.lazy(() => directus_notificationsWhereInputSchema).optional(),
}).strict();

export const directus_dashboardsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_flowsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_notificationsOrderByRelationAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_usersCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  first_name: z.lazy(() => SortOrderSchema).optional(),
  last_name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  avatar: z.lazy(() => SortOrderSchema).optional(),
  language: z.lazy(() => SortOrderSchema).optional(),
  theme: z.lazy(() => SortOrderSchema).optional(),
  tfa_secret: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  token: z.lazy(() => SortOrderSchema).optional(),
  last_access: z.lazy(() => SortOrderSchema).optional(),
  last_page: z.lazy(() => SortOrderSchema).optional(),
  provider: z.lazy(() => SortOrderSchema).optional(),
  external_identifier: z.lazy(() => SortOrderSchema).optional(),
  auth_data: z.lazy(() => SortOrderSchema).optional(),
  email_notifications: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_usersMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  first_name: z.lazy(() => SortOrderSchema).optional(),
  last_name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  avatar: z.lazy(() => SortOrderSchema).optional(),
  language: z.lazy(() => SortOrderSchema).optional(),
  theme: z.lazy(() => SortOrderSchema).optional(),
  tfa_secret: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  token: z.lazy(() => SortOrderSchema).optional(),
  last_access: z.lazy(() => SortOrderSchema).optional(),
  last_page: z.lazy(() => SortOrderSchema).optional(),
  provider: z.lazy(() => SortOrderSchema).optional(),
  external_identifier: z.lazy(() => SortOrderSchema).optional(),
  email_notifications: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_usersMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  first_name: z.lazy(() => SortOrderSchema).optional(),
  last_name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  avatar: z.lazy(() => SortOrderSchema).optional(),
  language: z.lazy(() => SortOrderSchema).optional(),
  theme: z.lazy(() => SortOrderSchema).optional(),
  tfa_secret: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  token: z.lazy(() => SortOrderSchema).optional(),
  last_access: z.lazy(() => SortOrderSchema).optional(),
  last_page: z.lazy(() => SortOrderSchema).optional(),
  provider: z.lazy(() => SortOrderSchema).optional(),
  external_identifier: z.lazy(() => SortOrderSchema).optional(),
  email_notifications: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksCountOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  actions: z.lazy(() => SortOrderSchema).optional(),
  collections: z.lazy(() => SortOrderSchema).optional(),
  headers: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksAvgOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksAvgOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksMaxOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  actions: z.lazy(() => SortOrderSchema).optional(),
  collections: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksMinOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  data: z.lazy(() => SortOrderSchema).optional(),
  actions: z.lazy(() => SortOrderSchema).optional(),
  collections: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const directus_webhooksSumOrderByAggregateInputSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksSumOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
}).strict();

export const StringFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.StringFieldUpdateOperationsInput> = z.object({
  set: z.string().optional(),
}).strict();

export const NullableStringFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.NullableStringFieldUpdateOperationsInput> = z.object({
  set: z.string().optional().nullable(),
}).strict();

export const EnumRoleFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.EnumRoleFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => RoleSchema).optional(),
}).strict();

export const DateTimeFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.DateTimeFieldUpdateOperationsInput> = z.object({
  set: z.date().optional(),
}).strict();

export const ModuleCreateNestedManyWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateNestedManyWithoutCourseInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleCreateWithoutCourseInputSchema).array(), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema), z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema).array()]).optional(),
  createMany: z.lazy(() => ModuleCreateManyCourseInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const ModuleUncheckedCreateNestedManyWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedCreateNestedManyWithoutCourseInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleCreateWithoutCourseInputSchema).array(), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema), z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema).array()]).optional(),
  createMany: z.lazy(() => ModuleCreateManyCourseInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const ModuleUpdateManyWithoutCourseNestedInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateManyWithoutCourseNestedInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleCreateWithoutCourseInputSchema).array(), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema), z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => ModuleUpsertWithWhereUniqueWithoutCourseInputSchema), z.lazy(() => ModuleUpsertWithWhereUniqueWithoutCourseInputSchema).array()]).optional(),
  createMany: z.lazy(() => ModuleCreateManyCourseInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => ModuleUpdateWithWhereUniqueWithoutCourseInputSchema), z.lazy(() => ModuleUpdateWithWhereUniqueWithoutCourseInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => ModuleUpdateManyWithWhereWithoutCourseInputSchema), z.lazy(() => ModuleUpdateManyWithWhereWithoutCourseInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => ModuleScalarWhereInputSchema), z.lazy(() => ModuleScalarWhereInputSchema).array()]).optional(),
}).strict();

export const IntFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.IntFieldUpdateOperationsInput> = z.object({
  set: z.number().optional(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional(),
}).strict();

export const ModuleUncheckedUpdateManyWithoutCourseNestedInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateManyWithoutCourseNestedInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleCreateWithoutCourseInputSchema).array(), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema), z.lazy(() => ModuleCreateOrConnectWithoutCourseInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => ModuleUpsertWithWhereUniqueWithoutCourseInputSchema), z.lazy(() => ModuleUpsertWithWhereUniqueWithoutCourseInputSchema).array()]).optional(),
  createMany: z.lazy(() => ModuleCreateManyCourseInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => ModuleWhereUniqueInputSchema), z.lazy(() => ModuleWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => ModuleUpdateWithWhereUniqueWithoutCourseInputSchema), z.lazy(() => ModuleUpdateWithWhereUniqueWithoutCourseInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => ModuleUpdateManyWithWhereWithoutCourseInputSchema), z.lazy(() => ModuleUpdateManyWithWhereWithoutCourseInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => ModuleScalarWhereInputSchema), z.lazy(() => ModuleScalarWhereInputSchema).array()]).optional(),
}).strict();

export const LessonCreateNestedManyWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateNestedManyWithoutModuleInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonCreateWithoutModuleInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema), z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyModuleInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const CourseCreateNestedOneWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseCreateNestedOneWithoutModulesInput> = z.object({
  create: z.union([z.lazy(() => CourseCreateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedCreateWithoutModulesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => CourseCreateOrConnectWithoutModulesInputSchema).optional(),
  connect: z.lazy(() => CourseWhereUniqueInputSchema).optional(),
}).strict();

export const LessonUncheckedCreateNestedManyWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedCreateNestedManyWithoutModuleInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonCreateWithoutModuleInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema), z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyModuleInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const LessonUpdateManyWithoutModuleNestedInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyWithoutModuleNestedInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonCreateWithoutModuleInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema), z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => LessonUpsertWithWhereUniqueWithoutModuleInputSchema), z.lazy(() => LessonUpsertWithWhereUniqueWithoutModuleInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyModuleInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => LessonUpdateWithWhereUniqueWithoutModuleInputSchema), z.lazy(() => LessonUpdateWithWhereUniqueWithoutModuleInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => LessonUpdateManyWithWhereWithoutModuleInputSchema), z.lazy(() => LessonUpdateManyWithWhereWithoutModuleInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
}).strict();

export const CourseUpdateOneRequiredWithoutModulesNestedInputSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateOneRequiredWithoutModulesNestedInput> = z.object({
  create: z.union([z.lazy(() => CourseCreateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedCreateWithoutModulesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => CourseCreateOrConnectWithoutModulesInputSchema).optional(),
  upsert: z.lazy(() => CourseUpsertWithoutModulesInputSchema).optional(),
  connect: z.lazy(() => CourseWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => CourseUpdateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedUpdateWithoutModulesInputSchema)]).optional(),
}).strict();

export const LessonUncheckedUpdateManyWithoutModuleNestedInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateManyWithoutModuleNestedInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonCreateWithoutModuleInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema), z.lazy(() => LessonCreateOrConnectWithoutModuleInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => LessonUpsertWithWhereUniqueWithoutModuleInputSchema), z.lazy(() => LessonUpsertWithWhereUniqueWithoutModuleInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyModuleInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => LessonUpdateWithWhereUniqueWithoutModuleInputSchema), z.lazy(() => LessonUpdateWithWhereUniqueWithoutModuleInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => LessonUpdateManyWithWhereWithoutModuleInputSchema), z.lazy(() => LessonUpdateManyWithWhereWithoutModuleInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
}).strict();

export const ModuleCreateNestedOneWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateNestedOneWithoutLessonsInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutLessonsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => ModuleCreateOrConnectWithoutLessonsInputSchema).optional(),
  connect: z.lazy(() => ModuleWhereUniqueInputSchema).optional(),
}).strict();

export const LessonTypeCreateNestedOneWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateNestedOneWithoutLessonsInput> = z.object({
  create: z.union([z.lazy(() => LessonTypeCreateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedCreateWithoutLessonsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => LessonTypeCreateOrConnectWithoutLessonsInputSchema).optional(),
  connect: z.lazy(() => LessonTypeWhereUniqueInputSchema).optional(),
}).strict();

export const ModuleUpdateOneRequiredWithoutLessonsNestedInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateOneRequiredWithoutLessonsNestedInput> = z.object({
  create: z.union([z.lazy(() => ModuleCreateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutLessonsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => ModuleCreateOrConnectWithoutLessonsInputSchema).optional(),
  upsert: z.lazy(() => ModuleUpsertWithoutLessonsInputSchema).optional(),
  connect: z.lazy(() => ModuleWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => ModuleUpdateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedUpdateWithoutLessonsInputSchema)]).optional(),
}).strict();

export const BoolFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.BoolFieldUpdateOperationsInput> = z.object({
  set: z.boolean().optional(),
}).strict();

export const LessonTypeUpdateOneRequiredWithoutLessonsNestedInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateOneRequiredWithoutLessonsNestedInput> = z.object({
  create: z.union([z.lazy(() => LessonTypeCreateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedCreateWithoutLessonsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => LessonTypeCreateOrConnectWithoutLessonsInputSchema).optional(),
  upsert: z.lazy(() => LessonTypeUpsertWithoutLessonsInputSchema).optional(),
  connect: z.lazy(() => LessonTypeWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => LessonTypeUpdateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedUpdateWithoutLessonsInputSchema)]).optional(),
}).strict();

export const LessonCreateNestedManyWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateNestedManyWithoutLessonTypeInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateWithoutLessonTypeInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyLessonTypeInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const LessonUncheckedCreateNestedManyWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedCreateNestedManyWithoutLessonTypeInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateWithoutLessonTypeInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyLessonTypeInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const LessonUpdateManyWithoutLessonTypeNestedInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyWithoutLessonTypeNestedInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateWithoutLessonTypeInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => LessonUpsertWithWhereUniqueWithoutLessonTypeInputSchema), z.lazy(() => LessonUpsertWithWhereUniqueWithoutLessonTypeInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyLessonTypeInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => LessonUpdateWithWhereUniqueWithoutLessonTypeInputSchema), z.lazy(() => LessonUpdateWithWhereUniqueWithoutLessonTypeInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => LessonUpdateManyWithWhereWithoutLessonTypeInputSchema), z.lazy(() => LessonUpdateManyWithWhereWithoutLessonTypeInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
}).strict();

export const LessonUncheckedUpdateManyWithoutLessonTypeNestedInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateManyWithoutLessonTypeNestedInput> = z.object({
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateWithoutLessonTypeInputSchema).array(), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema), z.lazy(() => LessonCreateOrConnectWithoutLessonTypeInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => LessonUpsertWithWhereUniqueWithoutLessonTypeInputSchema), z.lazy(() => LessonUpsertWithWhereUniqueWithoutLessonTypeInputSchema).array()]).optional(),
  createMany: z.lazy(() => LessonCreateManyLessonTypeInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => LessonWhereUniqueInputSchema), z.lazy(() => LessonWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => LessonUpdateWithWhereUniqueWithoutLessonTypeInputSchema), z.lazy(() => LessonUpdateWithWhereUniqueWithoutLessonTypeInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => LessonUpdateManyWithWhereWithoutLessonTypeInputSchema), z.lazy(() => LessonUpdateManyWithWhereWithoutLessonTypeInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsCreateNestedManyWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateNestedManyWithoutDirectus_activityInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_activityInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsUncheckedCreateNestedManyWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateNestedManyWithoutDirectus_activityInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_activityInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsUpdateManyWithoutDirectus_activityNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyWithoutDirectus_activityNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_activityInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateManyWithoutDirectus_activityNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateManyWithoutDirectus_activityNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_activityInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_collectionsCreateNestedOneWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateNestedOneWithoutOther_directus_collectionsInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_collectionsCreateOrConnectWithoutOther_directus_collectionsInputSchema).optional(),
  connect: z.lazy(() => directus_collectionsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_collectionsCreateNestedManyWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateNestedManyWithoutDirectus_collectionsInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_collectionsCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesCreateNestedManyWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateNestedManyWithoutDirectus_collectionsInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_collectionsUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedCreateNestedManyWithoutDirectus_collectionsInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_collectionsCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateNestedManyWithoutDirectus_collectionsInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const NullableIntFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.NullableIntFieldUpdateOperationsInput> = z.object({
  set: z.number().optional().nullable(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional(),
}).strict();

export const directus_collectionsUpdateOneWithoutOther_directus_collectionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateOneWithoutOther_directus_collectionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_collectionsCreateOrConnectWithoutOther_directus_collectionsInputSchema).optional(),
  upsert: z.lazy(() => directus_collectionsUpsertWithoutOther_directus_collectionsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_collectionsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_collectionsUpdateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutOther_directus_collectionsInputSchema)]).optional(),
}).strict();

export const directus_collectionsUpdateManyWithoutDirectus_collectionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateManyWithoutDirectus_collectionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_collectionsCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_collectionsScalarWhereInputSchema), z.lazy(() => directus_collectionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUpdateManyWithoutDirectus_collectionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithoutDirectus_collectionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateManyWithoutDirectus_collectionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_collectionsCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_collectionsWhereUniqueInputSchema), z.lazy(() => directus_collectionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_collectionsScalarWhereInputSchema), z.lazy(() => directus_collectionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateManyWithoutDirectus_collectionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_collectionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_dashboardsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_dashboardsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_dashboardsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_panelsCreateNestedManyWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateNestedManyWithoutDirectus_dashboardsInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_dashboardsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_panelsUncheckedCreateNestedManyWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedCreateNestedManyWithoutDirectus_dashboardsInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_dashboardsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const NullableDateTimeFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.NullableDateTimeFieldUpdateOperationsInput> = z.object({
  set: z.date().optional().nullable(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_dashboardsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_dashboardsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_dashboardsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_dashboardsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_dashboardsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_dashboardsInputSchema)]).optional(),
}).strict();

export const directus_panelsUpdateManyWithoutDirectus_dashboardsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyWithoutDirectus_dashboardsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_dashboardsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_panelsUncheckedUpdateManyWithoutDirectus_dashboardsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateManyWithoutDirectus_dashboardsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_dashboardsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const NullableBoolFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.NullableBoolFieldUpdateOperationsInput> = z.object({
  set: z.boolean().optional().nullable(),
}).strict();

export const directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateNestedOneWithoutDirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_filesInputSchema).optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const NullableBigIntFieldUpdateOperationsInputSchema: z.ZodType<PrismaClient.Prisma.NullableBigIntFieldUpdateOperationsInput> = z.object({
  set: z.bigint().optional().nullable(),
  increment: z.bigint().optional(),
  decrement: z.bigint().optional(),
  multiply: z.bigint().optional(),
  divide: z.bigint().optional(),
}).strict();

export const directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateOneWithoutDirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_filesInputSchema).optional(),
  upsert: z.lazy(() => directus_foldersUpsertWithoutDirectus_filesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_filesInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]).optional(),
}).strict();

export const directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_flowsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_flowsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_flowsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsCreateNestedManyWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedManyWithoutDirectus_flowsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_flowsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_operationsUncheckedCreateNestedManyWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateNestedManyWithoutDirectus_flowsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_flowsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_flowsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_flowsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_flowsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_flowsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_flowsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_flowsInputSchema)]).optional(),
}).strict();

export const directus_operationsUpdateManyWithoutDirectus_flowsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyWithoutDirectus_flowsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_flowsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_operationsUncheckedUpdateManyWithoutDirectus_flowsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateManyWithoutDirectus_flowsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_flowsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_foldersCreateNestedOneWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateNestedOneWithoutOther_directus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutOther_directus_foldersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutOther_directus_foldersInputSchema).optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_foldersCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_foldersCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_foldersCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_foldersUpdateOneWithoutOther_directus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateOneWithoutOther_directus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutOther_directus_foldersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutOther_directus_foldersInputSchema).optional(),
  upsert: z.lazy(() => directus_foldersUpsertWithoutOther_directus_foldersInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutOther_directus_foldersInputSchema)]).optional(),
}).strict();

export const directus_foldersUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_foldersCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_foldersScalarWhereInputSchema), z.lazy(() => directus_foldersScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_foldersCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_foldersWhereUniqueInputSchema), z.lazy(() => directus_foldersWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_foldersScalarWhereInputSchema), z.lazy(() => directus_foldersScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema).array(), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_settingsCreateManyDirectus_foldersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_settingsWhereUniqueInputSchema), z.lazy(() => directus_settingsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersUpdateOneRequiredWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneRequiredWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]).optional(),
}).strict();

export const directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateNestedOneWithoutDirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_flowsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_flowsUpsertWithoutDirectus_operationsInputSchema).optional(),
  connect: z.lazy(() => directus_flowsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_flowsUpdateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedUpdateWithoutDirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  upsert: z.lazy(() => directus_operationsUpsertWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_operationsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]).optional(),
}).strict();

export const directus_dashboardsCreateNestedOneWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateNestedOneWithoutDirectus_panelsInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_panelsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_panelsInputSchema).optional(),
  connect: z.lazy(() => directus_dashboardsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_panelsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_panelsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_panelsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_dashboardsUpdateOneRequiredWithoutDirectus_panelsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateOneRequiredWithoutDirectus_panelsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_panelsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_panelsInputSchema).optional(),
  upsert: z.lazy(() => directus_dashboardsUpsertWithoutDirectus_panelsInputSchema).optional(),
  connect: z.lazy(() => directus_dashboardsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_dashboardsUpdateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedUpdateWithoutDirectus_panelsInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_panelsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_panelsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_panelsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_panelsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_panelsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_panelsInputSchema)]).optional(),
}).strict();

export const directus_rolesCreateNestedOneWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateNestedOneWithoutDirectus_permissionsInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_permissionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_permissionsInputSchema).optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_rolesUpdateOneWithoutDirectus_permissionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateOneWithoutDirectus_permissionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_permissionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_permissionsInputSchema).optional(),
  upsert: z.lazy(() => directus_rolesUpsertWithoutDirectus_permissionsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_permissionsInputSchema)]).optional(),
}).strict();

export const directus_rolesCreateNestedOneWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateNestedOneWithoutDirectus_presetsInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_presetsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_presetsInputSchema).optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_presetsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_presetsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_presetsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_rolesUpdateOneWithoutDirectus_presetsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateOneWithoutDirectus_presetsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_presetsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_presetsInputSchema).optional(),
  upsert: z.lazy(() => directus_rolesUpsertWithoutDirectus_presetsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_presetsInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_presetsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_presetsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_presetsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_presetsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_presetsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_presetsInputSchema)]).optional(),
}).strict();

export const directus_activityCreateNestedOneWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateNestedOneWithoutDirectus_revisionsInput> = z.object({
  create: z.union([z.lazy(() => directus_activityCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedCreateWithoutDirectus_revisionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_activityCreateOrConnectWithoutDirectus_revisionsInputSchema).optional(),
  connect: z.lazy(() => directus_activityWhereUniqueInputSchema).optional(),
}).strict();

export const directus_revisionsCreateNestedOneWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateNestedOneWithoutOther_directus_revisionsInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_revisionsCreateOrConnectWithoutOther_directus_revisionsInputSchema).optional(),
  connect: z.lazy(() => directus_revisionsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_revisionsCreateNestedManyWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateNestedManyWithoutDirectus_revisionsInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_revisionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsUncheckedCreateNestedManyWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateNestedManyWithoutDirectus_revisionsInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_revisionsInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_activityUpdateOneRequiredWithoutDirectus_revisionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateOneRequiredWithoutDirectus_revisionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_activityCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedCreateWithoutDirectus_revisionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_activityCreateOrConnectWithoutDirectus_revisionsInputSchema).optional(),
  upsert: z.lazy(() => directus_activityUpsertWithoutDirectus_revisionsInputSchema).optional(),
  connect: z.lazy(() => directus_activityWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_activityUpdateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedUpdateWithoutDirectus_revisionsInputSchema)]).optional(),
}).strict();

export const directus_revisionsUpdateOneWithoutOther_directus_revisionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateOneWithoutOther_directus_revisionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_revisionsCreateOrConnectWithoutOther_directus_revisionsInputSchema).optional(),
  upsert: z.lazy(() => directus_revisionsUpsertWithoutOther_directus_revisionsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_revisionsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutOther_directus_revisionsInputSchema)]).optional(),
}).strict();

export const directus_revisionsUpdateManyWithoutDirectus_revisionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyWithoutDirectus_revisionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_revisionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema).array(), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_revisionsCreateManyDirectus_revisionsInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_revisionsWhereUniqueInputSchema), z.lazy(() => directus_revisionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_permissionsCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_permissionsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_presetsCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_usersCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_usersCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_permissionsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_usersCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_permissionsUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_permissionsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_permissionsScalarWhereInputSchema), z.lazy(() => directus_permissionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_usersUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_usersCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_usersUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_usersScalarWhereInputSchema), z.lazy(() => directus_usersScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_permissionsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_permissionsWhereUniqueInputSchema), z.lazy(() => directus_permissionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_permissionsScalarWhereInputSchema), z.lazy(() => directus_permissionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema).array(), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_usersCreateManyDirectus_rolesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_usersWhereUniqueInputSchema), z.lazy(() => directus_usersWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_usersUpdateManyWithWhereWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUpdateManyWithWhereWithoutDirectus_rolesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_usersScalarWhereInputSchema), z.lazy(() => directus_usersScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesCreateNestedOneWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateNestedOneWithoutDirectus_sessionsInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_sessionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_sessionsInputSchema).optional(),
  connect: z.lazy(() => directus_sharesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_sessionsInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sessionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_sessionsInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_sharesUpdateOneWithoutDirectus_sessionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateOneWithoutDirectus_sessionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_sessionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_sessionsInputSchema).optional(),
  upsert: z.lazy(() => directus_sharesUpsertWithoutDirectus_sessionsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_sharesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_sessionsInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_sessionsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_sessionsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sessionsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_sessionsInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_sessionsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_sessionsInputSchema)]).optional(),
}).strict();

export const directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_foldersCreateNestedOneWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateNestedOneWithoutDirectus_settingsInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_settingsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_settingsInputSchema).optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  upsert: z.lazy(() => directus_filesUpsertWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]).optional(),
}).strict();

export const directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  upsert: z.lazy(() => directus_filesUpsertWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]).optional(),
}).strict();

export const directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  upsert: z.lazy(() => directus_filesUpsertWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_filesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]).optional(),
}).strict();

export const directus_foldersUpdateOneWithoutDirectus_settingsNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateOneWithoutDirectus_settingsNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_settingsInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_foldersCreateOrConnectWithoutDirectus_settingsInputSchema).optional(),
  upsert: z.lazy(() => directus_foldersUpsertWithoutDirectus_settingsInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_foldersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_settingsInputSchema)]).optional(),
}).strict();

export const directus_sessionsCreateNestedManyWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateNestedManyWithoutDirectus_sharesInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_sharesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_collectionsCreateNestedOneWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateNestedOneWithoutDirectus_sharesInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  connect: z.lazy(() => directus_collectionsWhereUniqueInputSchema).optional(),
}).strict();

export const directus_rolesCreateNestedOneWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateNestedOneWithoutDirectus_sharesInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_usersCreateNestedOneWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateNestedOneWithoutDirectus_sharesInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_sharesInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sessionsUpdateManyWithoutDirectus_sharesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyWithoutDirectus_sharesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_sharesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_collectionsUpdateOneWithoutDirectus_sharesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateOneWithoutDirectus_sharesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_collectionsCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  upsert: z.lazy(() => directus_collectionsUpsertWithoutDirectus_sharesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_collectionsWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_collectionsUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutDirectus_sharesInputSchema)]).optional(),
}).strict();

export const directus_rolesUpdateOneWithoutDirectus_sharesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateOneWithoutDirectus_sharesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  upsert: z.lazy(() => directus_rolesUpsertWithoutDirectus_sharesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_sharesInputSchema)]).optional(),
}).strict();

export const directus_usersUpdateOneWithoutDirectus_sharesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateOneWithoutDirectus_sharesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sharesInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_usersCreateOrConnectWithoutDirectus_sharesInputSchema).optional(),
  upsert: z.lazy(() => directus_usersUpsertWithoutDirectus_sharesInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_usersWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_sharesInputSchema)]).optional(),
}).strict();

export const directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_sharesInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_dashboardsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_flowsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateNestedOneWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_usersInputSchema).optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_dashboardsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_flowsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
}).strict();

export const directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_dashboardsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_dashboardsScalarWhereInputSchema), z.lazy(() => directus_dashboardsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_flowsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_flowsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_flowsScalarWhereInputSchema), z.lazy(() => directus_flowsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateOneWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_usersInputSchema)]).optional(),
  connectOrCreate: z.lazy(() => directus_rolesCreateOrConnectWithoutDirectus_usersInputSchema).optional(),
  upsert: z.lazy(() => directus_rolesUpsertWithoutDirectus_usersInputSchema).optional(),
  disconnect: z.boolean().optional(),
  delete: z.boolean().optional(),
  connect: z.lazy(() => directus_rolesWhereUniqueInputSchema).optional(),
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_usersInputSchema)]).optional(),
}).strict();

export const directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_dashboardsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_dashboardsWhereUniqueInputSchema), z.lazy(() => directus_dashboardsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_dashboardsScalarWhereInputSchema), z.lazy(() => directus_dashboardsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array(), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_filesWhereUniqueInputSchema), z.lazy(() => directus_filesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_flowsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_flowsWhereUniqueInputSchema), z.lazy(() => directus_flowsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_flowsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_flowsScalarWhereInputSchema), z.lazy(() => directus_flowsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array(), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_notificationsWhereUniqueInputSchema), z.lazy(() => directus_notificationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_operationsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_operationsWhereUniqueInputSchema), z.lazy(() => directus_operationsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_panelsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_panelsWhereUniqueInputSchema), z.lazy(() => directus_panelsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_presetsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_presetsWhereUniqueInputSchema), z.lazy(() => directus_presetsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sessionsCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sessionsWhereUniqueInputSchema), z.lazy(() => directus_sessionsWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
}).strict();

export const directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInput> = z.object({
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema).array(), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema).array()]).optional(),
  connectOrCreate: z.union([z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema).array()]).optional(),
  upsert: z.union([z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  createMany: z.lazy(() => directus_sharesCreateManyDirectus_usersInputEnvelopeSchema).optional(),
  set: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  disconnect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  delete: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  connect: z.union([z.lazy(() => directus_sharesWhereUniqueInputSchema), z.lazy(() => directus_sharesWhereUniqueInputSchema).array()]).optional(),
  update: z.union([z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInputSchema).array()]).optional(),
  updateMany: z.union([z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUpdateManyWithWhereWithoutDirectus_usersInputSchema).array()]).optional(),
  deleteMany: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
}).strict();

export const NestedStringFilterSchema: z.ZodType<PrismaClient.Prisma.NestedStringFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringFilterSchema)]).optional(),
}).strict();

export const NestedStringNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedStringNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedEnumRoleFilterSchema: z.ZodType<PrismaClient.Prisma.NestedEnumRoleFilter> = z.object({
  equals: z.lazy(() => RoleSchema).optional(),
  in: z.lazy(() => RoleSchema).array().optional(),
  notIn: z.lazy(() => RoleSchema).array().optional(),
  not: z.union([z.lazy(() => RoleSchema), z.lazy(() => NestedEnumRoleFilterSchema)]).optional(),
}).strict();

export const NestedDateTimeFilterSchema: z.ZodType<PrismaClient.Prisma.NestedDateTimeFilter> = z.object({
  equals: z.date().optional(),
  in: z.date().array().optional(),
  notIn: z.date().array().optional(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeFilterSchema)]).optional(),
}).strict();

export const NestedStringWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedStringWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional(),
}).strict();

export const NestedIntFilterSchema: z.ZodType<PrismaClient.Prisma.NestedIntFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntFilterSchema)]).optional(),
}).strict();

export const NestedStringNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedStringNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedStringNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional(),
}).strict();

export const NestedIntNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedIntNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedEnumRoleWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedEnumRoleWithAggregatesFilter> = z.object({
  equals: z.lazy(() => RoleSchema).optional(),
  in: z.lazy(() => RoleSchema).array().optional(),
  notIn: z.lazy(() => RoleSchema).array().optional(),
  not: z.union([z.lazy(() => RoleSchema), z.lazy(() => NestedEnumRoleWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumRoleFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumRoleFilterSchema).optional(),
}).strict();

export const NestedDateTimeWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedDateTimeWithAggregatesFilter> = z.object({
  equals: z.date().optional(),
  in: z.date().array().optional(),
  notIn: z.date().array().optional(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeFilterSchema).optional(),
}).strict();

export const NestedIntWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedIntWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedIntFilterSchema).optional(),
  _max: z.lazy(() => NestedIntFilterSchema).optional(),
}).strict();

export const NestedFloatFilterSchema: z.ZodType<PrismaClient.Prisma.NestedFloatFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedFloatFilterSchema)]).optional(),
}).strict();

export const NestedBoolFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBoolFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolFilterSchema)]).optional(),
}).strict();

export const NestedBoolWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBoolWithAggregatesFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolFilterSchema).optional(),
}).strict();

export const NestedUuidNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedUuidNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedUuidNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedUuidNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional(),
}).strict();

export const NestedJsonNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedJsonNullableFilter> = z.object({
  equals: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
  path: z.string().array().optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_contains: InputJsonValue.optional().nullable(),
  array_starts_with: InputJsonValue.optional().nullable(),
  array_ends_with: InputJsonValue.optional().nullable(),
  lt: InputJsonValue.optional(),
  lte: InputJsonValue.optional(),
  gt: InputJsonValue.optional(),
  gte: InputJsonValue.optional(),
  not: z.union([InputJsonValue, z.lazy(() => JsonNullValueFilterSchema)]).optional(),
}).strict();

export const NestedIntNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedIntNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedIntNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedIntNullableFilterSchema).optional(),
}).strict();

export const NestedFloatNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedFloatNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([z.number(), z.lazy(() => NestedFloatNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedUuidFilterSchema: z.ZodType<PrismaClient.Prisma.NestedUuidFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidFilterSchema)]).optional(),
}).strict();

export const NestedDateTimeNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedDateTimeNullableFilter> = z.object({
  equals: z.date().optional().nullable(),
  in: z.date().array().optional().nullable(),
  notIn: z.date().array().optional().nullable(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedUuidWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedUuidWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  not: z.union([z.string(), z.lazy(() => NestedUuidWithAggregatesFilterSchema)]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional(),
}).strict();

export const NestedDateTimeNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedDateTimeNullableWithAggregatesFilter> = z.object({
  equals: z.date().optional().nullable(),
  in: z.date().array().optional().nullable(),
  notIn: z.date().array().optional().nullable(),
  lt: z.date().optional(),
  lte: z.date().optional(),
  gt: z.date().optional(),
  gte: z.date().optional(),
  not: z.union([z.date(), z.lazy(() => NestedDateTimeNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeNullableFilterSchema).optional(),
}).strict();

export const NestedBoolNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBoolNullableFilter> = z.object({
  equals: z.boolean().optional().nullable(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedBoolNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBoolNullableWithAggregatesFilter> = z.object({
  equals: z.boolean().optional().nullable(),
  not: z.union([z.boolean(), z.lazy(() => NestedBoolNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolNullableFilterSchema).optional(),
}).strict();

export const NestedBigIntNullableFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBigIntNullableFilter> = z.object({
  equals: z.bigint().optional().nullable(),
  in: z.bigint().array().optional().nullable(),
  notIn: z.bigint().array().optional().nullable(),
  lt: z.bigint().optional(),
  lte: z.bigint().optional(),
  gt: z.bigint().optional(),
  gte: z.bigint().optional(),
  not: z.union([z.bigint(), z.lazy(() => NestedBigIntNullableFilterSchema)]).optional().nullable(),
}).strict();

export const NestedBigIntNullableWithAggregatesFilterSchema: z.ZodType<PrismaClient.Prisma.NestedBigIntNullableWithAggregatesFilter> = z.object({
  equals: z.bigint().optional().nullable(),
  in: z.bigint().array().optional().nullable(),
  notIn: z.bigint().array().optional().nullable(),
  lt: z.bigint().optional(),
  lte: z.bigint().optional(),
  gt: z.bigint().optional(),
  gte: z.bigint().optional(),
  not: z.union([z.bigint(), z.lazy(() => NestedBigIntNullableWithAggregatesFilterSchema)]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedBigIntNullableFilterSchema).optional(),
}).strict();

export const ModuleCreateWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateWithoutCourseInput> = z.object({
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  lessons: z.lazy(() => LessonCreateNestedManyWithoutModuleInputSchema).optional(),
  sortOrder: z.number(),
}).strict();

export const ModuleUncheckedCreateWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedCreateWithoutCourseInput> = z.object({
  id: z.number().optional(),
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  lessons: z.lazy(() => LessonUncheckedCreateNestedManyWithoutModuleInputSchema).optional(),
  sortOrder: z.number(),
}).strict();

export const ModuleCreateOrConnectWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateOrConnectWithoutCourseInput> = z.object({
  where: z.lazy(() => ModuleWhereUniqueInputSchema),
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema)]),
}).strict();

export const ModuleCreateManyCourseInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateManyCourseInputEnvelope> = z.object({
  data: z.lazy(() => ModuleCreateManyCourseInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const ModuleUpsertWithWhereUniqueWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpsertWithWhereUniqueWithoutCourseInput> = z.object({
  where: z.lazy(() => ModuleWhereUniqueInputSchema),
  update: z.union([z.lazy(() => ModuleUpdateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedUpdateWithoutCourseInputSchema)]),
  create: z.union([z.lazy(() => ModuleCreateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutCourseInputSchema)]),
}).strict();

export const ModuleUpdateWithWhereUniqueWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateWithWhereUniqueWithoutCourseInput> = z.object({
  where: z.lazy(() => ModuleWhereUniqueInputSchema),
  data: z.union([z.lazy(() => ModuleUpdateWithoutCourseInputSchema), z.lazy(() => ModuleUncheckedUpdateWithoutCourseInputSchema)]),
}).strict();

export const ModuleUpdateManyWithWhereWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateManyWithWhereWithoutCourseInput> = z.object({
  where: z.lazy(() => ModuleScalarWhereInputSchema),
  data: z.union([z.lazy(() => ModuleUpdateManyMutationInputSchema), z.lazy(() => ModuleUncheckedUpdateManyWithoutModulesInputSchema)]),
}).strict();

export const ModuleScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.ModuleScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => ModuleScalarWhereInputSchema), z.lazy(() => ModuleScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => ModuleScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => ModuleScalarWhereInputSchema), z.lazy(() => ModuleScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  courseId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  sortOrder: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
}).strict();

export const LessonCreateWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateWithoutModuleInput> = z.object({
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number(),
  lessonType: z.lazy(() => LessonTypeCreateNestedOneWithoutLessonsInputSchema),
}).strict();

export const LessonUncheckedCreateWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedCreateWithoutModuleInput> = z.object({
  id: z.number().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number(),
  lessonTypeId: z.number(),
}).strict();

export const LessonCreateOrConnectWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateOrConnectWithoutModuleInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema)]),
}).strict();

export const LessonCreateManyModuleInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyModuleInputEnvelope> = z.object({
  data: z.lazy(() => LessonCreateManyModuleInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const CourseCreateWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseCreateWithoutModulesInput> = z.object({
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().optional().nullable(),
  status: z.string().optional(),
  lastRevised: z.date().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const CourseUncheckedCreateWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseUncheckedCreateWithoutModulesInput> = z.object({
  id: z.number().optional(),
  title: z.string(),
  overview: z.string(),
  slug: z.string(),
  stripeProductId: z.string().optional().nullable(),
  status: z.string().optional(),
  lastRevised: z.date().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
}).strict();

export const CourseCreateOrConnectWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseCreateOrConnectWithoutModulesInput> = z.object({
  where: z.lazy(() => CourseWhereUniqueInputSchema),
  create: z.union([z.lazy(() => CourseCreateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedCreateWithoutModulesInputSchema)]),
}).strict();

export const LessonUpsertWithWhereUniqueWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpsertWithWhereUniqueWithoutModuleInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  update: z.union([z.lazy(() => LessonUpdateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedUpdateWithoutModuleInputSchema)]),
  create: z.union([z.lazy(() => LessonCreateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedCreateWithoutModuleInputSchema)]),
}).strict();

export const LessonUpdateWithWhereUniqueWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateWithWhereUniqueWithoutModuleInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  data: z.union([z.lazy(() => LessonUpdateWithoutModuleInputSchema), z.lazy(() => LessonUncheckedUpdateWithoutModuleInputSchema)]),
}).strict();

export const LessonUpdateManyWithWhereWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyWithWhereWithoutModuleInput> = z.object({
  where: z.lazy(() => LessonScalarWhereInputSchema),
  data: z.union([z.lazy(() => LessonUpdateManyMutationInputSchema), z.lazy(() => LessonUncheckedUpdateManyWithoutLessonsInputSchema)]),
}).strict();

export const LessonScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.LessonScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => LessonScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => LessonScalarWhereInputSchema), z.lazy(() => LessonScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  title: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  overview: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  videoUrl: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  slug: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  content: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  moduleId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  contentType: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  createdAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  updatedAt: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  isFree: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  sortOrder: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  lessonTypeId: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
}).strict();

export const CourseUpsertWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseUpsertWithoutModulesInput> = z.object({
  update: z.union([z.lazy(() => CourseUpdateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedUpdateWithoutModulesInputSchema)]),
  create: z.union([z.lazy(() => CourseCreateWithoutModulesInputSchema), z.lazy(() => CourseUncheckedCreateWithoutModulesInputSchema)]),
}).strict();

export const CourseUpdateWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateWithoutModulesInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const CourseUncheckedUpdateWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.CourseUncheckedUpdateWithoutModulesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  stripeProductId: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  lastRevised: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleCreateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateWithoutLessonsInput> = z.object({
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  course: z.lazy(() => CourseCreateNestedOneWithoutModulesInputSchema),
  sortOrder: z.number(),
}).strict();

export const ModuleUncheckedCreateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedCreateWithoutLessonsInput> = z.object({
  id: z.number().optional(),
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  courseId: z.number(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  sortOrder: z.number(),
}).strict();

export const ModuleCreateOrConnectWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateOrConnectWithoutLessonsInput> = z.object({
  where: z.lazy(() => ModuleWhereUniqueInputSchema),
  create: z.union([z.lazy(() => ModuleCreateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutLessonsInputSchema)]),
}).strict();

export const LessonTypeCreateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateWithoutLessonsInput> = z.object({
  name: z.string(),
}).strict();

export const LessonTypeUncheckedCreateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUncheckedCreateWithoutLessonsInput> = z.object({
  id: z.number().optional(),
  name: z.string(),
}).strict();

export const LessonTypeCreateOrConnectWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateOrConnectWithoutLessonsInput> = z.object({
  where: z.lazy(() => LessonTypeWhereUniqueInputSchema),
  create: z.union([z.lazy(() => LessonTypeCreateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedCreateWithoutLessonsInputSchema)]),
}).strict();

export const ModuleUpsertWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpsertWithoutLessonsInput> = z.object({
  update: z.union([z.lazy(() => ModuleUpdateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedUpdateWithoutLessonsInputSchema)]),
  create: z.union([z.lazy(() => ModuleCreateWithoutLessonsInputSchema), z.lazy(() => ModuleUncheckedCreateWithoutLessonsInputSchema)]),
}).strict();

export const ModuleUpdateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateWithoutLessonsInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  course: z.lazy(() => CourseUpdateOneRequiredWithoutModulesNestedInputSchema).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleUncheckedUpdateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateWithoutLessonsInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  courseId: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonTypeUpsertWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpsertWithoutLessonsInput> = z.object({
  update: z.union([z.lazy(() => LessonTypeUpdateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedUpdateWithoutLessonsInputSchema)]),
  create: z.union([z.lazy(() => LessonTypeCreateWithoutLessonsInputSchema), z.lazy(() => LessonTypeUncheckedCreateWithoutLessonsInputSchema)]),
}).strict();

export const LessonTypeUpdateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateWithoutLessonsInput> = z.object({
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonTypeUncheckedUpdateWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUncheckedUpdateWithoutLessonsInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonCreateWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateWithoutLessonTypeInput> = z.object({
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  module: z.lazy(() => ModuleCreateNestedOneWithoutLessonsInputSchema),
  isFree: z.boolean().optional(),
  sortOrder: z.number(),
}).strict();

export const LessonUncheckedCreateWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedCreateWithoutLessonTypeInput> = z.object({
  id: z.number().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  moduleId: z.number(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number(),
}).strict();

export const LessonCreateOrConnectWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateOrConnectWithoutLessonTypeInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema)]),
}).strict();

export const LessonCreateManyLessonTypeInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyLessonTypeInputEnvelope> = z.object({
  data: z.lazy(() => LessonCreateManyLessonTypeInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const LessonUpsertWithWhereUniqueWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpsertWithWhereUniqueWithoutLessonTypeInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  update: z.union([z.lazy(() => LessonUpdateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedUpdateWithoutLessonTypeInputSchema)]),
  create: z.union([z.lazy(() => LessonCreateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedCreateWithoutLessonTypeInputSchema)]),
}).strict();

export const LessonUpdateWithWhereUniqueWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateWithWhereUniqueWithoutLessonTypeInput> = z.object({
  where: z.lazy(() => LessonWhereUniqueInputSchema),
  data: z.union([z.lazy(() => LessonUpdateWithoutLessonTypeInputSchema), z.lazy(() => LessonUncheckedUpdateWithoutLessonTypeInputSchema)]),
}).strict();

export const LessonUpdateManyWithWhereWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyWithWhereWithoutLessonTypeInput> = z.object({
  where: z.lazy(() => LessonScalarWhereInputSchema),
  data: z.union([z.lazy(() => LessonUpdateManyMutationInputSchema), z.lazy(() => LessonUncheckedUpdateManyWithoutLessonsInputSchema)]),
}).strict();

export const directus_revisionsCreateWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateWithoutDirectus_activityInput> = z.object({
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_revisions: z.lazy(() => directus_revisionsCreateNestedOneWithoutOther_directus_revisionsInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateWithoutDirectus_activityInput> = z.object({
  id: z.number().optional(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.number().optional().nullable(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsCreateOrConnectWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateOrConnectWithoutDirectus_activityInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema)]),
}).strict();

export const directus_revisionsCreateManyDirectus_activityInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyDirectus_activityInputEnvelope> = z.object({
  data: z.lazy(() => directus_revisionsCreateManyDirectus_activityInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpsertWithWhereUniqueWithoutDirectus_activityInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutDirectus_activityInputSchema)]),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_activityInputSchema)]),
}).strict();

export const directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateWithWhereUniqueWithoutDirectus_activityInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_revisionsUpdateWithoutDirectus_activityInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutDirectus_activityInputSchema)]),
}).strict();

export const directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyWithWhereWithoutDirectus_activityInput> = z.object({
  where: z.lazy(() => directus_revisionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_revisionsUpdateManyMutationInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_revisionsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_revisionsScalarWhereInputSchema), z.lazy(() => directus_revisionsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  activity: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  item: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  data: z.lazy(() => JsonNullableFilterSchema).optional(),
  delta: z.lazy(() => JsonNullableFilterSchema).optional(),
  parent: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
}).strict();

export const directus_collectionsCreateWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateWithoutOther_directus_collectionsInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  collapse: z.string().optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutOther_directus_collectionsInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  group: z.string().optional().nullable(),
  collapse: z.string().optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsCreateOrConnectWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateOrConnectWithoutOther_directus_collectionsInput> = z.object({
  where: z.lazy(() => directus_collectionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsCreateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateWithoutDirectus_collectionsInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  collapse: z.string().optional(),
  other_directus_collections: z.lazy(() => directus_collectionsCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedCreateWithoutDirectus_collectionsInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  collapse: z.string().optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsCreateOrConnectWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateOrConnectWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_collectionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsCreateManyDirectus_collectionsInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateManyDirectus_collectionsInputEnvelope> = z.object({
  data: z.lazy(() => directus_collectionsCreateManyDirectus_collectionsInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sharesCreateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateWithoutDirectus_collectionsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateWithoutDirectus_collectionsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesCreateOrConnectWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateOrConnectWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_sharesCreateManyDirectus_collectionsInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_collectionsInputEnvelope> = z.object({
  data: z.lazy(() => directus_sharesCreateManyDirectus_collectionsInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_collectionsUpsertWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpsertWithoutOther_directus_collectionsInput> = z.object({
  update: z.union([z.lazy(() => directus_collectionsUpdateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutOther_directus_collectionsInputSchema)]),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutOther_directus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutOther_directus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsUpdateWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateWithoutOther_directus_collectionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutOther_directus_collectionsNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateWithoutOther_directus_collectionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpsertWithWhereUniqueWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_collectionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_collectionsUpdateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutDirectus_collectionsInputSchema)]),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateWithWhereUniqueWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_collectionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_collectionsUpdateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateManyWithWhereWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_collectionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_collectionsUpdateManyMutationInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateManyWithoutOther_directus_collectionsInputSchema)]),
}).strict();

export const directus_collectionsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_collectionsScalarWhereInputSchema), z.lazy(() => directus_collectionsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_collectionsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_collectionsScalarWhereInputSchema), z.lazy(() => directus_collectionsScalarWhereInputSchema).array()]).optional(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  display_template: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  hidden: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  singleton: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  translations: z.lazy(() => JsonNullableFilterSchema).optional(),
  archive_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  archive_app_filter: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  archive_value: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  unarchive_value: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  sort_field: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item_duplication_fields: z.lazy(() => JsonNullableFilterSchema).optional(),
  sort: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  group: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collapse: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
}).strict();

export const directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpsertWithWhereUniqueWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_collectionsInputSchema)]),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithWhereUniqueWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_collectionsInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_collectionsInputSchema)]),
}).strict();

export const directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithWhereWithoutDirectus_collectionsInput> = z.object({
  where: z.lazy(() => directus_sharesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateManyMutationInputSchema), z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_sharesScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sharesScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sharesScalarWhereInputSchema), z.lazy(() => directus_sharesScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  date_start: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  date_end: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  times_used: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  max_uses: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
}).strict();

export const directus_usersCreateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_dashboardsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_dashboardsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_dashboardsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_panelsCreateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateWithoutDirectus_dashboardsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  width: z.number(),
  height: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_panelsInputSchema).optional(),
}).strict();

export const directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedCreateWithoutDirectus_dashboardsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  width: z.number(),
  height: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_panelsCreateOrConnectWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateOrConnectWithoutDirectus_dashboardsInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_panelsCreateManyDirectus_dashboardsInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyDirectus_dashboardsInputEnvelope> = z.object({
  data: z.lazy(() => directus_panelsCreateManyDirectus_dashboardsInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_dashboardsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_dashboardsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_dashboardsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_dashboardsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpsertWithWhereUniqueWithoutDirectus_dashboardsInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_panelsUpdateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedUpdateWithoutDirectus_dashboardsInputSchema)]),
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateWithWhereUniqueWithoutDirectus_dashboardsInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_panelsUpdateWithoutDirectus_dashboardsInputSchema), z.lazy(() => directus_panelsUncheckedUpdateWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyWithWhereWithoutDirectus_dashboardsInput> = z.object({
  where: z.lazy(() => directus_panelsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_panelsUpdateManyMutationInputSchema), z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_panelsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_panelsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_panelsScalarWhereInputSchema), z.lazy(() => directus_panelsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  dashboard: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  show_header: z.union([z.lazy(() => BoolFilterSchema), z.boolean()]).optional(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  width: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  height: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_foldersCreateWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateWithoutDirectus_filesInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutOther_directus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedCreateWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateWithoutDirectus_filesInput> = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().optional().nullable(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersCreateOrConnectWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateOrConnectWithoutDirectus_filesInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_filesInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_settingsInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputEnvelope> = z.object({
  data: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_settingsInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputEnvelope> = z.object({
  data: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_settingsInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateOrConnectWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputEnvelope> = z.object({
  data: z.lazy(() => directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_foldersUpsertWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpsertWithoutDirectus_filesInput> = z.object({
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_filesInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_filesInputSchema)]),
}).strict();

export const directus_foldersUpdateWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateWithoutDirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutOther_directus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateWithoutDirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  parent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateManyMutationInputSchema), z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_settingsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_settingsScalarWhereInputSchema), z.lazy(() => directus_settingsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  project_name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  project_url: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  project_color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  project_logo: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_foreground: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_background: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  public_note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  auth_login_attempts: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  auth_password_policy: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_asset_transform: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_asset_presets: z.lazy(() => JsonNullableFilterSchema).optional(),
  custom_css: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  storage_default_folder: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  basemaps: z.lazy(() => JsonNullableFilterSchema).optional(),
  mapbox_key: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  module_bar: z.lazy(() => JsonNullableFilterSchema).optional(),
  project_descriptor: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  translation_strings: z.lazy(() => JsonNullableFilterSchema).optional(),
  default_language: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  custom_aspect_ratios: z.lazy(() => JsonNullableFilterSchema).optional(),
}).strict();

export const directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateManyMutationInputSchema), z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpsertWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithWhereUniqueWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithWhereWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_settingsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateManyMutationInputSchema), z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_flowsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_flowsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_flowsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_operationsCreateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutDirectus_flowsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutDirectus_flowsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutDirectus_flowsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_operationsCreateManyDirectus_flowsInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyDirectus_flowsInputEnvelope> = z.object({
  data: z.lazy(() => directus_operationsCreateManyDirectus_flowsInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_flowsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_flowsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_flowsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_flowsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithWhereUniqueWithoutDirectus_flowsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_flowsInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithWhereUniqueWithoutDirectus_flowsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_flowsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyWithWhereWithoutDirectus_flowsInput> = z.object({
  where: z.lazy(() => directus_operationsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_operationsUpdateManyMutationInputSchema), z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_operationsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_operationsScalarWhereInputSchema), z.lazy(() => directus_operationsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  key: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  type: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  position_x: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  position_y: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  resolve: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  reject: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  flow: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_filesCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_foldersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_foldersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_filesCreateManyDirectus_foldersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_foldersInputEnvelope> = z.object({
  data: z.lazy(() => directus_filesCreateManyDirectus_foldersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_foldersCreateWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateWithoutOther_directus_foldersInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_files: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutOther_directus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedCreateWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateWithoutOther_directus_foldersInput> = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersCreateOrConnectWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateOrConnectWithoutOther_directus_foldersInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutOther_directus_foldersInputSchema)]),
}).strict();

export const directus_foldersCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateWithoutDirectus_foldersInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_files: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateWithoutDirectus_foldersInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_files: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersCreateOrConnectWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateOrConnectWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_foldersCreateManyDirectus_foldersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateManyDirectus_foldersInputEnvelope> = z.object({
  data: z.lazy(() => directus_foldersCreateManyDirectus_foldersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_settingsCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateWithoutDirectus_foldersInput> = z.object({
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesCreateNestedOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedCreateWithoutDirectus_foldersInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateOrConnectWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateOrConnectWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_settingsCreateManyDirectus_foldersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_foldersInputEnvelope> = z.object({
  data: z.lazy(() => directus_settingsCreateManyDirectus_foldersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_filesUpdateManyWithWhereWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithWhereWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_filesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateManyMutationInputSchema), z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_filesInputSchema)]),
}).strict();

export const directus_filesScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_filesScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_filesScalarWhereInputSchema), z.lazy(() => directus_filesScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  storage: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  filename_disk: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  filename_download: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  title: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  type: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  folder: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  uploaded_by: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  uploaded_on: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  modified_by: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  modified_on: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  charset: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  filesize: z.union([z.lazy(() => BigIntNullableFilterSchema), z.bigint()]).optional().nullable(),
  width: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  height: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  duration: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  embed: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tags: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  metadata: z.lazy(() => JsonNullableFilterSchema).optional(),
}).strict();

export const directus_foldersUpsertWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpsertWithoutOther_directus_foldersInput> = z.object({
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutOther_directus_foldersInputSchema)]),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutOther_directus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutOther_directus_foldersInputSchema)]),
}).strict();

export const directus_foldersUpdateWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateWithoutOther_directus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_files: z.lazy(() => directus_filesUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutOther_directus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateWithoutOther_directus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  parent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpsertWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateManyWithWhereWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_foldersScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_foldersUpdateManyMutationInputSchema), z.lazy(() => directus_foldersUncheckedUpdateManyWithoutOther_directus_foldersInputSchema)]),
}).strict();

export const directus_foldersScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_foldersScalarWhereInputSchema), z.lazy(() => directus_foldersScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_foldersScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_foldersScalarWhereInputSchema), z.lazy(() => directus_foldersScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  parent: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpsertWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
  create: z.union([z.lazy(() => directus_settingsCreateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedCreateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithWhereUniqueWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_settingsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateWithoutDirectus_foldersInputSchema), z.lazy(() => directus_settingsUncheckedUpdateWithoutDirectus_foldersInputSchema)]),
}).strict();

export const directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyWithWhereWithoutDirectus_foldersInput> = z.object({
  where: z.lazy(() => directus_settingsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_settingsUpdateManyMutationInputSchema), z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_settingsInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersUpsertWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_flowsCreateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateWithoutDirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_flowsInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedCreateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedCreateWithoutDirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_flowsCreateOrConnectWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateOrConnectWithoutDirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_flowsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_operationsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_operationsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_operationsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_flowsUpsertWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpsertWithoutDirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_flowsUpdateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedUpdateWithoutDirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_flowsUpdateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateWithoutDirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_flowsNestedInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedUpdateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateWithoutDirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_operationsUpsertWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUpsertWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUpsertWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUpsertWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema)]),
}).strict();

export const directus_operationsUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_operationsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_operationsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_operationsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsCreateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateWithoutDirectus_panelsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  color: z.string().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_dashboardsInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedCreateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedCreateWithoutDirectus_panelsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_dashboardsCreateOrConnectWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateOrConnectWithoutDirectus_panelsInput> = z.object({
  where: z.lazy(() => directus_dashboardsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_panelsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_panelsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_panelsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_dashboardsUpsertWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpsertWithoutDirectus_panelsInput> = z.object({
  update: z.union([z.lazy(() => directus_dashboardsUpdateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedUpdateWithoutDirectus_panelsInputSchema)]),
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_dashboardsUpdateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateWithoutDirectus_panelsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_dashboardsNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedUpdateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateWithoutDirectus_panelsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_usersUpsertWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_panelsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_panelsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_panelsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_panelsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_panelsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_rolesCreateWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateWithoutDirectus_permissionsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedCreateWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedCreateWithoutDirectus_permissionsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesCreateOrConnectWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateOrConnectWithoutDirectus_permissionsInput> = z.object({
  where: z.lazy(() => directus_rolesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_permissionsInputSchema)]),
}).strict();

export const directus_rolesUpsertWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpsertWithoutDirectus_permissionsInput> = z.object({
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_permissionsInputSchema)]),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_permissionsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_permissionsInputSchema)]),
}).strict();

export const directus_rolesUpdateWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateWithoutDirectus_permissionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedUpdateWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateWithoutDirectus_permissionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesCreateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateWithoutDirectus_presetsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedCreateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedCreateWithoutDirectus_presetsInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesCreateOrConnectWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateOrConnectWithoutDirectus_presetsInput> = z.object({
  where: z.lazy(() => directus_rolesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_presetsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_presetsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_presetsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_rolesUpsertWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpsertWithoutDirectus_presetsInput> = z.object({
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_presetsInputSchema)]),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_rolesUpdateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateWithoutDirectus_presetsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedUpdateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateWithoutDirectus_presetsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_presetsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_presetsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_presetsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_presetsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_presetsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_activityCreateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateWithoutDirectus_revisionsInput> = z.object({
  action: z.string(),
  user: z.string().optional().nullable(),
  timestamp: z.date().optional(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_activityUncheckedCreateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUncheckedCreateWithoutDirectus_revisionsInput> = z.object({
  id: z.number().optional(),
  action: z.string(),
  user: z.string().optional().nullable(),
  timestamp: z.date().optional(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  collection: z.string(),
  item: z.string(),
  comment: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_activityCreateOrConnectWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateOrConnectWithoutDirectus_revisionsInput> = z.object({
  where: z.lazy(() => directus_activityWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_activityCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedCreateWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsCreateWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateWithoutOther_directus_revisionsInput> = z.object({
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityCreateNestedOneWithoutDirectus_revisionsInputSchema),
  directus_revisions: z.lazy(() => directus_revisionsCreateNestedOneWithoutOther_directus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInput> = z.object({
  id: z.number().optional(),
  activity: z.number(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.number().optional().nullable(),
}).strict();

export const directus_revisionsCreateOrConnectWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateOrConnectWithoutOther_directus_revisionsInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsCreateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateWithoutDirectus_revisionsInput> = z.object({
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityCreateNestedOneWithoutDirectus_revisionsInputSchema),
  other_directus_revisions: z.lazy(() => directus_revisionsCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedCreateWithoutDirectus_revisionsInput> = z.object({
  id: z.number().optional(),
  activity: z.number(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedCreateNestedManyWithoutDirectus_revisionsInputSchema).optional(),
}).strict();

export const directus_revisionsCreateOrConnectWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateOrConnectWithoutDirectus_revisionsInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsCreateManyDirectus_revisionsInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyDirectus_revisionsInputEnvelope> = z.object({
  data: z.lazy(() => directus_revisionsCreateManyDirectus_revisionsInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_activityUpsertWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpsertWithoutDirectus_revisionsInput> = z.object({
  update: z.union([z.lazy(() => directus_activityUpdateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedUpdateWithoutDirectus_revisionsInputSchema)]),
  create: z.union([z.lazy(() => directus_activityCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_activityUncheckedCreateWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_activityUpdateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateWithoutDirectus_revisionsInput> = z.object({
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_activityUncheckedUpdateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_activityUncheckedUpdateWithoutDirectus_revisionsInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  timestamp: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  comment: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_revisionsUpsertWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpsertWithoutOther_directus_revisionsInput> = z.object({
  update: z.union([z.lazy(() => directus_revisionsUpdateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutOther_directus_revisionsInputSchema)]),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutOther_directus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutOther_directus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsUpdateWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateWithoutOther_directus_revisionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityUpdateOneRequiredWithoutDirectus_revisionsNestedInputSchema).optional(),
  directus_revisions: z.lazy(() => directus_revisionsUpdateOneWithoutOther_directus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateWithoutOther_directus_revisionsInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  activity: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpsertWithWhereUniqueWithoutDirectus_revisionsInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_revisionsUpdateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutDirectus_revisionsInputSchema)]),
  create: z.union([z.lazy(() => directus_revisionsCreateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedCreateWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateWithWhereUniqueWithoutDirectus_revisionsInput> = z.object({
  where: z.lazy(() => directus_revisionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_revisionsUpdateWithoutDirectus_revisionsInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateWithoutDirectus_revisionsInputSchema)]),
}).strict();

export const directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyWithWhereWithoutDirectus_revisionsInput> = z.object({
  where: z.lazy(() => directus_revisionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_revisionsUpdateManyMutationInputSchema), z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutOther_directus_revisionsInputSchema)]),
}).strict();

export const directus_permissionsCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateWithoutDirectus_rolesInput> = z.object({
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
}).strict();

export const directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedCreateWithoutDirectus_rolesInput> = z.object({
  id: z.number().optional(),
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
}).strict();

export const directus_permissionsCreateOrConnectWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateOrConnectWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_permissionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_permissionsCreateManyDirectus_rolesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateManyDirectus_rolesInputEnvelope> = z.object({
  data: z.lazy(() => directus_permissionsCreateManyDirectus_rolesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_presetsCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateWithoutDirectus_rolesInput> = z.object({
  bookmark: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_presetsInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedCreateWithoutDirectus_rolesInput> = z.object({
  id: z.number().optional(),
  bookmark: z.string().optional().nullable(),
  user: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_presetsCreateOrConnectWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateOrConnectWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_presetsCreateManyDirectus_rolesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyDirectus_rolesInputEnvelope> = z.object({
  data: z.lazy(() => directus_presetsCreateManyDirectus_rolesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sharesCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateWithoutDirectus_rolesInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateWithoutDirectus_rolesInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesCreateOrConnectWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateOrConnectWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_sharesCreateManyDirectus_rolesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_rolesInputEnvelope> = z.object({
  data: z.lazy(() => directus_sharesCreateManyDirectus_rolesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_usersCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_rolesInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_rolesInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_usersCreateManyDirectus_rolesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateManyDirectus_rolesInputEnvelope> = z.object({
  data: z.lazy(() => directus_usersCreateManyDirectus_rolesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpsertWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_permissionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_permissionsUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
  create: z.union([z.lazy(() => directus_permissionsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_permissionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_permissionsUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_permissionsUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateManyWithWhereWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_permissionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_permissionsUpdateManyMutationInputSchema), z.lazy(() => directus_permissionsUncheckedUpdateManyWithoutDirectus_permissionsInputSchema)]),
}).strict();

export const directus_permissionsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_permissionsScalarWhereInputSchema), z.lazy(() => directus_permissionsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_permissionsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_permissionsScalarWhereInputSchema), z.lazy(() => directus_permissionsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  action: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  permissions: z.lazy(() => JsonNullableFilterSchema).optional(),
  validation: z.lazy(() => JsonNullableFilterSchema).optional(),
  presets: z.lazy(() => JsonNullableFilterSchema).optional(),
  fields: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpsertWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_presetsUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_presetsUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_presetsUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyWithWhereWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_presetsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_presetsUpdateManyMutationInputSchema), z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_presetsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_presetsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_presetsScalarWhereInputSchema), z.lazy(() => directus_presetsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  bookmark: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  search: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  layout: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  layout_query: z.lazy(() => JsonNullableFilterSchema).optional(),
  layout_options: z.lazy(() => JsonNullableFilterSchema).optional(),
  refresh_interval: z.union([z.lazy(() => IntNullableFilterSchema), z.number()]).optional().nullable(),
  filter: z.lazy(() => JsonNullableFilterSchema).optional(),
  icon: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpsertWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithWhereWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_sharesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateManyMutationInputSchema), z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithWhereUniqueWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_rolesInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_rolesInputSchema)]),
}).strict();

export const directus_usersUpdateManyWithWhereWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateManyWithWhereWithoutDirectus_rolesInput> = z.object({
  where: z.lazy(() => directus_usersScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_usersUpdateManyMutationInputSchema), z.lazy(() => directus_usersUncheckedUpdateManyWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_usersScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_usersScalarWhereInputSchema), z.lazy(() => directus_usersScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_usersScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_usersScalarWhereInputSchema), z.lazy(() => directus_usersScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  first_name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  last_name: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  email: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  password: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  location: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  title: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tags: z.lazy(() => JsonNullableFilterSchema).optional(),
  avatar: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  language: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  theme: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  tfa_secret: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  role: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  token: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  last_access: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  last_page: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  provider: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  external_identifier: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  auth_data: z.lazy(() => JsonNullableFilterSchema).optional(),
  email_notifications: z.union([z.lazy(() => BoolNullableFilterSchema), z.boolean()]).optional().nullable(),
}).strict();

export const directus_sharesCreateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateWithoutDirectus_sessionsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedCreateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateWithoutDirectus_sessionsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
}).strict();

export const directus_sharesCreateOrConnectWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateOrConnectWithoutDirectus_sessionsInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_sessionsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_sessionsInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_sessionsInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_sharesUpsertWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpsertWithoutDirectus_sessionsInput> = z.object({
  update: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_sessionsInputSchema)]),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_sharesUpdateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithoutDirectus_sessionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateWithoutDirectus_sessionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_usersUpsertWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_sessionsInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_sessionsInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sessionsInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_sessionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_sessionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_foldersCreateWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateWithoutDirectus_settingsInput> = z.object({
  id: z.string(),
  name: z.string(),
  directus_files: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutOther_directus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedCreateWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedCreateWithoutDirectus_settingsInput> = z.object({
  id: z.string(),
  name: z.string(),
  parent: z.string().optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedCreateNestedManyWithoutDirectus_foldersInputSchema).optional(),
}).strict();

export const directus_foldersCreateOrConnectWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateOrConnectWithoutDirectus_settingsInput> = z.object({
  where: z.lazy(() => directus_foldersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_settingsInputSchema)]),
}).strict();

export const directus_filesUpsertWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema)]),
}).strict();

export const directus_filesUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUpsertWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_filesUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUpsertWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema)]),
}).strict();

export const directus_filesUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_foldersUpsertWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpsertWithoutDirectus_settingsInput> = z.object({
  update: z.union([z.lazy(() => directus_foldersUpdateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedUpdateWithoutDirectus_settingsInputSchema)]),
  create: z.union([z.lazy(() => directus_foldersCreateWithoutDirectus_settingsInputSchema), z.lazy(() => directus_foldersUncheckedCreateWithoutDirectus_settingsInputSchema)]),
}).strict();

export const directus_foldersUpdateWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateWithoutDirectus_settingsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_files: z.lazy(() => directus_filesUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutOther_directus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateWithoutDirectus_settingsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  parent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_files: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_sessionsCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateWithoutDirectus_sharesInput> = z.object({
  token: z.string(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  directus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_sessionsInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedCreateWithoutDirectus_sharesInput> = z.object({
  token: z.string(),
  user: z.string().optional().nullable(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sessionsCreateOrConnectWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateOrConnectWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_sessionsCreateManyDirectus_sharesInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyDirectus_sharesInputEnvelope> = z.object({
  data: z.lazy(() => directus_sessionsCreateManyDirectus_sharesInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_collectionsCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateWithoutDirectus_sharesInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  collapse: z.string().optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutOther_directus_collectionsInputSchema).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedCreateWithoutDirectus_sharesInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().optional().nullable(),
  group: z.string().optional().nullable(),
  collapse: z.string().optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedCreateNestedManyWithoutDirectus_collectionsInputSchema).optional(),
}).strict();

export const directus_collectionsCreateOrConnectWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateOrConnectWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_collectionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_rolesCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateWithoutDirectus_sharesInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedCreateWithoutDirectus_sharesInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesCreateOrConnectWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateOrConnectWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_rolesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_usersCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateWithoutDirectus_sharesInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersUncheckedCreateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedCreateWithoutDirectus_sharesInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  role: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedCreateNestedManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedCreateNestedManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_usersInputSchema).optional(),
}).strict();

export const directus_usersCreateOrConnectWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateOrConnectWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_usersWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpsertWithWhereUniqueWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateWithoutDirectus_sharesInputSchema)]),
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateWithWhereUniqueWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_sessionsUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyWithWhereWithoutDirectus_sharesInput> = z.object({
  where: z.lazy(() => directus_sessionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_sessionsUpdateManyMutationInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_sessionsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_sessionsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_sessionsScalarWhereInputSchema), z.lazy(() => directus_sessionsScalarWhereInputSchema).array()]).optional(),
  token: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  user: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  expires: z.union([z.lazy(() => DateTimeFilterSchema), z.date()]).optional(),
  ip: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  user_agent: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  share: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  origin: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_collectionsUpsertWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpsertWithoutDirectus_sharesInput> = z.object({
  update: z.union([z.lazy(() => directus_collectionsUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedUpdateWithoutDirectus_sharesInputSchema)]),
  create: z.union([z.lazy(() => directus_collectionsCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_collectionsUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_collectionsUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateWithoutDirectus_sharesInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutOther_directus_collectionsNestedInputSchema).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateWithoutDirectus_sharesInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  group: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_rolesUpsertWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpsertWithoutDirectus_sharesInput> = z.object({
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_sharesInputSchema)]),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_rolesUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateWithoutDirectus_sharesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateWithoutDirectus_sharesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_usersUpsertWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertWithoutDirectus_sharesInput> = z.object({
  update: z.union([z.lazy(() => directus_usersUpdateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedUpdateWithoutDirectus_sharesInputSchema)]),
  create: z.union([z.lazy(() => directus_usersCreateWithoutDirectus_sharesInputSchema), z.lazy(() => directus_usersUncheckedCreateWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_usersUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_sharesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_sharesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  color: z.string().optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsCreateNestedManyWithoutDirectus_dashboardsInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  color: z.string().optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsUncheckedCreateNestedManyWithoutDirectus_dashboardsInputSchema).optional(),
}).strict();

export const directus_dashboardsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_dashboardsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_dashboardsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_dashboardsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersCreateNestedOneWithoutDirectus_filesInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  duration: z.number().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedCreateNestedManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema).optional(),
}).strict();

export const directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateOrConnectWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_flowsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsCreateNestedManyWithoutDirectus_flowsInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedManyWithoutDirectus_flowsInputSchema).optional(),
}).strict();

export const directus_flowsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_flowsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_flowsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_flowsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  directus_users_directus_notifications_senderTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema).optional(),
}).strict();

export const directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.number().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  directus_users_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_usersCreateNestedOneWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema),
}).strict();

export const directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.number().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  recipient: z.string(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateOrConnectWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_operationsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsCreateNestedOneWithoutDirectus_operationsInputSchema),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedCreateNestedOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsInputSchema).optional(),
}).strict();

export const directus_operationsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_operationsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_operationsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_panelsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  width: z.number(),
  height: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsCreateNestedOneWithoutDirectus_panelsInputSchema),
}).strict();

export const directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  dashboard: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number(),
  position_y: z.number(),
  width: z.number(),
  height: z.number(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
}).strict();

export const directus_panelsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_panelsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_panelsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_presetsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateWithoutDirectus_usersInput> = z.object({
  bookmark: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_presetsInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.number().optional(),
  bookmark: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_presetsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_presetsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_presetsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sessionsCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateWithoutDirectus_usersInput> = z.object({
  token: z.string(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedOneWithoutDirectus_sessionsInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedCreateWithoutDirectus_usersInput> = z.object({
  token: z.string(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  share: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sessionsCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sessionsCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_sessionsCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sharesCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesCreateNestedOneWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().optional().nullable(),
  max_uses: z.number().optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedCreateNestedManyWithoutDirectus_sharesInputSchema).optional(),
}).strict();

export const directus_sharesCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sharesCreateManyDirectus_usersInputEnvelopeSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_usersInputEnvelope> = z.object({
  data: z.lazy(() => directus_sharesCreateManyDirectus_usersInputSchema).array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_rolesCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedCreateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedCreateWithoutDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  description: z.string().optional().nullable(),
  ip_access: z.string().optional().nullable(),
  enforce_tfa: z.boolean().optional(),
  admin_access: z.boolean().optional(),
  app_access: z.boolean().optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedCreateNestedManyWithoutDirectus_rolesInputSchema).optional(),
}).strict();

export const directus_rolesCreateOrConnectWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateOrConnectWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_rolesWhereUniqueInputSchema),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_dashboardsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_dashboardsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_dashboardsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_dashboardsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_dashboardsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_dashboardsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_dashboardsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_dashboardsUpdateManyMutationInputSchema), z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_dashboardsInputSchema)]),
}).strict();

export const directus_dashboardsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_dashboardsScalarWhereInputSchema), z.lazy(() => directus_dashboardsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_dashboardsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_dashboardsScalarWhereInputSchema), z.lazy(() => directus_dashboardsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  note: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateManyMutationInputSchema), z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_filesCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedCreateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithWhereUniqueWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema), z.lazy(() => directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyWithWhereWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_filesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_filesUpdateManyMutationInputSchema), z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema)]),
}).strict();

export const directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_flowsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_flowsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_flowsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_flowsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_flowsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_flowsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_flowsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_flowsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_flowsUpdateManyMutationInputSchema), z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_flowsInputSchema)]),
}).strict();

export const directus_flowsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_flowsScalarWhereInputSchema), z.lazy(() => directus_flowsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_flowsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_flowsScalarWhereInputSchema), z.lazy(() => directus_flowsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  icon: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  color: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  description: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  status: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  trigger: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  accountability: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  options: z.lazy(() => JsonNullableFilterSchema).optional(),
  operation: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  date_created: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  user_created: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_notificationsUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_notificationsUpdateManyMutationInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsScalarWhereInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsScalarWhereInput> = z.object({
  AND: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
  OR: z.lazy(() => directus_notificationsScalarWhereInputSchema).array().optional(),
  NOT: z.union([z.lazy(() => directus_notificationsScalarWhereInputSchema), z.lazy(() => directus_notificationsScalarWhereInputSchema).array()]).optional(),
  id: z.union([z.lazy(() => IntFilterSchema), z.number()]).optional(),
  timestamp: z.union([z.lazy(() => DateTimeNullableFilterSchema), z.date()]).optional().nullable(),
  status: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  recipient: z.union([z.lazy(() => UuidFilterSchema), z.string()]).optional(),
  sender: z.union([z.lazy(() => UuidNullableFilterSchema), z.string()]).optional().nullable(),
  subject: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
  message: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  collection: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
  item: z.union([z.lazy(() => StringNullableFilterSchema), z.string()]).optional().nullable(),
}).strict();

export const directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpsertWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_notificationsUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_notificationsCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedCreateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateWithWhereUniqueWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_notificationsUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyWithWhereWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  where: z.lazy(() => directus_notificationsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_notificationsUpdateManyMutationInputSchema), z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema)]),
}).strict();

export const directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_operationsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_operationsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_operationsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_operationsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_operationsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_operationsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_operationsUpdateManyMutationInputSchema), z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_operationsInputSchema)]),
}).strict();

export const directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_panelsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_panelsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_panelsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_panelsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_panelsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_panelsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_panelsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_panelsUpdateManyMutationInputSchema), z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_panelsInputSchema)]),
}).strict();

export const directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_presetsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_presetsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_presetsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_presetsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_presetsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_presetsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_presetsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_presetsUpdateManyMutationInputSchema), z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_presetsInputSchema)]),
}).strict();

export const directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_sessionsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_sessionsCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sessionsWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_sessionsUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sessionsScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_sessionsUpdateManyMutationInputSchema), z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sessionsInputSchema)]),
}).strict();

export const directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpsertWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  update: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_sharesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithWhereUniqueWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sharesWhereUniqueInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_sharesUncheckedUpdateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_sharesUpdateManyWithWhereWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyWithWhereWithoutDirectus_usersInput> = z.object({
  where: z.lazy(() => directus_sharesScalarWhereInputSchema),
  data: z.union([z.lazy(() => directus_sharesUpdateManyMutationInputSchema), z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_sharesInputSchema)]),
}).strict();

export const directus_rolesUpsertWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpsertWithoutDirectus_usersInput> = z.object({
  update: z.union([z.lazy(() => directus_rolesUpdateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedUpdateWithoutDirectus_usersInputSchema)]),
  create: z.union([z.lazy(() => directus_rolesCreateWithoutDirectus_usersInputSchema), z.lazy(() => directus_rolesUncheckedCreateWithoutDirectus_usersInputSchema)]),
}).strict();

export const directus_rolesUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const directus_rolesUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  ip_access: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  enforce_tfa: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  admin_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  app_access: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  directus_permissions: z.lazy(() => directus_permissionsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_rolesNestedInputSchema).optional(),
}).strict();

export const ModuleCreateManyCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateManyCourseInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  sortOrder: z.number(),
}).strict();

export const ModuleUpdateWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateWithoutCourseInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUpdateManyWithoutModuleNestedInputSchema).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleUncheckedUpdateWithoutCourseInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateWithoutCourseInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  lessons: z.lazy(() => LessonUncheckedUpdateManyWithoutModuleNestedInputSchema).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const ModuleUncheckedUpdateManyWithoutModulesInputSchema: z.ZodType<PrismaClient.Prisma.ModuleUncheckedUpdateManyWithoutModulesInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonCreateManyModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyModuleInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number().int(),
  lessonTypeId: z.number(),
}).strict();

export const LessonUpdateWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateWithoutModuleInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonType: z.lazy(() => LessonTypeUpdateOneRequiredWithoutLessonsNestedInputSchema).optional(),
}).strict();

export const LessonUncheckedUpdateWithoutModuleInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateWithoutModuleInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonTypeId: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonUncheckedUpdateManyWithoutLessonsInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateManyWithoutLessonsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  lessonTypeId: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonCreateManyLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyLessonTypeInput> = z.object({
  id: z.number().int().optional(),
  title: z.string(),
  overview: z.string().optional(),
  videoUrl: z.string().optional().nullable(),
  slug: z.string(),
  status: z.string().optional(),
  content: z.string(),
  moduleId: z.number().int(),
  contentType: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  isFree: z.boolean().optional(),
  sortOrder: z.number().int(),
}).strict();

export const LessonUpdateWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateWithoutLessonTypeInput> = z.object({
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  module: z.lazy(() => ModuleUpdateOneRequiredWithoutLessonsNestedInputSchema).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const LessonUncheckedUpdateWithoutLessonTypeInputSchema: z.ZodType<PrismaClient.Prisma.LessonUncheckedUpdateWithoutLessonTypeInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  overview: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  videoUrl: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  slug: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  content: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  moduleId: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  contentType: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  createdAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  updatedAt: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  isFree: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  sortOrder: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_revisionsCreateManyDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyDirectus_activityInput> = z.object({
  id: z.number().int().optional(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.number().int().optional().nullable(),
}).strict();

export const directus_revisionsUpdateWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateWithoutDirectus_activityInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_revisions: z.lazy(() => directus_revisionsUpdateOneWithoutOther_directus_revisionsNestedInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateWithoutDirectus_activityInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateWithoutDirectus_activityInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  parent: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_collectionsCreateManyDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateManyDirectus_collectionsInput> = z.object({
  collection: z.string(),
  icon: z.string().optional().nullable(),
  note: z.string().optional().nullable(),
  display_template: z.string().optional().nullable(),
  hidden: z.boolean().optional(),
  singleton: z.boolean().optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.string().optional().nullable(),
  archive_app_filter: z.boolean().optional(),
  archive_value: z.string().optional().nullable(),
  unarchive_value: z.string().optional().nullable(),
  sort_field: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.number().int().optional().nullable(),
  collapse: z.string().optional(),
}).strict();

export const directus_sharesCreateManyDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_collectionsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
}).strict();

export const directus_collectionsUpdateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateWithoutDirectus_collectionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateWithoutDirectus_collectionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  other_directus_collections: z.lazy(() => directus_collectionsUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_collectionsNestedInputSchema).optional(),
}).strict();

export const directus_collectionsUncheckedUpdateManyWithoutOther_directus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUncheckedUpdateManyWithoutOther_directus_collectionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  display_template: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  hidden: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  singleton: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  translations: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  archive_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  archive_app_filter: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  archive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  unarchive_value: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sort_field: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item_duplication_fields: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  sort: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collapse: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_sharesUpdateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithoutDirectus_collectionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateWithoutDirectus_collectionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateWithoutDirectus_collectionsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateManyWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateManyWithoutDirectus_sharesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsCreateManyDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyDirectus_dashboardsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_panelsUpdateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateWithoutDirectus_dashboardsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_panelsNestedInputSchema).optional(),
}).strict();

export const directus_panelsUncheckedUpdateWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateWithoutDirectus_dashboardsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_panelsUncheckedUpdateManyWithoutDirectus_panelsInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateManyWithoutDirectus_panelsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.number().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  storage_default_folder: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_settingsNestedInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_settingsNestedInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_settingsNestedInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_default_folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_operationsCreateManyDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyDirectus_flowsInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  user_created: z.string().optional().nullable(),
}).strict();

export const directus_operationsUpdateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutDirectus_flowsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutDirectus_flowsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateManyWithoutDirectus_operationsInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateManyWithoutDirectus_operationsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_filesCreateManyDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_foldersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_foldersCreateManyDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateManyDirectus_foldersInput> = z.object({
  id: z.string(),
  name: z.string(),
}).strict();

export const directus_settingsCreateManyDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyDirectus_foldersInput> = z.object({
  id: z.number().int().optional(),
  project_name: z.string().optional(),
  project_url: z.string().optional().nullable(),
  project_color: z.string().optional().nullable(),
  project_logo: z.string().optional().nullable(),
  public_foreground: z.string().optional().nullable(),
  public_background: z.string().optional().nullable(),
  public_note: z.string().optional().nullable(),
  auth_login_attempts: z.number().int().optional().nullable(),
  auth_password_policy: z.string().optional().nullable(),
  storage_asset_transform: z.string().optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.string().optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.string().optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.string().optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.string().optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_filesUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_filesInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_filesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_foldersUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateWithoutDirectus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_files: z.lazy(() => directus_filesUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateWithoutDirectus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  directus_files: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  other_directus_folders: z.lazy(() => directus_foldersUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
  directus_settings: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_foldersNestedInputSchema).optional(),
}).strict();

export const directus_foldersUncheckedUpdateManyWithoutOther_directus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUncheckedUpdateManyWithoutOther_directus_foldersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
}).strict();

export const directus_settingsUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateWithoutDirectus_foldersInput> = z.object({
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_files_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_files_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_filesUpdateOneWithoutDirectus_settings_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_settingsUncheckedUpdateWithoutDirectus_foldersInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateWithoutDirectus_foldersInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_settingsUncheckedUpdateManyWithoutDirectus_settingsInputSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUncheckedUpdateManyWithoutDirectus_settingsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  project_name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  project_url: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  project_logo: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_foreground: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_background: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  public_note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_login_attempts: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_password_policy: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_transform: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  storage_asset_presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  custom_css: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  basemaps: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  mapbox_key: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  module_bar: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  project_descriptor: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  translation_strings: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  default_language: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  custom_aspect_ratios: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_revisionsCreateManyDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyDirectus_revisionsInput> = z.object({
  id: z.number().int().optional(),
  activity: z.number().int(),
  collection: z.string(),
  item: z.string(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_revisionsUpdateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateWithoutDirectus_revisionsInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_activity: z.lazy(() => directus_activityUpdateOneRequiredWithoutDirectus_revisionsNestedInputSchema).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateWithoutDirectus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateWithoutDirectus_revisionsInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  activity: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  other_directus_revisions: z.lazy(() => directus_revisionsUncheckedUpdateManyWithoutDirectus_revisionsNestedInputSchema).optional(),
}).strict();

export const directus_revisionsUncheckedUpdateManyWithoutOther_directus_revisionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUncheckedUpdateManyWithoutOther_directus_revisionsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  activity: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  item: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  delta: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_permissionsCreateManyDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateManyDirectus_rolesInput> = z.object({
  id: z.number().int().optional(),
  collection: z.string(),
  action: z.string(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.string().optional().nullable(),
}).strict();

export const directus_presetsCreateManyDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyDirectus_rolesInput> = z.object({
  id: z.number().int().optional(),
  bookmark: z.string().optional().nullable(),
  user: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().int().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_sharesCreateManyDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_rolesInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  user_created: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
}).strict();

export const directus_usersCreateManyDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateManyDirectus_rolesInput> = z.object({
  id: z.string(),
  first_name: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  title: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.string().optional().nullable(),
  language: z.string().optional().nullable(),
  theme: z.string().optional().nullable(),
  tfa_secret: z.string().optional().nullable(),
  status: z.string().optional(),
  token: z.string().optional().nullable(),
  last_access: z.date().optional().nullable(),
  last_page: z.string().optional().nullable(),
  provider: z.string().optional(),
  external_identifier: z.string().optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.boolean().optional().nullable(),
}).strict();

export const directus_permissionsUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateWithoutDirectus_rolesInput> = z.object({
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsUncheckedUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_permissionsUncheckedUpdateManyWithoutDirectus_permissionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUncheckedUpdateManyWithoutDirectus_permissionsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  collection: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  action: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  permissions: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  validation: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  presets: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  fields: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateWithoutDirectus_rolesInput> = z.object({
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_presetsNestedInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsUncheckedUpdateManyWithoutDirectus_presetsInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateManyWithoutDirectus_presetsInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sharesUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_created: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_usersUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateWithoutDirectus_rolesInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateWithoutDirectus_rolesInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_modified_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_files_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_filesUncheckedUpdateManyWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_flows: z.lazy(() => directus_flowsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
  directus_notifications_directus_notifications_senderTodirectus_users: z.lazy(() => directus_notificationsUncheckedUpdateManyWithoutDirectus_users_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_presets: z.lazy(() => directus_presetsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
  directus_shares: z.lazy(() => directus_sharesUncheckedUpdateManyWithoutDirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_usersUncheckedUpdateManyWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_usersUncheckedUpdateManyWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  first_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  email: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  avatar: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  language: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  theme: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tfa_secret: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  token: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_access: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  last_page: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  provider: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  external_identifier: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  auth_data: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  email_notifications: z.union([z.boolean(), z.lazy(() => NullableBoolFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsCreateManyDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyDirectus_sharesInput> = z.object({
  token: z.string(),
  user: z.string().optional().nullable(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sessionsUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateWithoutDirectus_sharesInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_sessionsNestedInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedUpdateWithoutDirectus_sharesInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateWithoutDirectus_sharesInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsUncheckedUpdateManyWithoutDirectus_sessionsInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateManyWithoutDirectus_sessionsInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  user: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_dashboardsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateManyDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional(),
  note: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_by: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.string(),
  storage: z.string(),
  filename_disk: z.string().optional().nullable(),
  filename_download: z.string(),
  title: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  folder: z.string().optional().nullable(),
  uploaded_on: z.date().optional(),
  modified_by: z.string().optional().nullable(),
  modified_on: z.date().optional(),
  charset: z.string().optional().nullable(),
  filesize: z.bigint().optional().nullable(),
  width: z.number().int().optional().nullable(),
  height: z.number().int().optional().nullable(),
  duration: z.number().int().optional().nullable(),
  embed: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  tags: z.string().optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_flowsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateManyDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  status: z.string().optional(),
  trigger: z.string().optional().nullable(),
  accountability: z.string().optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
}).strict();

export const directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.number().int().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.number().int().optional(),
  timestamp: z.date().optional().nullable(),
  status: z.string().optional().nullable(),
  recipient: z.string(),
  subject: z.string(),
  message: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
}).strict();

export const directus_operationsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  key: z.string(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.string().optional().nullable(),
  reject: z.string().optional().nullable(),
  flow: z.string(),
  date_created: z.date().optional().nullable(),
}).strict();

export const directus_panelsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyDirectus_usersInput> = z.object({
  id: z.string(),
  dashboard: z.string(),
  name: z.string().optional().nullable(),
  icon: z.string().optional().nullable(),
  color: z.string().optional().nullable(),
  show_header: z.boolean().optional(),
  note: z.string().optional().nullable(),
  type: z.string(),
  position_x: z.number().int(),
  position_y: z.number().int(),
  width: z.number().int(),
  height: z.number().int(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.date().optional().nullable(),
}).strict();

export const directus_presetsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyDirectus_usersInput> = z.object({
  id: z.number().int().optional(),
  bookmark: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  search: z.string().optional().nullable(),
  layout: z.string().optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.number().int().optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.string().optional(),
  color: z.string().optional().nullable(),
}).strict();

export const directus_sessionsCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyDirectus_usersInput> = z.object({
  token: z.string(),
  expires: z.date(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
  share: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
}).strict();

export const directus_sharesCreateManyDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyDirectus_usersInput> = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  collection: z.string().optional().nullable(),
  item: z.string().optional().nullable(),
  role: z.string().optional().nullable(),
  password: z.string().optional().nullable(),
  date_created: z.date().optional().nullable(),
  date_start: z.date().optional().nullable(),
  date_end: z.date().optional().nullable(),
  times_used: z.number().int().optional().nullable(),
  max_uses: z.number().int().optional().nullable(),
}).strict();

export const directus_dashboardsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsUpdateManyWithoutDirectus_dashboardsNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_panels: z.lazy(() => directus_panelsUncheckedUpdateManyWithoutDirectus_dashboardsNestedInputSchema).optional(),
}).strict();

export const directus_dashboardsUncheckedUpdateManyWithoutDirectus_dashboardsInputSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUncheckedUpdateManyWithoutDirectus_dashboardsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_filesUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_uploaded_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_modified_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_modified_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_filesUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_folders: z.lazy(() => directus_foldersUpdateOneWithoutDirectus_filesNestedInputSchema).optional(),
  directus_users_directus_files_modified_byTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_files_directus_files_modified_byTodirectus_usersNestedInputSchema).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateWithoutDirectus_users_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  directus_settings_directus_settings_project_logoTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_project_logoTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_backgroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_backgroundTodirectus_filesNestedInputSchema).optional(),
  directus_settings_directus_settings_public_foregroundTodirectus_files: z.lazy(() => directus_settingsUncheckedUpdateManyWithoutDirectus_files_directus_settings_public_foregroundTodirectus_filesNestedInputSchema).optional(),
}).strict();

export const directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_filesUncheckedUpdateManyWithoutDirectus_files_directus_files_uploaded_byTodirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  storage: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  filename_disk: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filename_download: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  title: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  folder: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  uploaded_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  modified_by: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  modified_on: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  charset: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filesize: z.union([z.bigint(), z.lazy(() => NullableBigIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  width: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  height: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  duration: z.union([z.number().int(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  embed: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  location: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  tags: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  metadata: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
}).strict();

export const directus_flowsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsUpdateManyWithoutDirectus_flowsNestedInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_operations: z.lazy(() => directus_operationsUncheckedUpdateManyWithoutDirectus_flowsNestedInputSchema).optional(),
}).strict();

export const directus_flowsUncheckedUpdateManyWithoutDirectus_flowsInputSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUncheckedUpdateManyWithoutDirectus_flowsInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  description: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  trigger: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  accountability: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  operation: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users_directus_notifications_senderTodirectus_users: z.lazy(() => directus_usersUpdateOneWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sender: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  sender: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_users_directus_notifications_recipientTodirectus_users: z.lazy(() => directus_usersUpdateOneRequiredWithoutDirectus_notifications_directus_notifications_recipientTodirectus_usersNestedInputSchema).optional(),
}).strict();

export const directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateWithoutDirectus_users_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  recipient: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUncheckedUpdateManyWithoutDirectus_notifications_directus_notifications_senderTodirectus_usersInput> = z.object({
  id: z.union([z.number().int(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  timestamp: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  status: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  recipient: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  subject: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  message: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_operationsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_flows: z.lazy(() => directus_flowsUpdateOneRequiredWithoutDirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutOther_directus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_operationsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  key: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  resolve: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  reject: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  flow: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  other_directus_operations_directus_operations_rejectTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_rejectTodirectus_operationsNestedInputSchema).optional(),
  other_directus_operations_directus_operations_resolveTodirectus_operations: z.lazy(() => directus_operationsUncheckedUpdateOneWithoutDirectus_operations_directus_operations_resolveTodirectus_operationsNestedInputSchema).optional(),
}).strict();

export const directus_panelsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_dashboards: z.lazy(() => directus_dashboardsUpdateOneRequiredWithoutDirectus_panelsNestedInputSchema).optional(),
}).strict();

export const directus_panelsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  dashboard: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  icon: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  show_header: z.union([z.boolean(), z.lazy(() => BoolFieldUpdateOperationsInputSchema)]).optional(),
  note: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  type: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  position_x: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  position_y: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  width: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  height: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_presetsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateWithoutDirectus_usersInput> = z.object({
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_presetsNestedInputSchema).optional(),
}).strict();

export const directus_presetsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.number(), z.lazy(() => IntFieldUpdateOperationsInputSchema)]).optional(),
  bookmark: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  search: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  layout_query: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  layout_options: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  refresh_interval: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  filter: z.union([z.lazy(() => NullableJsonNullValueInputSchema), InputJsonValue]).optional(),
  icon: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  color: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sessionsUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateWithoutDirectus_usersInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_shares: z.lazy(() => directus_sharesUpdateOneWithoutDirectus_sessionsNestedInputSchema).optional(),
}).strict();

export const directus_sessionsUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  token: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  expires: z.union([z.date(), z.lazy(() => DateTimeFieldUpdateOperationsInputSchema)]).optional(),
  ip: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  user_agent: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  share: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  origin: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
}).strict();

export const directus_sharesUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_collections: z.lazy(() => directus_collectionsUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
  directus_roles: z.lazy(() => directus_rolesUpdateOneWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

export const directus_sharesUncheckedUpdateWithoutDirectus_usersInputSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUncheckedUpdateWithoutDirectus_usersInput> = z.object({
  id: z.union([z.string(), z.lazy(() => StringFieldUpdateOperationsInputSchema)]).optional(),
  name: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  collection: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  item: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  role: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  password: z.union([z.string(), z.lazy(() => NullableStringFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_created: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_start: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  date_end: z.union([z.date(), z.lazy(() => NullableDateTimeFieldUpdateOperationsInputSchema)]).optional().nullable(),
  times_used: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  max_uses: z.union([z.number(), z.lazy(() => NullableIntFieldUpdateOperationsInputSchema)]).optional().nullable(),
  directus_sessions: z.lazy(() => directus_sessionsUncheckedUpdateManyWithoutDirectus_sharesNestedInputSchema).optional(),
}).strict();

/////////////////////////////////////////
// ARGS
/////////////////////////////////////////

export const UserFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.UserFindFirstArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([UserOrderByWithRelationInputSchema.array(), UserOrderByWithRelationInputSchema]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: UserScalarFieldEnumSchema.array().optional(),
}).strict();

export const UserFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.UserFindFirstOrThrowArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([UserOrderByWithRelationInputSchema.array(), UserOrderByWithRelationInputSchema]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: UserScalarFieldEnumSchema.array().optional(),
}).strict();

export const UserFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.UserFindManyArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([UserOrderByWithRelationInputSchema.array(), UserOrderByWithRelationInputSchema]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: UserScalarFieldEnumSchema.array().optional(),
}).strict();

export const UserAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.UserAggregateArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([UserOrderByWithRelationInputSchema.array(), UserOrderByWithRelationInputSchema]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const UserGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.UserGroupByArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([UserOrderByWithAggregationInputSchema.array(), UserOrderByWithAggregationInputSchema]).optional(),
  by: UserScalarFieldEnumSchema.array(),
  having: UserScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const UserFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.UserFindUniqueArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict();

export const UserFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.UserFindUniqueOrThrowArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict();

export const CourseFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.CourseFindFirstArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereInputSchema.optional(),
  orderBy: z.union([CourseOrderByWithRelationInputSchema.array(), CourseOrderByWithRelationInputSchema]).optional(),
  cursor: CourseWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: CourseScalarFieldEnumSchema.array().optional(),
}).strict();

export const CourseFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.CourseFindFirstOrThrowArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereInputSchema.optional(),
  orderBy: z.union([CourseOrderByWithRelationInputSchema.array(), CourseOrderByWithRelationInputSchema]).optional(),
  cursor: CourseWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: CourseScalarFieldEnumSchema.array().optional(),
}).strict();

export const CourseFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.CourseFindManyArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereInputSchema.optional(),
  orderBy: z.union([CourseOrderByWithRelationInputSchema.array(), CourseOrderByWithRelationInputSchema]).optional(),
  cursor: CourseWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: CourseScalarFieldEnumSchema.array().optional(),
}).strict();

export const CourseAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.CourseAggregateArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereInputSchema.optional(),
  orderBy: z.union([CourseOrderByWithRelationInputSchema.array(), CourseOrderByWithRelationInputSchema]).optional(),
  cursor: CourseWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const CourseGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.CourseGroupByArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereInputSchema.optional(),
  orderBy: z.union([CourseOrderByWithAggregationInputSchema.array(), CourseOrderByWithAggregationInputSchema]).optional(),
  by: CourseScalarFieldEnumSchema.array(),
  having: CourseScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const CourseFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.CourseFindUniqueArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereUniqueInputSchema,
}).strict();

export const CourseFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.CourseFindUniqueOrThrowArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereUniqueInputSchema,
}).strict();

export const ModuleFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleFindFirstArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereInputSchema.optional(),
  orderBy: z.union([ModuleOrderByWithRelationInputSchema.array(), ModuleOrderByWithRelationInputSchema]).optional(),
  cursor: ModuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: ModuleScalarFieldEnumSchema.array().optional(),
}).strict();

export const ModuleFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleFindFirstOrThrowArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereInputSchema.optional(),
  orderBy: z.union([ModuleOrderByWithRelationInputSchema.array(), ModuleOrderByWithRelationInputSchema]).optional(),
  cursor: ModuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: ModuleScalarFieldEnumSchema.array().optional(),
}).strict();

export const ModuleFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleFindManyArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereInputSchema.optional(),
  orderBy: z.union([ModuleOrderByWithRelationInputSchema.array(), ModuleOrderByWithRelationInputSchema]).optional(),
  cursor: ModuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: ModuleScalarFieldEnumSchema.array().optional(),
}).strict();

export const ModuleAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleAggregateArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereInputSchema.optional(),
  orderBy: z.union([ModuleOrderByWithRelationInputSchema.array(), ModuleOrderByWithRelationInputSchema]).optional(),
  cursor: ModuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const ModuleGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleGroupByArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereInputSchema.optional(),
  orderBy: z.union([ModuleOrderByWithAggregationInputSchema.array(), ModuleOrderByWithAggregationInputSchema]).optional(),
  by: ModuleScalarFieldEnumSchema.array(),
  having: ModuleScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const ModuleFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleFindUniqueArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereUniqueInputSchema,
}).strict();

export const ModuleFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleFindUniqueOrThrowArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereUniqueInputSchema,
}).strict();

export const LessonFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.LessonFindFirstArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereInputSchema.optional(),
  orderBy: z.union([LessonOrderByWithRelationInputSchema.array(), LessonOrderByWithRelationInputSchema]).optional(),
  cursor: LessonWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.LessonFindFirstOrThrowArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereInputSchema.optional(),
  orderBy: z.union([LessonOrderByWithRelationInputSchema.array(), LessonOrderByWithRelationInputSchema]).optional(),
  cursor: LessonWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonFindManyArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereInputSchema.optional(),
  orderBy: z.union([LessonOrderByWithRelationInputSchema.array(), LessonOrderByWithRelationInputSchema]).optional(),
  cursor: LessonWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonAggregateArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereInputSchema.optional(),
  orderBy: z.union([LessonOrderByWithRelationInputSchema.array(), LessonOrderByWithRelationInputSchema]).optional(),
  cursor: LessonWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const LessonGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.LessonGroupByArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereInputSchema.optional(),
  orderBy: z.union([LessonOrderByWithAggregationInputSchema.array(), LessonOrderByWithAggregationInputSchema]).optional(),
  by: LessonScalarFieldEnumSchema.array(),
  having: LessonScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const LessonFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.LessonFindUniqueArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereUniqueInputSchema,
}).strict();

export const LessonFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.LessonFindUniqueOrThrowArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereUniqueInputSchema,
}).strict();

export const LessonTypeFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeFindFirstArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereInputSchema.optional(),
  orderBy: z.union([LessonTypeOrderByWithRelationInputSchema.array(), LessonTypeOrderByWithRelationInputSchema]).optional(),
  cursor: LessonTypeWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonTypeScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonTypeFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeFindFirstOrThrowArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereInputSchema.optional(),
  orderBy: z.union([LessonTypeOrderByWithRelationInputSchema.array(), LessonTypeOrderByWithRelationInputSchema]).optional(),
  cursor: LessonTypeWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonTypeScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonTypeFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeFindManyArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereInputSchema.optional(),
  orderBy: z.union([LessonTypeOrderByWithRelationInputSchema.array(), LessonTypeOrderByWithRelationInputSchema]).optional(),
  cursor: LessonTypeWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: LessonTypeScalarFieldEnumSchema.array().optional(),
}).strict();

export const LessonTypeAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeAggregateArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereInputSchema.optional(),
  orderBy: z.union([LessonTypeOrderByWithRelationInputSchema.array(), LessonTypeOrderByWithRelationInputSchema]).optional(),
  cursor: LessonTypeWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const LessonTypeGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeGroupByArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereInputSchema.optional(),
  orderBy: z.union([LessonTypeOrderByWithAggregationInputSchema.array(), LessonTypeOrderByWithAggregationInputSchema]).optional(),
  by: LessonTypeScalarFieldEnumSchema.array(),
  having: LessonTypeScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const LessonTypeFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeFindUniqueArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereUniqueInputSchema,
}).strict();

export const LessonTypeFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeFindUniqueOrThrowArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereUniqueInputSchema,
}).strict();

export const directus_activityFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityFindFirstArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereInputSchema.optional(),
  orderBy: z.union([directus_activityOrderByWithRelationInputSchema.array(), directus_activityOrderByWithRelationInputSchema]).optional(),
  cursor: directus_activityWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_activityScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_activityFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityFindFirstOrThrowArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereInputSchema.optional(),
  orderBy: z.union([directus_activityOrderByWithRelationInputSchema.array(), directus_activityOrderByWithRelationInputSchema]).optional(),
  cursor: directus_activityWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_activityScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_activityFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityFindManyArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereInputSchema.optional(),
  orderBy: z.union([directus_activityOrderByWithRelationInputSchema.array(), directus_activityOrderByWithRelationInputSchema]).optional(),
  cursor: directus_activityWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_activityScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_activityAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityAggregateArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereInputSchema.optional(),
  orderBy: z.union([directus_activityOrderByWithRelationInputSchema.array(), directus_activityOrderByWithRelationInputSchema]).optional(),
  cursor: directus_activityWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_activityGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityGroupByArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereInputSchema.optional(),
  orderBy: z.union([directus_activityOrderByWithAggregationInputSchema.array(), directus_activityOrderByWithAggregationInputSchema]).optional(),
  by: Directus_activityScalarFieldEnumSchema.array(),
  having: directus_activityScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_activityFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityFindUniqueArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereUniqueInputSchema,
}).strict();

export const directus_activityFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityFindUniqueOrThrowArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereUniqueInputSchema,
}).strict();

export const directus_collectionsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsFindFirstArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereInputSchema.optional(),
  orderBy: z.union([directus_collectionsOrderByWithRelationInputSchema.array(), directus_collectionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_collectionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_collectionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_collectionsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsFindFirstOrThrowArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereInputSchema.optional(),
  orderBy: z.union([directus_collectionsOrderByWithRelationInputSchema.array(), directus_collectionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_collectionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_collectionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_collectionsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsFindManyArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereInputSchema.optional(),
  orderBy: z.union([directus_collectionsOrderByWithRelationInputSchema.array(), directus_collectionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_collectionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_collectionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_collectionsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsAggregateArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereInputSchema.optional(),
  orderBy: z.union([directus_collectionsOrderByWithRelationInputSchema.array(), directus_collectionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_collectionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_collectionsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsGroupByArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereInputSchema.optional(),
  orderBy: z.union([directus_collectionsOrderByWithAggregationInputSchema.array(), directus_collectionsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_collectionsScalarFieldEnumSchema.array(),
  having: directus_collectionsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_collectionsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsFindUniqueArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereUniqueInputSchema,
}).strict();

export const directus_collectionsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsFindUniqueOrThrowArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereUniqueInputSchema,
}).strict();

export const directus_dashboardsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsFindFirstArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereInputSchema.optional(),
  orderBy: z.union([directus_dashboardsOrderByWithRelationInputSchema.array(), directus_dashboardsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_dashboardsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_dashboardsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_dashboardsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsFindFirstOrThrowArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereInputSchema.optional(),
  orderBy: z.union([directus_dashboardsOrderByWithRelationInputSchema.array(), directus_dashboardsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_dashboardsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_dashboardsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_dashboardsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsFindManyArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereInputSchema.optional(),
  orderBy: z.union([directus_dashboardsOrderByWithRelationInputSchema.array(), directus_dashboardsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_dashboardsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_dashboardsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_dashboardsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsAggregateArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereInputSchema.optional(),
  orderBy: z.union([directus_dashboardsOrderByWithRelationInputSchema.array(), directus_dashboardsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_dashboardsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_dashboardsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsGroupByArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereInputSchema.optional(),
  orderBy: z.union([directus_dashboardsOrderByWithAggregationInputSchema.array(), directus_dashboardsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_dashboardsScalarFieldEnumSchema.array(),
  having: directus_dashboardsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_dashboardsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsFindUniqueArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereUniqueInputSchema,
}).strict();

export const directus_dashboardsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsFindUniqueOrThrowArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereUniqueInputSchema,
}).strict();

export const directus_fieldsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsFindFirstArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereInputSchema.optional(),
  orderBy: z.union([directus_fieldsOrderByWithRelationInputSchema.array(), directus_fieldsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_fieldsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_fieldsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_fieldsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsFindFirstOrThrowArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereInputSchema.optional(),
  orderBy: z.union([directus_fieldsOrderByWithRelationInputSchema.array(), directus_fieldsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_fieldsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_fieldsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_fieldsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsFindManyArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereInputSchema.optional(),
  orderBy: z.union([directus_fieldsOrderByWithRelationInputSchema.array(), directus_fieldsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_fieldsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_fieldsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_fieldsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsAggregateArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereInputSchema.optional(),
  orderBy: z.union([directus_fieldsOrderByWithRelationInputSchema.array(), directus_fieldsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_fieldsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_fieldsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsGroupByArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereInputSchema.optional(),
  orderBy: z.union([directus_fieldsOrderByWithAggregationInputSchema.array(), directus_fieldsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_fieldsScalarFieldEnumSchema.array(),
  having: directus_fieldsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_fieldsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsFindUniqueArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereUniqueInputSchema,
}).strict();

export const directus_fieldsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsFindUniqueOrThrowArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereUniqueInputSchema,
}).strict();

export const directus_filesFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesFindFirstArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereInputSchema.optional(),
  orderBy: z.union([directus_filesOrderByWithRelationInputSchema.array(), directus_filesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_filesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_filesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_filesFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesFindFirstOrThrowArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereInputSchema.optional(),
  orderBy: z.union([directus_filesOrderByWithRelationInputSchema.array(), directus_filesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_filesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_filesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_filesFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesFindManyArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereInputSchema.optional(),
  orderBy: z.union([directus_filesOrderByWithRelationInputSchema.array(), directus_filesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_filesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_filesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_filesAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesAggregateArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereInputSchema.optional(),
  orderBy: z.union([directus_filesOrderByWithRelationInputSchema.array(), directus_filesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_filesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_filesGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesGroupByArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereInputSchema.optional(),
  orderBy: z.union([directus_filesOrderByWithAggregationInputSchema.array(), directus_filesOrderByWithAggregationInputSchema]).optional(),
  by: Directus_filesScalarFieldEnumSchema.array(),
  having: directus_filesScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_filesFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesFindUniqueArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereUniqueInputSchema,
}).strict();

export const directus_filesFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesFindUniqueOrThrowArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereUniqueInputSchema,
}).strict();

export const directus_flowsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsFindFirstArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereInputSchema.optional(),
  orderBy: z.union([directus_flowsOrderByWithRelationInputSchema.array(), directus_flowsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_flowsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_flowsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_flowsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsFindFirstOrThrowArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereInputSchema.optional(),
  orderBy: z.union([directus_flowsOrderByWithRelationInputSchema.array(), directus_flowsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_flowsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_flowsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_flowsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsFindManyArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereInputSchema.optional(),
  orderBy: z.union([directus_flowsOrderByWithRelationInputSchema.array(), directus_flowsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_flowsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_flowsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_flowsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsAggregateArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereInputSchema.optional(),
  orderBy: z.union([directus_flowsOrderByWithRelationInputSchema.array(), directus_flowsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_flowsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_flowsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsGroupByArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereInputSchema.optional(),
  orderBy: z.union([directus_flowsOrderByWithAggregationInputSchema.array(), directus_flowsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_flowsScalarFieldEnumSchema.array(),
  having: directus_flowsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_flowsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsFindUniqueArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereUniqueInputSchema,
}).strict();

export const directus_flowsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsFindUniqueOrThrowArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereUniqueInputSchema,
}).strict();

export const directus_foldersFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersFindFirstArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereInputSchema.optional(),
  orderBy: z.union([directus_foldersOrderByWithRelationInputSchema.array(), directus_foldersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_foldersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_foldersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_foldersFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersFindFirstOrThrowArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereInputSchema.optional(),
  orderBy: z.union([directus_foldersOrderByWithRelationInputSchema.array(), directus_foldersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_foldersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_foldersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_foldersFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersFindManyArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereInputSchema.optional(),
  orderBy: z.union([directus_foldersOrderByWithRelationInputSchema.array(), directus_foldersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_foldersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_foldersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_foldersAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersAggregateArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereInputSchema.optional(),
  orderBy: z.union([directus_foldersOrderByWithRelationInputSchema.array(), directus_foldersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_foldersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_foldersGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersGroupByArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereInputSchema.optional(),
  orderBy: z.union([directus_foldersOrderByWithAggregationInputSchema.array(), directus_foldersOrderByWithAggregationInputSchema]).optional(),
  by: Directus_foldersScalarFieldEnumSchema.array(),
  having: directus_foldersScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_foldersFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersFindUniqueArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereUniqueInputSchema,
}).strict();

export const directus_foldersFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersFindUniqueOrThrowArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereUniqueInputSchema,
}).strict();

export const directus_migrationsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsFindFirstArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereInputSchema.optional(),
  orderBy: z.union([directus_migrationsOrderByWithRelationInputSchema.array(), directus_migrationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_migrationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_migrationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_migrationsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsFindFirstOrThrowArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereInputSchema.optional(),
  orderBy: z.union([directus_migrationsOrderByWithRelationInputSchema.array(), directus_migrationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_migrationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_migrationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_migrationsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsFindManyArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereInputSchema.optional(),
  orderBy: z.union([directus_migrationsOrderByWithRelationInputSchema.array(), directus_migrationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_migrationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_migrationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_migrationsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsAggregateArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereInputSchema.optional(),
  orderBy: z.union([directus_migrationsOrderByWithRelationInputSchema.array(), directus_migrationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_migrationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_migrationsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsGroupByArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereInputSchema.optional(),
  orderBy: z.union([directus_migrationsOrderByWithAggregationInputSchema.array(), directus_migrationsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_migrationsScalarFieldEnumSchema.array(),
  having: directus_migrationsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_migrationsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsFindUniqueArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereUniqueInputSchema,
}).strict();

export const directus_migrationsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsFindUniqueOrThrowArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereUniqueInputSchema,
}).strict();

export const directus_notificationsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsFindFirstArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereInputSchema.optional(),
  orderBy: z.union([directus_notificationsOrderByWithRelationInputSchema.array(), directus_notificationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_notificationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_notificationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_notificationsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsFindFirstOrThrowArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereInputSchema.optional(),
  orderBy: z.union([directus_notificationsOrderByWithRelationInputSchema.array(), directus_notificationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_notificationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_notificationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_notificationsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsFindManyArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereInputSchema.optional(),
  orderBy: z.union([directus_notificationsOrderByWithRelationInputSchema.array(), directus_notificationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_notificationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_notificationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_notificationsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsAggregateArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereInputSchema.optional(),
  orderBy: z.union([directus_notificationsOrderByWithRelationInputSchema.array(), directus_notificationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_notificationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_notificationsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsGroupByArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereInputSchema.optional(),
  orderBy: z.union([directus_notificationsOrderByWithAggregationInputSchema.array(), directus_notificationsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_notificationsScalarFieldEnumSchema.array(),
  having: directus_notificationsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_notificationsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsFindUniqueArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereUniqueInputSchema,
}).strict();

export const directus_notificationsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsFindUniqueOrThrowArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereUniqueInputSchema,
}).strict();

export const directus_operationsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsFindFirstArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereInputSchema.optional(),
  orderBy: z.union([directus_operationsOrderByWithRelationInputSchema.array(), directus_operationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_operationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_operationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_operationsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsFindFirstOrThrowArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereInputSchema.optional(),
  orderBy: z.union([directus_operationsOrderByWithRelationInputSchema.array(), directus_operationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_operationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_operationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_operationsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsFindManyArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereInputSchema.optional(),
  orderBy: z.union([directus_operationsOrderByWithRelationInputSchema.array(), directus_operationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_operationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_operationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_operationsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsAggregateArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereInputSchema.optional(),
  orderBy: z.union([directus_operationsOrderByWithRelationInputSchema.array(), directus_operationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_operationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_operationsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsGroupByArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereInputSchema.optional(),
  orderBy: z.union([directus_operationsOrderByWithAggregationInputSchema.array(), directus_operationsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_operationsScalarFieldEnumSchema.array(),
  having: directus_operationsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_operationsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsFindUniqueArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereUniqueInputSchema,
}).strict();

export const directus_operationsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsFindUniqueOrThrowArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereUniqueInputSchema,
}).strict();

export const directus_panelsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsFindFirstArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereInputSchema.optional(),
  orderBy: z.union([directus_panelsOrderByWithRelationInputSchema.array(), directus_panelsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_panelsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_panelsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_panelsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsFindFirstOrThrowArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereInputSchema.optional(),
  orderBy: z.union([directus_panelsOrderByWithRelationInputSchema.array(), directus_panelsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_panelsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_panelsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_panelsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsFindManyArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereInputSchema.optional(),
  orderBy: z.union([directus_panelsOrderByWithRelationInputSchema.array(), directus_panelsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_panelsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_panelsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_panelsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsAggregateArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereInputSchema.optional(),
  orderBy: z.union([directus_panelsOrderByWithRelationInputSchema.array(), directus_panelsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_panelsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_panelsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsGroupByArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereInputSchema.optional(),
  orderBy: z.union([directus_panelsOrderByWithAggregationInputSchema.array(), directus_panelsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_panelsScalarFieldEnumSchema.array(),
  having: directus_panelsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_panelsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsFindUniqueArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereUniqueInputSchema,
}).strict();

export const directus_panelsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsFindUniqueOrThrowArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereUniqueInputSchema,
}).strict();

export const directus_permissionsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsFindFirstArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereInputSchema.optional(),
  orderBy: z.union([directus_permissionsOrderByWithRelationInputSchema.array(), directus_permissionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_permissionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_permissionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_permissionsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsFindFirstOrThrowArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereInputSchema.optional(),
  orderBy: z.union([directus_permissionsOrderByWithRelationInputSchema.array(), directus_permissionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_permissionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_permissionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_permissionsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsFindManyArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereInputSchema.optional(),
  orderBy: z.union([directus_permissionsOrderByWithRelationInputSchema.array(), directus_permissionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_permissionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_permissionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_permissionsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsAggregateArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereInputSchema.optional(),
  orderBy: z.union([directus_permissionsOrderByWithRelationInputSchema.array(), directus_permissionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_permissionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_permissionsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsGroupByArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereInputSchema.optional(),
  orderBy: z.union([directus_permissionsOrderByWithAggregationInputSchema.array(), directus_permissionsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_permissionsScalarFieldEnumSchema.array(),
  having: directus_permissionsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_permissionsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsFindUniqueArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereUniqueInputSchema,
}).strict();

export const directus_permissionsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsFindUniqueOrThrowArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereUniqueInputSchema,
}).strict();

export const directus_presetsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsFindFirstArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereInputSchema.optional(),
  orderBy: z.union([directus_presetsOrderByWithRelationInputSchema.array(), directus_presetsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_presetsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_presetsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_presetsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsFindFirstOrThrowArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereInputSchema.optional(),
  orderBy: z.union([directus_presetsOrderByWithRelationInputSchema.array(), directus_presetsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_presetsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_presetsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_presetsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsFindManyArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereInputSchema.optional(),
  orderBy: z.union([directus_presetsOrderByWithRelationInputSchema.array(), directus_presetsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_presetsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_presetsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_presetsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsAggregateArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereInputSchema.optional(),
  orderBy: z.union([directus_presetsOrderByWithRelationInputSchema.array(), directus_presetsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_presetsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_presetsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsGroupByArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereInputSchema.optional(),
  orderBy: z.union([directus_presetsOrderByWithAggregationInputSchema.array(), directus_presetsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_presetsScalarFieldEnumSchema.array(),
  having: directus_presetsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_presetsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsFindUniqueArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereUniqueInputSchema,
}).strict();

export const directus_presetsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsFindUniqueOrThrowArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereUniqueInputSchema,
}).strict();

export const directus_relationsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsFindFirstArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereInputSchema.optional(),
  orderBy: z.union([directus_relationsOrderByWithRelationInputSchema.array(), directus_relationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_relationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_relationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_relationsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsFindFirstOrThrowArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereInputSchema.optional(),
  orderBy: z.union([directus_relationsOrderByWithRelationInputSchema.array(), directus_relationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_relationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_relationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_relationsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsFindManyArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereInputSchema.optional(),
  orderBy: z.union([directus_relationsOrderByWithRelationInputSchema.array(), directus_relationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_relationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_relationsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_relationsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsAggregateArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereInputSchema.optional(),
  orderBy: z.union([directus_relationsOrderByWithRelationInputSchema.array(), directus_relationsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_relationsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_relationsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsGroupByArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereInputSchema.optional(),
  orderBy: z.union([directus_relationsOrderByWithAggregationInputSchema.array(), directus_relationsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_relationsScalarFieldEnumSchema.array(),
  having: directus_relationsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_relationsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsFindUniqueArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereUniqueInputSchema,
}).strict();

export const directus_relationsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsFindUniqueOrThrowArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereUniqueInputSchema,
}).strict();

export const directus_revisionsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsFindFirstArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereInputSchema.optional(),
  orderBy: z.union([directus_revisionsOrderByWithRelationInputSchema.array(), directus_revisionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_revisionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_revisionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_revisionsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsFindFirstOrThrowArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereInputSchema.optional(),
  orderBy: z.union([directus_revisionsOrderByWithRelationInputSchema.array(), directus_revisionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_revisionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_revisionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_revisionsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsFindManyArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereInputSchema.optional(),
  orderBy: z.union([directus_revisionsOrderByWithRelationInputSchema.array(), directus_revisionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_revisionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_revisionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_revisionsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsAggregateArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereInputSchema.optional(),
  orderBy: z.union([directus_revisionsOrderByWithRelationInputSchema.array(), directus_revisionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_revisionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_revisionsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsGroupByArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereInputSchema.optional(),
  orderBy: z.union([directus_revisionsOrderByWithAggregationInputSchema.array(), directus_revisionsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_revisionsScalarFieldEnumSchema.array(),
  having: directus_revisionsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_revisionsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsFindUniqueArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereUniqueInputSchema,
}).strict();

export const directus_revisionsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsFindUniqueOrThrowArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereUniqueInputSchema,
}).strict();

export const directus_rolesFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesFindFirstArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereInputSchema.optional(),
  orderBy: z.union([directus_rolesOrderByWithRelationInputSchema.array(), directus_rolesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_rolesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_rolesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_rolesFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesFindFirstOrThrowArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereInputSchema.optional(),
  orderBy: z.union([directus_rolesOrderByWithRelationInputSchema.array(), directus_rolesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_rolesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_rolesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_rolesFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesFindManyArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereInputSchema.optional(),
  orderBy: z.union([directus_rolesOrderByWithRelationInputSchema.array(), directus_rolesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_rolesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_rolesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_rolesAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesAggregateArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereInputSchema.optional(),
  orderBy: z.union([directus_rolesOrderByWithRelationInputSchema.array(), directus_rolesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_rolesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_rolesGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesGroupByArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereInputSchema.optional(),
  orderBy: z.union([directus_rolesOrderByWithAggregationInputSchema.array(), directus_rolesOrderByWithAggregationInputSchema]).optional(),
  by: Directus_rolesScalarFieldEnumSchema.array(),
  having: directus_rolesScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_rolesFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesFindUniqueArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereUniqueInputSchema,
}).strict();

export const directus_rolesFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesFindUniqueOrThrowArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereUniqueInputSchema,
}).strict();

export const directus_sessionsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsFindFirstArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereInputSchema.optional(),
  orderBy: z.union([directus_sessionsOrderByWithRelationInputSchema.array(), directus_sessionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sessionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sessionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sessionsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsFindFirstOrThrowArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereInputSchema.optional(),
  orderBy: z.union([directus_sessionsOrderByWithRelationInputSchema.array(), directus_sessionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sessionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sessionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sessionsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsFindManyArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereInputSchema.optional(),
  orderBy: z.union([directus_sessionsOrderByWithRelationInputSchema.array(), directus_sessionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sessionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sessionsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sessionsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsAggregateArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereInputSchema.optional(),
  orderBy: z.union([directus_sessionsOrderByWithRelationInputSchema.array(), directus_sessionsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sessionsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_sessionsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsGroupByArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereInputSchema.optional(),
  orderBy: z.union([directus_sessionsOrderByWithAggregationInputSchema.array(), directus_sessionsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_sessionsScalarFieldEnumSchema.array(),
  having: directus_sessionsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_sessionsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsFindUniqueArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereUniqueInputSchema,
}).strict();

export const directus_sessionsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsFindUniqueOrThrowArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereUniqueInputSchema,
}).strict();

export const directus_settingsFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsFindFirstArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereInputSchema.optional(),
  orderBy: z.union([directus_settingsOrderByWithRelationInputSchema.array(), directus_settingsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_settingsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_settingsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_settingsFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsFindFirstOrThrowArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereInputSchema.optional(),
  orderBy: z.union([directus_settingsOrderByWithRelationInputSchema.array(), directus_settingsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_settingsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_settingsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_settingsFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsFindManyArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereInputSchema.optional(),
  orderBy: z.union([directus_settingsOrderByWithRelationInputSchema.array(), directus_settingsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_settingsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_settingsScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_settingsAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsAggregateArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereInputSchema.optional(),
  orderBy: z.union([directus_settingsOrderByWithRelationInputSchema.array(), directus_settingsOrderByWithRelationInputSchema]).optional(),
  cursor: directus_settingsWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_settingsGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsGroupByArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereInputSchema.optional(),
  orderBy: z.union([directus_settingsOrderByWithAggregationInputSchema.array(), directus_settingsOrderByWithAggregationInputSchema]).optional(),
  by: Directus_settingsScalarFieldEnumSchema.array(),
  having: directus_settingsScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_settingsFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsFindUniqueArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereUniqueInputSchema,
}).strict();

export const directus_settingsFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsFindUniqueOrThrowArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereUniqueInputSchema,
}).strict();

export const directus_sharesFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesFindFirstArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereInputSchema.optional(),
  orderBy: z.union([directus_sharesOrderByWithRelationInputSchema.array(), directus_sharesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sharesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sharesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sharesFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesFindFirstOrThrowArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereInputSchema.optional(),
  orderBy: z.union([directus_sharesOrderByWithRelationInputSchema.array(), directus_sharesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sharesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sharesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sharesFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesFindManyArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereInputSchema.optional(),
  orderBy: z.union([directus_sharesOrderByWithRelationInputSchema.array(), directus_sharesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sharesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_sharesScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_sharesAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesAggregateArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereInputSchema.optional(),
  orderBy: z.union([directus_sharesOrderByWithRelationInputSchema.array(), directus_sharesOrderByWithRelationInputSchema]).optional(),
  cursor: directus_sharesWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_sharesGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesGroupByArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereInputSchema.optional(),
  orderBy: z.union([directus_sharesOrderByWithAggregationInputSchema.array(), directus_sharesOrderByWithAggregationInputSchema]).optional(),
  by: Directus_sharesScalarFieldEnumSchema.array(),
  having: directus_sharesScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_sharesFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesFindUniqueArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereUniqueInputSchema,
}).strict();

export const directus_sharesFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesFindUniqueOrThrowArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereUniqueInputSchema,
}).strict();

export const directus_usersFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersFindFirstArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereInputSchema.optional(),
  orderBy: z.union([directus_usersOrderByWithRelationInputSchema.array(), directus_usersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_usersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_usersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_usersFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersFindFirstOrThrowArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereInputSchema.optional(),
  orderBy: z.union([directus_usersOrderByWithRelationInputSchema.array(), directus_usersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_usersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_usersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_usersFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersFindManyArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereInputSchema.optional(),
  orderBy: z.union([directus_usersOrderByWithRelationInputSchema.array(), directus_usersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_usersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_usersScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_usersAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersAggregateArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereInputSchema.optional(),
  orderBy: z.union([directus_usersOrderByWithRelationInputSchema.array(), directus_usersOrderByWithRelationInputSchema]).optional(),
  cursor: directus_usersWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_usersGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersGroupByArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereInputSchema.optional(),
  orderBy: z.union([directus_usersOrderByWithAggregationInputSchema.array(), directus_usersOrderByWithAggregationInputSchema]).optional(),
  by: Directus_usersScalarFieldEnumSchema.array(),
  having: directus_usersScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_usersFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersFindUniqueArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereUniqueInputSchema,
}).strict();

export const directus_usersFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersFindUniqueOrThrowArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereUniqueInputSchema,
}).strict();

export const directus_webhooksFindFirstArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksFindFirstArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereInputSchema.optional(),
  orderBy: z.union([directus_webhooksOrderByWithRelationInputSchema.array(), directus_webhooksOrderByWithRelationInputSchema]).optional(),
  cursor: directus_webhooksWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_webhooksScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_webhooksFindFirstOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksFindFirstOrThrowArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereInputSchema.optional(),
  orderBy: z.union([directus_webhooksOrderByWithRelationInputSchema.array(), directus_webhooksOrderByWithRelationInputSchema]).optional(),
  cursor: directus_webhooksWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_webhooksScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_webhooksFindManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksFindManyArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereInputSchema.optional(),
  orderBy: z.union([directus_webhooksOrderByWithRelationInputSchema.array(), directus_webhooksOrderByWithRelationInputSchema]).optional(),
  cursor: directus_webhooksWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: Directus_webhooksScalarFieldEnumSchema.array().optional(),
}).strict();

export const directus_webhooksAggregateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksAggregateArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereInputSchema.optional(),
  orderBy: z.union([directus_webhooksOrderByWithRelationInputSchema.array(), directus_webhooksOrderByWithRelationInputSchema]).optional(),
  cursor: directus_webhooksWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_webhooksGroupByArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksGroupByArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereInputSchema.optional(),
  orderBy: z.union([directus_webhooksOrderByWithAggregationInputSchema.array(), directus_webhooksOrderByWithAggregationInputSchema]).optional(),
  by: Directus_webhooksScalarFieldEnumSchema.array(),
  having: directus_webhooksScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict();

export const directus_webhooksFindUniqueArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksFindUniqueArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereUniqueInputSchema,
}).strict();

export const directus_webhooksFindUniqueOrThrowArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksFindUniqueOrThrowArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereUniqueInputSchema,
}).strict();

export const UserCreateArgsSchema: z.ZodType<PrismaClient.Prisma.UserCreateArgs> = z.object({
  select: UserSelectSchema.optional(),
  data: z.union([UserCreateInputSchema, UserUncheckedCreateInputSchema]),
}).strict();

export const UserUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.UserUpsertArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereUniqueInputSchema,
  create: z.union([UserCreateInputSchema, UserUncheckedCreateInputSchema]),
  update: z.union([UserUpdateInputSchema, UserUncheckedUpdateInputSchema]),
}).strict();

export const UserCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.UserCreateManyArgs> = z.object({
  data: UserCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const UserDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.UserDeleteArgs> = z.object({
  select: UserSelectSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict();

export const UserUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.UserUpdateArgs> = z.object({
  select: UserSelectSchema.optional(),
  data: z.union([UserUpdateInputSchema, UserUncheckedUpdateInputSchema]),
  where: UserWhereUniqueInputSchema,
}).strict();

export const UserUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.UserUpdateManyArgs> = z.object({
  data: z.union([UserUpdateManyMutationInputSchema, UserUncheckedUpdateManyInputSchema]),
  where: UserWhereInputSchema.optional(),
}).strict();

export const UserDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.UserDeleteManyArgs> = z.object({
  where: UserWhereInputSchema.optional(),
}).strict();

export const CourseCreateArgsSchema: z.ZodType<PrismaClient.Prisma.CourseCreateArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  data: z.union([CourseCreateInputSchema, CourseUncheckedCreateInputSchema]),
}).strict();

export const CourseUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.CourseUpsertArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereUniqueInputSchema,
  create: z.union([CourseCreateInputSchema, CourseUncheckedCreateInputSchema]),
  update: z.union([CourseUpdateInputSchema, CourseUncheckedUpdateInputSchema]),
}).strict();

export const CourseCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.CourseCreateManyArgs> = z.object({
  data: CourseCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const CourseDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.CourseDeleteArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  where: CourseWhereUniqueInputSchema,
}).strict();

export const CourseUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateArgs> = z.object({
  select: CourseSelectSchema.optional(),
  include: CourseIncludeSchema.optional(),
  data: z.union([CourseUpdateInputSchema, CourseUncheckedUpdateInputSchema]),
  where: CourseWhereUniqueInputSchema,
}).strict();

export const CourseUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.CourseUpdateManyArgs> = z.object({
  data: z.union([CourseUpdateManyMutationInputSchema, CourseUncheckedUpdateManyInputSchema]),
  where: CourseWhereInputSchema.optional(),
}).strict();

export const CourseDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.CourseDeleteManyArgs> = z.object({
  where: CourseWhereInputSchema.optional(),
}).strict();

export const ModuleCreateArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  data: z.union([ModuleCreateInputSchema, ModuleUncheckedCreateInputSchema]),
}).strict();

export const ModuleUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleUpsertArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereUniqueInputSchema,
  create: z.union([ModuleCreateInputSchema, ModuleUncheckedCreateInputSchema]),
  update: z.union([ModuleUpdateInputSchema, ModuleUncheckedUpdateInputSchema]),
}).strict();

export const ModuleCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleCreateManyArgs> = z.object({
  data: ModuleCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const ModuleDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleDeleteArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  where: ModuleWhereUniqueInputSchema,
}).strict();

export const ModuleUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateArgs> = z.object({
  select: ModuleSelectSchema.optional(),
  include: ModuleIncludeSchema.optional(),
  data: z.union([ModuleUpdateInputSchema, ModuleUncheckedUpdateInputSchema]),
  where: ModuleWhereUniqueInputSchema,
}).strict();

export const ModuleUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleUpdateManyArgs> = z.object({
  data: z.union([ModuleUpdateManyMutationInputSchema, ModuleUncheckedUpdateManyInputSchema]),
  where: ModuleWhereInputSchema.optional(),
}).strict();

export const ModuleDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.ModuleDeleteManyArgs> = z.object({
  where: ModuleWhereInputSchema.optional(),
}).strict();

export const LessonCreateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonCreateArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  data: z.union([LessonCreateInputSchema, LessonUncheckedCreateInputSchema]),
}).strict();

export const LessonUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.LessonUpsertArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereUniqueInputSchema,
  create: z.union([LessonCreateInputSchema, LessonUncheckedCreateInputSchema]),
  update: z.union([LessonUpdateInputSchema, LessonUncheckedUpdateInputSchema]),
}).strict();

export const LessonCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonCreateManyArgs> = z.object({
  data: LessonCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const LessonDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.LessonDeleteArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  where: LessonWhereUniqueInputSchema,
}).strict();

export const LessonUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateArgs> = z.object({
  select: LessonSelectSchema.optional(),
  include: LessonIncludeSchema.optional(),
  data: z.union([LessonUpdateInputSchema, LessonUncheckedUpdateInputSchema]),
  where: LessonWhereUniqueInputSchema,
}).strict();

export const LessonUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonUpdateManyArgs> = z.object({
  data: z.union([LessonUpdateManyMutationInputSchema, LessonUncheckedUpdateManyInputSchema]),
  where: LessonWhereInputSchema.optional(),
}).strict();

export const LessonDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonDeleteManyArgs> = z.object({
  where: LessonWhereInputSchema.optional(),
}).strict();

export const LessonTypeCreateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  data: z.union([LessonTypeCreateInputSchema, LessonTypeUncheckedCreateInputSchema]),
}).strict();

export const LessonTypeUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpsertArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereUniqueInputSchema,
  create: z.union([LessonTypeCreateInputSchema, LessonTypeUncheckedCreateInputSchema]),
  update: z.union([LessonTypeUpdateInputSchema, LessonTypeUncheckedUpdateInputSchema]),
}).strict();

export const LessonTypeCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeCreateManyArgs> = z.object({
  data: LessonTypeCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const LessonTypeDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeDeleteArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  where: LessonTypeWhereUniqueInputSchema,
}).strict();

export const LessonTypeUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateArgs> = z.object({
  select: LessonTypeSelectSchema.optional(),
  include: LessonTypeIncludeSchema.optional(),
  data: z.union([LessonTypeUpdateInputSchema, LessonTypeUncheckedUpdateInputSchema]),
  where: LessonTypeWhereUniqueInputSchema,
}).strict();

export const LessonTypeUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeUpdateManyArgs> = z.object({
  data: z.union([LessonTypeUpdateManyMutationInputSchema, LessonTypeUncheckedUpdateManyInputSchema]),
  where: LessonTypeWhereInputSchema.optional(),
}).strict();

export const LessonTypeDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.LessonTypeDeleteManyArgs> = z.object({
  where: LessonTypeWhereInputSchema.optional(),
}).strict();

export const directus_activityCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  data: z.union([directus_activityCreateInputSchema, directus_activityUncheckedCreateInputSchema]),
}).strict();

export const directus_activityUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpsertArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereUniqueInputSchema,
  create: z.union([directus_activityCreateInputSchema, directus_activityUncheckedCreateInputSchema]),
  update: z.union([directus_activityUpdateInputSchema, directus_activityUncheckedUpdateInputSchema]),
}).strict();

export const directus_activityCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityCreateManyArgs> = z.object({
  data: directus_activityCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_activityDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityDeleteArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  where: directus_activityWhereUniqueInputSchema,
}).strict();

export const directus_activityUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateArgs> = z.object({
  select: directus_activitySelectSchema.optional(),
  include: directus_activityIncludeSchema.optional(),
  data: z.union([directus_activityUpdateInputSchema, directus_activityUncheckedUpdateInputSchema]),
  where: directus_activityWhereUniqueInputSchema,
}).strict();

export const directus_activityUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityUpdateManyArgs> = z.object({
  data: z.union([directus_activityUpdateManyMutationInputSchema, directus_activityUncheckedUpdateManyInputSchema]),
  where: directus_activityWhereInputSchema.optional(),
}).strict();

export const directus_activityDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_activityDeleteManyArgs> = z.object({
  where: directus_activityWhereInputSchema.optional(),
}).strict();

export const directus_collectionsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  data: z.union([directus_collectionsCreateInputSchema, directus_collectionsUncheckedCreateInputSchema]),
}).strict();

export const directus_collectionsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpsertArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereUniqueInputSchema,
  create: z.union([directus_collectionsCreateInputSchema, directus_collectionsUncheckedCreateInputSchema]),
  update: z.union([directus_collectionsUpdateInputSchema, directus_collectionsUncheckedUpdateInputSchema]),
}).strict();

export const directus_collectionsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsCreateManyArgs> = z.object({
  data: directus_collectionsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_collectionsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsDeleteArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  where: directus_collectionsWhereUniqueInputSchema,
}).strict();

export const directus_collectionsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateArgs> = z.object({
  select: directus_collectionsSelectSchema.optional(),
  include: directus_collectionsIncludeSchema.optional(),
  data: z.union([directus_collectionsUpdateInputSchema, directus_collectionsUncheckedUpdateInputSchema]),
  where: directus_collectionsWhereUniqueInputSchema,
}).strict();

export const directus_collectionsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsUpdateManyArgs> = z.object({
  data: z.union([directus_collectionsUpdateManyMutationInputSchema, directus_collectionsUncheckedUpdateManyInputSchema]),
  where: directus_collectionsWhereInputSchema.optional(),
}).strict();

export const directus_collectionsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_collectionsDeleteManyArgs> = z.object({
  where: directus_collectionsWhereInputSchema.optional(),
}).strict();

export const directus_dashboardsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  data: z.union([directus_dashboardsCreateInputSchema, directus_dashboardsUncheckedCreateInputSchema]),
}).strict();

export const directus_dashboardsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpsertArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereUniqueInputSchema,
  create: z.union([directus_dashboardsCreateInputSchema, directus_dashboardsUncheckedCreateInputSchema]),
  update: z.union([directus_dashboardsUpdateInputSchema, directus_dashboardsUncheckedUpdateInputSchema]),
}).strict();

export const directus_dashboardsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsCreateManyArgs> = z.object({
  data: directus_dashboardsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_dashboardsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsDeleteArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  where: directus_dashboardsWhereUniqueInputSchema,
}).strict();

export const directus_dashboardsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateArgs> = z.object({
  select: directus_dashboardsSelectSchema.optional(),
  include: directus_dashboardsIncludeSchema.optional(),
  data: z.union([directus_dashboardsUpdateInputSchema, directus_dashboardsUncheckedUpdateInputSchema]),
  where: directus_dashboardsWhereUniqueInputSchema,
}).strict();

export const directus_dashboardsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsUpdateManyArgs> = z.object({
  data: z.union([directus_dashboardsUpdateManyMutationInputSchema, directus_dashboardsUncheckedUpdateManyInputSchema]),
  where: directus_dashboardsWhereInputSchema.optional(),
}).strict();

export const directus_dashboardsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_dashboardsDeleteManyArgs> = z.object({
  where: directus_dashboardsWhereInputSchema.optional(),
}).strict();

export const directus_fieldsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsCreateArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  data: z.union([directus_fieldsCreateInputSchema, directus_fieldsUncheckedCreateInputSchema]),
}).strict();

export const directus_fieldsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUpsertArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereUniqueInputSchema,
  create: z.union([directus_fieldsCreateInputSchema, directus_fieldsUncheckedCreateInputSchema]),
  update: z.union([directus_fieldsUpdateInputSchema, directus_fieldsUncheckedUpdateInputSchema]),
}).strict();

export const directus_fieldsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsCreateManyArgs> = z.object({
  data: directus_fieldsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_fieldsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsDeleteArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  where: directus_fieldsWhereUniqueInputSchema,
}).strict();

export const directus_fieldsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUpdateArgs> = z.object({
  select: directus_fieldsSelectSchema.optional(),
  data: z.union([directus_fieldsUpdateInputSchema, directus_fieldsUncheckedUpdateInputSchema]),
  where: directus_fieldsWhereUniqueInputSchema,
}).strict();

export const directus_fieldsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsUpdateManyArgs> = z.object({
  data: z.union([directus_fieldsUpdateManyMutationInputSchema, directus_fieldsUncheckedUpdateManyInputSchema]),
  where: directus_fieldsWhereInputSchema.optional(),
}).strict();

export const directus_fieldsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_fieldsDeleteManyArgs> = z.object({
  where: directus_fieldsWhereInputSchema.optional(),
}).strict();

export const directus_filesCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  data: z.union([directus_filesCreateInputSchema, directus_filesUncheckedCreateInputSchema]),
}).strict();

export const directus_filesUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpsertArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereUniqueInputSchema,
  create: z.union([directus_filesCreateInputSchema, directus_filesUncheckedCreateInputSchema]),
  update: z.union([directus_filesUpdateInputSchema, directus_filesUncheckedUpdateInputSchema]),
}).strict();

export const directus_filesCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesCreateManyArgs> = z.object({
  data: directus_filesCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_filesDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesDeleteArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  where: directus_filesWhereUniqueInputSchema,
}).strict();

export const directus_filesUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateArgs> = z.object({
  select: directus_filesSelectSchema.optional(),
  include: directus_filesIncludeSchema.optional(),
  data: z.union([directus_filesUpdateInputSchema, directus_filesUncheckedUpdateInputSchema]),
  where: directus_filesWhereUniqueInputSchema,
}).strict();

export const directus_filesUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesUpdateManyArgs> = z.object({
  data: z.union([directus_filesUpdateManyMutationInputSchema, directus_filesUncheckedUpdateManyInputSchema]),
  where: directus_filesWhereInputSchema.optional(),
}).strict();

export const directus_filesDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_filesDeleteManyArgs> = z.object({
  where: directus_filesWhereInputSchema.optional(),
}).strict();

export const directus_flowsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  data: z.union([directus_flowsCreateInputSchema, directus_flowsUncheckedCreateInputSchema]),
}).strict();

export const directus_flowsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpsertArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereUniqueInputSchema,
  create: z.union([directus_flowsCreateInputSchema, directus_flowsUncheckedCreateInputSchema]),
  update: z.union([directus_flowsUpdateInputSchema, directus_flowsUncheckedUpdateInputSchema]),
}).strict();

export const directus_flowsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsCreateManyArgs> = z.object({
  data: directus_flowsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_flowsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsDeleteArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  where: directus_flowsWhereUniqueInputSchema,
}).strict();

export const directus_flowsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateArgs> = z.object({
  select: directus_flowsSelectSchema.optional(),
  include: directus_flowsIncludeSchema.optional(),
  data: z.union([directus_flowsUpdateInputSchema, directus_flowsUncheckedUpdateInputSchema]),
  where: directus_flowsWhereUniqueInputSchema,
}).strict();

export const directus_flowsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsUpdateManyArgs> = z.object({
  data: z.union([directus_flowsUpdateManyMutationInputSchema, directus_flowsUncheckedUpdateManyInputSchema]),
  where: directus_flowsWhereInputSchema.optional(),
}).strict();

export const directus_flowsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_flowsDeleteManyArgs> = z.object({
  where: directus_flowsWhereInputSchema.optional(),
}).strict();

export const directus_foldersCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  data: z.union([directus_foldersCreateInputSchema, directus_foldersUncheckedCreateInputSchema]),
}).strict();

export const directus_foldersUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpsertArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereUniqueInputSchema,
  create: z.union([directus_foldersCreateInputSchema, directus_foldersUncheckedCreateInputSchema]),
  update: z.union([directus_foldersUpdateInputSchema, directus_foldersUncheckedUpdateInputSchema]),
}).strict();

export const directus_foldersCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersCreateManyArgs> = z.object({
  data: directus_foldersCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_foldersDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersDeleteArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  where: directus_foldersWhereUniqueInputSchema,
}).strict();

export const directus_foldersUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateArgs> = z.object({
  select: directus_foldersSelectSchema.optional(),
  include: directus_foldersIncludeSchema.optional(),
  data: z.union([directus_foldersUpdateInputSchema, directus_foldersUncheckedUpdateInputSchema]),
  where: directus_foldersWhereUniqueInputSchema,
}).strict();

export const directus_foldersUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersUpdateManyArgs> = z.object({
  data: z.union([directus_foldersUpdateManyMutationInputSchema, directus_foldersUncheckedUpdateManyInputSchema]),
  where: directus_foldersWhereInputSchema.optional(),
}).strict();

export const directus_foldersDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_foldersDeleteManyArgs> = z.object({
  where: directus_foldersWhereInputSchema.optional(),
}).strict();

export const directus_migrationsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsCreateArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  data: z.union([directus_migrationsCreateInputSchema, directus_migrationsUncheckedCreateInputSchema]),
}).strict();

export const directus_migrationsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUpsertArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereUniqueInputSchema,
  create: z.union([directus_migrationsCreateInputSchema, directus_migrationsUncheckedCreateInputSchema]),
  update: z.union([directus_migrationsUpdateInputSchema, directus_migrationsUncheckedUpdateInputSchema]),
}).strict();

export const directus_migrationsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsCreateManyArgs> = z.object({
  data: directus_migrationsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_migrationsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsDeleteArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  where: directus_migrationsWhereUniqueInputSchema,
}).strict();

export const directus_migrationsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUpdateArgs> = z.object({
  select: directus_migrationsSelectSchema.optional(),
  data: z.union([directus_migrationsUpdateInputSchema, directus_migrationsUncheckedUpdateInputSchema]),
  where: directus_migrationsWhereUniqueInputSchema,
}).strict();

export const directus_migrationsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsUpdateManyArgs> = z.object({
  data: z.union([directus_migrationsUpdateManyMutationInputSchema, directus_migrationsUncheckedUpdateManyInputSchema]),
  where: directus_migrationsWhereInputSchema.optional(),
}).strict();

export const directus_migrationsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_migrationsDeleteManyArgs> = z.object({
  where: directus_migrationsWhereInputSchema.optional(),
}).strict();

export const directus_notificationsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  data: z.union([directus_notificationsCreateInputSchema, directus_notificationsUncheckedCreateInputSchema]),
}).strict();

export const directus_notificationsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpsertArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereUniqueInputSchema,
  create: z.union([directus_notificationsCreateInputSchema, directus_notificationsUncheckedCreateInputSchema]),
  update: z.union([directus_notificationsUpdateInputSchema, directus_notificationsUncheckedUpdateInputSchema]),
}).strict();

export const directus_notificationsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsCreateManyArgs> = z.object({
  data: directus_notificationsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_notificationsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsDeleteArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  where: directus_notificationsWhereUniqueInputSchema,
}).strict();

export const directus_notificationsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateArgs> = z.object({
  select: directus_notificationsSelectSchema.optional(),
  include: directus_notificationsIncludeSchema.optional(),
  data: z.union([directus_notificationsUpdateInputSchema, directus_notificationsUncheckedUpdateInputSchema]),
  where: directus_notificationsWhereUniqueInputSchema,
}).strict();

export const directus_notificationsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsUpdateManyArgs> = z.object({
  data: z.union([directus_notificationsUpdateManyMutationInputSchema, directus_notificationsUncheckedUpdateManyInputSchema]),
  where: directus_notificationsWhereInputSchema.optional(),
}).strict();

export const directus_notificationsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_notificationsDeleteManyArgs> = z.object({
  where: directus_notificationsWhereInputSchema.optional(),
}).strict();

export const directus_operationsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  data: z.union([directus_operationsCreateInputSchema, directus_operationsUncheckedCreateInputSchema]),
}).strict();

export const directus_operationsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpsertArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereUniqueInputSchema,
  create: z.union([directus_operationsCreateInputSchema, directus_operationsUncheckedCreateInputSchema]),
  update: z.union([directus_operationsUpdateInputSchema, directus_operationsUncheckedUpdateInputSchema]),
}).strict();

export const directus_operationsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsCreateManyArgs> = z.object({
  data: directus_operationsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_operationsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsDeleteArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  where: directus_operationsWhereUniqueInputSchema,
}).strict();

export const directus_operationsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateArgs> = z.object({
  select: directus_operationsSelectSchema.optional(),
  include: directus_operationsIncludeSchema.optional(),
  data: z.union([directus_operationsUpdateInputSchema, directus_operationsUncheckedUpdateInputSchema]),
  where: directus_operationsWhereUniqueInputSchema,
}).strict();

export const directus_operationsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsUpdateManyArgs> = z.object({
  data: z.union([directus_operationsUpdateManyMutationInputSchema, directus_operationsUncheckedUpdateManyInputSchema]),
  where: directus_operationsWhereInputSchema.optional(),
}).strict();

export const directus_operationsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_operationsDeleteManyArgs> = z.object({
  where: directus_operationsWhereInputSchema.optional(),
}).strict();

export const directus_panelsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  data: z.union([directus_panelsCreateInputSchema, directus_panelsUncheckedCreateInputSchema]),
}).strict();

export const directus_panelsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpsertArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereUniqueInputSchema,
  create: z.union([directus_panelsCreateInputSchema, directus_panelsUncheckedCreateInputSchema]),
  update: z.union([directus_panelsUpdateInputSchema, directus_panelsUncheckedUpdateInputSchema]),
}).strict();

export const directus_panelsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsCreateManyArgs> = z.object({
  data: directus_panelsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_panelsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsDeleteArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  where: directus_panelsWhereUniqueInputSchema,
}).strict();

export const directus_panelsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateArgs> = z.object({
  select: directus_panelsSelectSchema.optional(),
  include: directus_panelsIncludeSchema.optional(),
  data: z.union([directus_panelsUpdateInputSchema, directus_panelsUncheckedUpdateInputSchema]),
  where: directus_panelsWhereUniqueInputSchema,
}).strict();

export const directus_panelsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsUpdateManyArgs> = z.object({
  data: z.union([directus_panelsUpdateManyMutationInputSchema, directus_panelsUncheckedUpdateManyInputSchema]),
  where: directus_panelsWhereInputSchema.optional(),
}).strict();

export const directus_panelsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_panelsDeleteManyArgs> = z.object({
  where: directus_panelsWhereInputSchema.optional(),
}).strict();

export const directus_permissionsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  data: z.union([directus_permissionsCreateInputSchema, directus_permissionsUncheckedCreateInputSchema]),
}).strict();

export const directus_permissionsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpsertArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereUniqueInputSchema,
  create: z.union([directus_permissionsCreateInputSchema, directus_permissionsUncheckedCreateInputSchema]),
  update: z.union([directus_permissionsUpdateInputSchema, directus_permissionsUncheckedUpdateInputSchema]),
}).strict();

export const directus_permissionsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsCreateManyArgs> = z.object({
  data: directus_permissionsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_permissionsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsDeleteArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  where: directus_permissionsWhereUniqueInputSchema,
}).strict();

export const directus_permissionsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateArgs> = z.object({
  select: directus_permissionsSelectSchema.optional(),
  include: directus_permissionsIncludeSchema.optional(),
  data: z.union([directus_permissionsUpdateInputSchema, directus_permissionsUncheckedUpdateInputSchema]),
  where: directus_permissionsWhereUniqueInputSchema,
}).strict();

export const directus_permissionsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsUpdateManyArgs> = z.object({
  data: z.union([directus_permissionsUpdateManyMutationInputSchema, directus_permissionsUncheckedUpdateManyInputSchema]),
  where: directus_permissionsWhereInputSchema.optional(),
}).strict();

export const directus_permissionsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_permissionsDeleteManyArgs> = z.object({
  where: directus_permissionsWhereInputSchema.optional(),
}).strict();

export const directus_presetsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  data: z.union([directus_presetsCreateInputSchema, directus_presetsUncheckedCreateInputSchema]),
}).strict();

export const directus_presetsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpsertArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereUniqueInputSchema,
  create: z.union([directus_presetsCreateInputSchema, directus_presetsUncheckedCreateInputSchema]),
  update: z.union([directus_presetsUpdateInputSchema, directus_presetsUncheckedUpdateInputSchema]),
}).strict();

export const directus_presetsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsCreateManyArgs> = z.object({
  data: directus_presetsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_presetsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsDeleteArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  where: directus_presetsWhereUniqueInputSchema,
}).strict();

export const directus_presetsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateArgs> = z.object({
  select: directus_presetsSelectSchema.optional(),
  include: directus_presetsIncludeSchema.optional(),
  data: z.union([directus_presetsUpdateInputSchema, directus_presetsUncheckedUpdateInputSchema]),
  where: directus_presetsWhereUniqueInputSchema,
}).strict();

export const directus_presetsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsUpdateManyArgs> = z.object({
  data: z.union([directus_presetsUpdateManyMutationInputSchema, directus_presetsUncheckedUpdateManyInputSchema]),
  where: directus_presetsWhereInputSchema.optional(),
}).strict();

export const directus_presetsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_presetsDeleteManyArgs> = z.object({
  where: directus_presetsWhereInputSchema.optional(),
}).strict();

export const directus_relationsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsCreateArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  data: z.union([directus_relationsCreateInputSchema, directus_relationsUncheckedCreateInputSchema]),
}).strict();

export const directus_relationsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUpsertArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereUniqueInputSchema,
  create: z.union([directus_relationsCreateInputSchema, directus_relationsUncheckedCreateInputSchema]),
  update: z.union([directus_relationsUpdateInputSchema, directus_relationsUncheckedUpdateInputSchema]),
}).strict();

export const directus_relationsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsCreateManyArgs> = z.object({
  data: directus_relationsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_relationsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsDeleteArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  where: directus_relationsWhereUniqueInputSchema,
}).strict();

export const directus_relationsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUpdateArgs> = z.object({
  select: directus_relationsSelectSchema.optional(),
  data: z.union([directus_relationsUpdateInputSchema, directus_relationsUncheckedUpdateInputSchema]),
  where: directus_relationsWhereUniqueInputSchema,
}).strict();

export const directus_relationsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsUpdateManyArgs> = z.object({
  data: z.union([directus_relationsUpdateManyMutationInputSchema, directus_relationsUncheckedUpdateManyInputSchema]),
  where: directus_relationsWhereInputSchema.optional(),
}).strict();

export const directus_relationsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_relationsDeleteManyArgs> = z.object({
  where: directus_relationsWhereInputSchema.optional(),
}).strict();

export const directus_revisionsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  data: z.union([directus_revisionsCreateInputSchema, directus_revisionsUncheckedCreateInputSchema]),
}).strict();

export const directus_revisionsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpsertArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereUniqueInputSchema,
  create: z.union([directus_revisionsCreateInputSchema, directus_revisionsUncheckedCreateInputSchema]),
  update: z.union([directus_revisionsUpdateInputSchema, directus_revisionsUncheckedUpdateInputSchema]),
}).strict();

export const directus_revisionsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsCreateManyArgs> = z.object({
  data: directus_revisionsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_revisionsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsDeleteArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  where: directus_revisionsWhereUniqueInputSchema,
}).strict();

export const directus_revisionsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateArgs> = z.object({
  select: directus_revisionsSelectSchema.optional(),
  include: directus_revisionsIncludeSchema.optional(),
  data: z.union([directus_revisionsUpdateInputSchema, directus_revisionsUncheckedUpdateInputSchema]),
  where: directus_revisionsWhereUniqueInputSchema,
}).strict();

export const directus_revisionsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsUpdateManyArgs> = z.object({
  data: z.union([directus_revisionsUpdateManyMutationInputSchema, directus_revisionsUncheckedUpdateManyInputSchema]),
  where: directus_revisionsWhereInputSchema.optional(),
}).strict();

export const directus_revisionsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_revisionsDeleteManyArgs> = z.object({
  where: directus_revisionsWhereInputSchema.optional(),
}).strict();

export const directus_rolesCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  data: z.union([directus_rolesCreateInputSchema, directus_rolesUncheckedCreateInputSchema]),
}).strict();

export const directus_rolesUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpsertArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereUniqueInputSchema,
  create: z.union([directus_rolesCreateInputSchema, directus_rolesUncheckedCreateInputSchema]),
  update: z.union([directus_rolesUpdateInputSchema, directus_rolesUncheckedUpdateInputSchema]),
}).strict();

export const directus_rolesCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesCreateManyArgs> = z.object({
  data: directus_rolesCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_rolesDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesDeleteArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  where: directus_rolesWhereUniqueInputSchema,
}).strict();

export const directus_rolesUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateArgs> = z.object({
  select: directus_rolesSelectSchema.optional(),
  include: directus_rolesIncludeSchema.optional(),
  data: z.union([directus_rolesUpdateInputSchema, directus_rolesUncheckedUpdateInputSchema]),
  where: directus_rolesWhereUniqueInputSchema,
}).strict();

export const directus_rolesUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesUpdateManyArgs> = z.object({
  data: z.union([directus_rolesUpdateManyMutationInputSchema, directus_rolesUncheckedUpdateManyInputSchema]),
  where: directus_rolesWhereInputSchema.optional(),
}).strict();

export const directus_rolesDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_rolesDeleteManyArgs> = z.object({
  where: directus_rolesWhereInputSchema.optional(),
}).strict();

export const directus_sessionsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  data: z.union([directus_sessionsCreateInputSchema, directus_sessionsUncheckedCreateInputSchema]),
}).strict();

export const directus_sessionsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpsertArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereUniqueInputSchema,
  create: z.union([directus_sessionsCreateInputSchema, directus_sessionsUncheckedCreateInputSchema]),
  update: z.union([directus_sessionsUpdateInputSchema, directus_sessionsUncheckedUpdateInputSchema]),
}).strict();

export const directus_sessionsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsCreateManyArgs> = z.object({
  data: directus_sessionsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sessionsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsDeleteArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  where: directus_sessionsWhereUniqueInputSchema,
}).strict();

export const directus_sessionsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateArgs> = z.object({
  select: directus_sessionsSelectSchema.optional(),
  include: directus_sessionsIncludeSchema.optional(),
  data: z.union([directus_sessionsUpdateInputSchema, directus_sessionsUncheckedUpdateInputSchema]),
  where: directus_sessionsWhereUniqueInputSchema,
}).strict();

export const directus_sessionsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsUpdateManyArgs> = z.object({
  data: z.union([directus_sessionsUpdateManyMutationInputSchema, directus_sessionsUncheckedUpdateManyInputSchema]),
  where: directus_sessionsWhereInputSchema.optional(),
}).strict();

export const directus_sessionsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sessionsDeleteManyArgs> = z.object({
  where: directus_sessionsWhereInputSchema.optional(),
}).strict();

export const directus_settingsCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  data: z.union([directus_settingsCreateInputSchema, directus_settingsUncheckedCreateInputSchema]),
}).strict();

export const directus_settingsUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpsertArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereUniqueInputSchema,
  create: z.union([directus_settingsCreateInputSchema, directus_settingsUncheckedCreateInputSchema]),
  update: z.union([directus_settingsUpdateInputSchema, directus_settingsUncheckedUpdateInputSchema]),
}).strict();

export const directus_settingsCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsCreateManyArgs> = z.object({
  data: directus_settingsCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_settingsDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsDeleteArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  where: directus_settingsWhereUniqueInputSchema,
}).strict();

export const directus_settingsUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateArgs> = z.object({
  select: directus_settingsSelectSchema.optional(),
  include: directus_settingsIncludeSchema.optional(),
  data: z.union([directus_settingsUpdateInputSchema, directus_settingsUncheckedUpdateInputSchema]),
  where: directus_settingsWhereUniqueInputSchema,
}).strict();

export const directus_settingsUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsUpdateManyArgs> = z.object({
  data: z.union([directus_settingsUpdateManyMutationInputSchema, directus_settingsUncheckedUpdateManyInputSchema]),
  where: directus_settingsWhereInputSchema.optional(),
}).strict();

export const directus_settingsDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_settingsDeleteManyArgs> = z.object({
  where: directus_settingsWhereInputSchema.optional(),
}).strict();

export const directus_sharesCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  data: z.union([directus_sharesCreateInputSchema, directus_sharesUncheckedCreateInputSchema]),
}).strict();

export const directus_sharesUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpsertArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereUniqueInputSchema,
  create: z.union([directus_sharesCreateInputSchema, directus_sharesUncheckedCreateInputSchema]),
  update: z.union([directus_sharesUpdateInputSchema, directus_sharesUncheckedUpdateInputSchema]),
}).strict();

export const directus_sharesCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesCreateManyArgs> = z.object({
  data: directus_sharesCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_sharesDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesDeleteArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  where: directus_sharesWhereUniqueInputSchema,
}).strict();

export const directus_sharesUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateArgs> = z.object({
  select: directus_sharesSelectSchema.optional(),
  include: directus_sharesIncludeSchema.optional(),
  data: z.union([directus_sharesUpdateInputSchema, directus_sharesUncheckedUpdateInputSchema]),
  where: directus_sharesWhereUniqueInputSchema,
}).strict();

export const directus_sharesUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesUpdateManyArgs> = z.object({
  data: z.union([directus_sharesUpdateManyMutationInputSchema, directus_sharesUncheckedUpdateManyInputSchema]),
  where: directus_sharesWhereInputSchema.optional(),
}).strict();

export const directus_sharesDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_sharesDeleteManyArgs> = z.object({
  where: directus_sharesWhereInputSchema.optional(),
}).strict();

export const directus_usersCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  data: z.union([directus_usersCreateInputSchema, directus_usersUncheckedCreateInputSchema]),
}).strict();

export const directus_usersUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpsertArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereUniqueInputSchema,
  create: z.union([directus_usersCreateInputSchema, directus_usersUncheckedCreateInputSchema]),
  update: z.union([directus_usersUpdateInputSchema, directus_usersUncheckedUpdateInputSchema]),
}).strict();

export const directus_usersCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersCreateManyArgs> = z.object({
  data: directus_usersCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_usersDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersDeleteArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  where: directus_usersWhereUniqueInputSchema,
}).strict();

export const directus_usersUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateArgs> = z.object({
  select: directus_usersSelectSchema.optional(),
  include: directus_usersIncludeSchema.optional(),
  data: z.union([directus_usersUpdateInputSchema, directus_usersUncheckedUpdateInputSchema]),
  where: directus_usersWhereUniqueInputSchema,
}).strict();

export const directus_usersUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersUpdateManyArgs> = z.object({
  data: z.union([directus_usersUpdateManyMutationInputSchema, directus_usersUncheckedUpdateManyInputSchema]),
  where: directus_usersWhereInputSchema.optional(),
}).strict();

export const directus_usersDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_usersDeleteManyArgs> = z.object({
  where: directus_usersWhereInputSchema.optional(),
}).strict();

export const directus_webhooksCreateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksCreateArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  data: z.union([directus_webhooksCreateInputSchema, directus_webhooksUncheckedCreateInputSchema]),
}).strict();

export const directus_webhooksUpsertArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUpsertArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereUniqueInputSchema,
  create: z.union([directus_webhooksCreateInputSchema, directus_webhooksUncheckedCreateInputSchema]),
  update: z.union([directus_webhooksUpdateInputSchema, directus_webhooksUncheckedUpdateInputSchema]),
}).strict();

export const directus_webhooksCreateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksCreateManyArgs> = z.object({
  data: directus_webhooksCreateManyInputSchema.array(),
  skipDuplicates: z.boolean().optional(),
}).strict();

export const directus_webhooksDeleteArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksDeleteArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  where: directus_webhooksWhereUniqueInputSchema,
}).strict();

export const directus_webhooksUpdateArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUpdateArgs> = z.object({
  select: directus_webhooksSelectSchema.optional(),
  data: z.union([directus_webhooksUpdateInputSchema, directus_webhooksUncheckedUpdateInputSchema]),
  where: directus_webhooksWhereUniqueInputSchema,
}).strict();

export const directus_webhooksUpdateManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksUpdateManyArgs> = z.object({
  data: z.union([directus_webhooksUpdateManyMutationInputSchema, directus_webhooksUncheckedUpdateManyInputSchema]),
  where: directus_webhooksWhereInputSchema.optional(),
}).strict();

export const directus_webhooksDeleteManyArgsSchema: z.ZodType<PrismaClient.Prisma.directus_webhooksDeleteManyArgs> = z.object({
  where: directus_webhooksWhereInputSchema.optional(),
}).strict();
